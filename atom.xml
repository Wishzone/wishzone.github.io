<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>请移步以下网址</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/atom.xml" rel="self" type="application/rss+xml"/>
    
    <description>该网站仅为机械移植</description>
    <pubDate>Wed, 25 Oct 2023 15:11:03 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>网站引导</title>
      <link>http://example.com/2023/10/14/%E7%BD%91%E7%AB%99%E5%BC%95%E5%AF%BC/</link>
      <guid>http://example.com/2023/10/14/%E7%BD%91%E7%AB%99%E5%BC%95%E5%AF%BC/</guid>
      <pubDate>Sat, 14 Oct 2023 03:19:23 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;主网站&quot;&gt;&lt;a href=&quot;#主网站&quot; class=&quot;headerlink&quot; title=&quot;主网站&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wishzone.x3322.net:10024&quot;&gt;主网站&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;ChatGPT&quot;&gt;&lt;a hre</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="主网站"><a href="#主网站" class="headerlink" title="主网站"></a><a href="http://wishzone.x3322.net:10024">主网站</a></h2><h2 id="ChatGPT"><a href="#ChatGPT" class="headerlink" title="ChatGPT"></a><a href="http://wishzone.x3322.net:3000">ChatGPT</a></h2>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Windows/">Windows</category>
      
      
      
      <comments>http://example.com/2023/10/14/%E7%BD%91%E7%AB%99%E5%BC%95%E5%AF%BC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP32蓝牙音频传输</title>
      <link>http://example.com/2023/09/27/esp32%E8%93%9D%E7%89%99%E9%9F%B3%E9%A2%91%E4%BC%A0%E8%BE%93/</link>
      <guid>http://example.com/2023/09/27/esp32%E8%93%9D%E7%89%99%E9%9F%B3%E9%A2%91%E4%BC%A0%E8%BE%93/</guid>
      <pubDate>Tue, 26 Sep 2023 16:13:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;采用esp32蓝牙功能进行音乐传输&lt;/p&gt;
&lt;p&gt;采用esp32内置dac进行音乐的解码&lt;/p&gt;
&lt;p&gt;参考地址&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pschatzmann/ESP32-A2DP&quot;&gt;GitHub - pschatzmann/</description>
        
      
      
      
      <content:encoded><![CDATA[<p>采用esp32蓝牙功能进行音乐传输</p><p>采用esp32内置dac进行音乐的解码</p><p>参考地址</p><p><a href="https://github.com/pschatzmann/ESP32-A2DP">GitHub - pschatzmann/ESP32-A2DP: A Simple ESP32 Bluetooth A2DP Library (to implement a Music Receiver or Sender) that supports Arduino, PlatformIO and Espressif IDF</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/uncategorized/">uncategorized</category>
      
      
      
      <comments>http://example.com/2023/09/27/esp32%E8%93%9D%E7%89%99%E9%9F%B3%E9%A2%91%E4%BC%A0%E8%BE%93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>搭建CSGO服务器</title>
      <link>http://example.com/2023/09/13/%E6%90%AD%E5%BB%BAcsgo%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <guid>http://example.com/2023/09/13/%E6%90%AD%E5%BB%BAcsgo%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <pubDate>Wed, 13 Sep 2023 13:00:15 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;配置STEAMCMD&quot;&gt;&lt;a href=&quot;#配置STEAMCMD&quot; class=&quot;headerlink&quot; title=&quot;配置STEAMCMD&quot;&gt;&lt;/a&gt;配置STEAMCMD&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="配置STEAMCMD"><a href="#配置STEAMCMD" class="headerlink" title="配置STEAMCMD"></a>配置STEAMCMD</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">安装steamcmd</span><br><span class="line">sudo apt install steamcmd</span><br><span class="line">运行steamcmd</span><br><span class="line">steamcmd</span><br><span class="line">以匿名用户身份登录steamcmd</span><br><span class="line">login anonymous</span><br><span class="line">创建CS:GO服务器文件夹，该文件夹在steamcmd文件夹目录下</span><br><span class="line">force_install_dir ./csgo</span><br><span class="line">安装csgo服务端</span><br><span class="line">app_update 740 validate</span><br><span class="line">出现Success！安装完成后，退出steamcmd</span><br><span class="line">quit</span><br><span class="line">编写steamcmd的runscript脚本</span><br><span class="line">nano /home/wishzone/Software/csgo/update.txt</span><br><span class="line">写入以下语句，然后保存退出（退出点一下esc然后输入:wq，回车一下就ok了）</span><br><span class="line">login anonymous</span><br><span class="line">force_install_dir ./csgo</span><br><span class="line">app_update 740</span><br><span class="line">quit</span><br><span class="line">编写steamcmd运行脚本</span><br><span class="line">nano csgo_server_update.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">steamcmd +runscript /home/wishzone/Software/csgo/update.txt</span><br><span class="line">给755权限</span><br><span class="line">chmod 775 /home/wishzone/Software/csgo/csgo_server_update.sh</span><br><span class="line">然后在同目录目录下运行更新脚本csgo_server_update.sh</span><br><span class="line">./home/wishzone/Software/csgo/csgo_server_update.sh</span><br><span class="line">创建server.cfg</span><br><span class="line">cd ~/.local/share/Steam/steamcmd/csgo/cfg</span><br><span class="line">nano server.cfg</span><br></pre></td></tr></table></figure><p><strong>先去<a href="https://steamcommunity.com/dev/managegameservers">Steam游戏服务器帐户管理</a>注册自己的令牌，这里注意两个问题，一个是使用大号有一定几率会封禁15天左右，建议使用小号，第二点是新号在注册这个令牌时候，先去申请这个号的<a href="https://steamcommunity.com/dev/apikey">Steam网页API注册</a>，不然令牌无效</strong></p><p>// steam account，修改为自己刚刚申请的登陆令牌<br>sv_setsteamaccount “4FXXXXXXXXXXXXXXXXXXXXXXXXX”<br>// 服务器名称，安全方面<br>hostname “Fisher’s server” // 服务器在社区服务器浏览器上显示的名称，自行修改为喜欢的名字<br>rcon_password “12345678” // CS:GO远程控制台密码，修改为自己定义的密码<br>sv_password “87654321” // 服务器连接密码，在连接服务器时输入，不要密码可以留空<br>// 游戏参数方面<br>sv_maxrate “128000” // 服务器最大带宽使用量，默认值非常小，因此会造成choke值异常，此处建议改为128000<br>sv_minrate “80000” // 服务器最小带宽使用量，与上面同理，此处建议改为80000<br>sv_accelerate “5.5” // 人物移动速度，默认值为10，快到恶心，此处建议修改为5.5</p><p>13.开放UDP 你的端口（范围1-65535）</p><h2 id="启动CSGO"><a href="#启动CSGO" class="headerlink" title="启动CSGO"></a>启动CSGO</h2><p>使用APT安装的steamcmd的默认安装好位置在~/.local/share/Steam/steamcmd</p><p>进入该位置，再进入csgo文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./srcds_run -debug -game csgo -console -port 你的端口 +map de_dust2 -tickrate 128</span><br><span class="line"></span><br><span class="line">参数解释：</span><br><span class="line">-debug 开启调试模式</span><br><span class="line">-game 指明游戏，此处是csgo</span><br><span class="line">-console 打开游戏控制台</span><br><span class="line">-port 游戏服务器端口，此处是你NAT出去的端口</span><br><span class="line">+map 服务器加载的地图</span><br></pre></td></tr></table></figure><h2 id="常见问题与解决办法"><a href="#常见问题与解决办法" class="headerlink" title="常见问题与解决办法"></a>常见问题与解决办法</h2><h3 id="Ubuntu-22-04或Debian-12系统，GCC-7-0-0相关报错"><a href="#Ubuntu-22-04或Debian-12系统，GCC-7-0-0相关报错" class="headerlink" title="Ubuntu_22.04或Debian_12系统，GCC_7.0.0相关报错"></a>Ubuntu_22.04或Debian_12系统，GCC_7.0.0相关报错</h3><p>3.1 报错原因</p><p>启动csgo服务器时报错：Failed to open libtier0.so (/home/aaa/Steam/csgo-ds/bin/libgcc_s.so.1: version `GCC_7.0.0’ not found (required by /lib32/libstdc++.so.6))</p><p>报错：libgcc_s.so.1不包含GCC_7.0.0<br>github上有人提出相似问题，有回复者解释原因：“It seems that Ubuntu 22.04 is to new for CS:GO. bin/libgcc_s.so.1 and /lib32/libstdc++.so.6 are not compatible”，就是说这个版本的ubuntu系统对于csgo来说太新了（同理，debian_12也是当前debian最新版本），同时也给出了命令来解决此问题，命令：sudo apt install lib32gcc-7-dev ，无奈我使用这条命令时总提示无法定位软件包（见下图），切换清华、阿里、华为软件源均无法找到软件包</p><p>国内软件源不提供 lib32gcc-7-dev 软件包<br>分析一下报错提示，是csgo服务器文件目录下bin文件夹的libgcc_s.so.1报的错，用命令来检查一下它是否包含GCC_7.0.0（见下图），命令：strings /home/aaa/Steam/csgo-ds/bin/libgcc_s.so.1grep GCC</p><p>csgo目录下的libgcc_s.so.1不包含GCC_7.0.0<br>从截图可看到csgo服务器文件里的libgcc_s.so.1确实不包含GCC_7.0.0</p><p>注：</p><p>(1) 上述命令中csgo服务器文件的路径要更改为自己的文件路径</p><p>(2) 如果提示找不到命令 “strings”，则需要再安装一个软件，命令：sudo apt install binutils</p><p>3.2 解决方法</p><p>缺什么补什么，找一个包含GCC_7.0.0的libgcc_s.so.1文件替换到csgo服务器文件里即可</p><p>恰好，ubuntu22.04系统（或 debiain_12系统）的 usr/lib32 目录下也有一个libgcc_s.so.1文件，用命令查看一下（见下图），命令：strings /usr/lib32/libgcc_s.so.1grep GCC</p><p>usr/lib32 文件夹里的 libgcc_s.so.1<br>从截图可以看出，这里的libgcc_s.so.1满足要求，接下来就是替换的步骤：</p><p>① 切换路径，命令：cd /home/aaa/Steam/csgo-ds/bin/</p><p>复制一份libgcc_s.so.1作为备份，命令：sudo cp libgcc_s.so.1 libgcc_s.so.1.backup</p><p>② 替换libgcc_s.so.1，命令：sudo cp /usr/lib32/libgcc_s.so.1 /home/aaa/Steam/csgo-ds/bin/libgcc_s.so.1</p><p>③ 启动csgo服务器，此时应能正常启动</p><p>注：</p><p>(1) 上述命令里的csgo服务器路径要更改为自己的文件路径</p><p>(2) 理论上ubuntu_22.04或debian_12系统 usr/lib32 目录下的 libgcc_s.so.1 应能满足要求，如果找不到此文件，我把它单独放在蓝奏云网盘一份，把它下载下来，解压然后替换一下也可以解决问题</p><p>libgcc_s.so.1的蓝奏云下载链接：<a href="https://wwct.lanzoue.com/iBcUQ0pjvm2f">https://wwct.lanzoue.com/iBcUQ0pjvm2f</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      
      <comments>http://example.com/2023/09/13/%E6%90%AD%E5%BB%BAcsgo%E6%9C%8D%E5%8A%A1%E5%99%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Rock5B</title>
      <link>http://example.com/2023/09/12/rock5b/</link>
      <guid>http://example.com/2023/09/12/rock5b/</guid>
      <pubDate>Tue, 12 Sep 2023 14:07:17 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;以Rock5B为例的rk3588开发文档，不断更新ing&lt;/p&gt;
&lt;h1 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2022/12/10/Roc</description>
        
      
      
      
      <content:encoded><![CDATA[<p>以Rock5B为例的rk3588开发文档，不断更新ing</p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E5%91%BD%E4%BB%A4"></a>命令</h1><h2 id="芯片体质检测"><a href="#芯片体质检测" class="headerlink" title="芯片体质检测"></a>芯片体质检测</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 0 7`; do echo ========cpu$i;cat /sys/bus/cpu/devices/cpu$&#123;i&#125;/cpufreq/scaling_max_freq; done</span><br><span class="line">sudo sed -i &quot;sfocaljammyg&quot; /etc/apt/sources.list &amp;&amp; sudo apt update &amp;&amp; sudo apt dist-upgrade &amp;&amp; sudo reboot</span><br><span class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq</span><br><span class="line">lscpu  grep MHz #pytm-volt-sel 越大越好</span><br><span class="line">dmesg  grep -i pvtm</span><br><span class="line">dmesg  grep -E &#x27;pvtmdmc&#x27;  grep sel</span><br></pre></td></tr></table></figure><p><a href="https://shjdgwj.github.io/14733f4e12d9/image-20221026213053527.png"><img src="https://shjdgwj.github.io/14733f4e12d9/image-20221026213053527.png" alt="img" title="image-20221026213053527"></a></p><h2 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E4%B8%AD%E6%96%87"></a>相关配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//配置中文</span><br><span class="line">sudo apt install locales</span><br><span class="line">sudo apt install fonts-noto-cjk fonts-noto-cjk-extra</span><br><span class="line">sudo dpkg-reconfigure locales #选 en_US UTF-8 和 zh_CN UTF, 设置默认locales 为 en_us</span><br><span class="line">//PD协商电压 温度</span><br><span class="line">sudo apt install lm-sensors sensors</span><br><span class="line">//编译和网络校时</span><br><span class="line">sudo apt install build-essential #编译</span><br><span class="line">sudo apt install ntp#网络校时</span><br><span class="line">//exFAT</span><br><span class="line">sudo apt install exfat fuse exfat-fuse</span><br></pre></td></tr></table></figure><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E6%96%B9%E6%B3%95"></a>方法</h1><h2 id="查看温度"><a href="#查看温度" class="headerlink" title="查看温度"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E6%9F%A5%E7%9C%8B%E6%B8%A9%E5%BA%A6"></a>查看温度</h2><p>1</p><p>echo $[$(cat /sys/class/thermal/thermal_zone0/temp)/1000]°</p><h2 id="硬件驱动"><a href="#硬件驱动" class="headerlink" title="硬件驱动"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E7%A1%AC%E4%BB%B6%E9%A9%B1%E5%8A%A8"></a>硬件驱动</h2><p><a href="https://github.com/happyme531/Adafruit_Blinka/commits/rk3588-rock-5">https://github.com/happyme531/Adafruit_Blinka/commits/rk3588-rock-5</a><br>rock5 gpio i2c spi pwm 串口 adc 全部适配完成</p><h2 id="wifi"><a href="#wifi" class="headerlink" title="wifi"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#wifi"></a>wifi</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用`nmtui`命令</span><br><span class="line"></span><br><span class="line">注意Security选择 WPA &amp; WPA2 Personal</span><br></pre></td></tr></table></figure><h2 id="KDE桌面"><a href="#KDE桌面" class="headerlink" title="KDE桌面"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#KDE%E6%A1%8C%E9%9D%A2"></a>KDE桌面</h2><p><a href="https://forum.armbian.com/topic/10526-using-different-desktop-environments-on-armbian/">Using different desktop environments on Armbian</a></p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8</p><h1 id="安装KDE桌面"><a href="#安装KDE桌面" class="headerlink" title="安装KDE桌面"></a>安装KDE桌面</h1><p>sudo add-apt-repository ppa:kubuntu-ppa/backports<br>sudo apt-get update<br>sudo apt-get install -y kubuntu-desktop  </p><h1 id="修改默认桌面"><a href="#修改默认桌面" class="headerlink" title="修改默认桌面"></a>修改默认桌面</h1><p>cd /usr/share/xsessions  </p><h1 id="看到有ubuntu-desktop-ubuntu-xorg-desktop"><a href="#看到有ubuntu-desktop-ubuntu-xorg-desktop" class="headerlink" title="看到有ubuntu.desktop ubuntu-xorg.desktop"></a>看到有ubuntu.desktop ubuntu-xorg.desktop</h1><h1 id="后面还不会改"><a href="#后面还不会改" class="headerlink" title="后面还不会改"></a>后面还不会改</h1><h2 id="安卓root"><a href="#安卓root" class="headerlink" title="安卓root"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E5%AE%89%E5%8D%93root"></a>安卓root</h2><p>1<br>2<br>3<br>4<br>5<br>6</p><h1 id="备份boot"><a href="#备份boot" class="headerlink" title="备份boot"></a>备份boot</h1><p>dd if=/dev/block/nvme0n1p5 of=/storage/emulated/0/mod.img  </p><h1 id="刷入boot"><a href="#刷入boot" class="headerlink" title="刷入boot"></a>刷入boot</h1><p>dd if=/storage/emulated/0/mod.img of=dev/block/nvme0n1p5<br>sync<br>reboot</p><h2 id="EMMC镜像备份导出方法"><a href="#EMMC镜像备份导出方法" class="headerlink" title="EMMC镜像备份导出方法"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#EMMC%E9%95%9C%E5%83%8F%E5%A4%87%E4%BB%BD%E5%AF%BC%E5%87%BA%E6%96%B9%E6%B3%95"></a>EMMC镜像备份导出方法</h2><p>用户基于我们发布是镜像系统，安装软件或进行其他配置之后，如果想备份系统，有很多方法可以实现，我这里提供一个比较简单的思路供大家参考。</p><p>前置条件：</p><p>假如您手边有一张已经做好系统的TF卡<br>各种改动后的EMMC系统<br>核心操作步骤：</p><p>从EMMC启动系统，登陆桌面并打开终端命令行更改卷标</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11</p><p>sudo su<br>fatlabel /dev/mmcblk0p1 emmc-boot<br>e2label /dev/mmcblk0p2 emmc-rootfs  </p><p>vim /boot/firmware/cmdline.txt<br>将writable替换为emmc-rootfs 然后保存退出  </p><p>vim /etc/fstab<br>将writable替换为emmc-rootfs 然后保存退出  </p><p>sync;</p><p>插入TF卡，重启系统</p><p>默认优先从TF卡引导系统，进入系统之后，可以挂载EMMC分区进行备份压缩</p><h2 id="Docker-运行openwrt"><a href="#Docker-运行openwrt" class="headerlink" title="Docker 运行openwrt"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#Docker-%E8%BF%90%E8%A1%8Copenwrt"></a>Docker 运行openwrt</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">开启网卡混杂模式</span><br><span class="line">sudo ip link set eth0 promisc on</span><br><span class="line"></span><br><span class="line">创建docker网卡</span><br><span class="line">docker network create -d macvlan --subnet=192.168.1.0/24 --gateway=192.168.1.1 -o parent=eth0 macnet</span><br><span class="line"></span><br><span class="line">查看docker网卡</span><br><span class="line">docker network list</span><br><span class="line"></span><br><span class="line">项目地址https://github.com/SuLingGG/OpenWrt-Docker</span><br><span class="line">查看自己的系统的架构</span><br><span class="line">uname -a</span><br><span class="line"></span><br><span class="line">创建并启动docker镜像</span><br><span class="line">docker run --restart always --name openwrt -d --network macnet --privileged sulinggg/openwrt:armv8 /sbin/init</span><br><span class="line"></span><br><span class="line">docker给普通用户权限</span><br><span class="line">先查看一下默认这个文件/var/run/docker.sock的权限是啥</span><br><span class="line">$ sudo ls -al /var/run/docker.sock</span><br><span class="line">srw-rw---- 1 root root 0 Feb 15 03:13 /var/run/docker.sock</span><br><span class="line"></span><br><span class="line">#修改文件权限</span><br><span class="line">sudo chmod 666 /var/run/docker.sock</span><br><span class="line"></span><br><span class="line">#修改后，再查看一下这个文件的权限</span><br><span class="line">$ sudo ls -al /var/run/docker.sock</span><br><span class="line"></span><br><span class="line">srw-rw-rw- 1 root root 0 Feb 15 03:14 /var/run/docker.sock</span><br><span class="line"></span><br><span class="line">进入bash终端修改ip</span><br><span class="line">vim /etc/config/network</span><br><span class="line">将后面三项改成自己的ip</span><br><span class="line"></span><br><span class="line">重启openwrt网络</span><br><span class="line">/etc/init.d/network restart</span><br><span class="line"></span><br><span class="line">直接浏览器访问刚刚设置的ip</span><br><span class="line">密码默认passwd</span><br><span class="line"></span><br><span class="line">在网络LAN口中关闭桥接接口</span><br><span class="line"></span><br><span class="line">网络防火墙自定义规则中添加</span><br><span class="line">iptables -t nat -I POSTROUTING -j MASQUERADE</span><br><span class="line"></span><br><span class="line">在网络Turbo ACC网络加速中勾选DNS缓存</span><br></pre></td></tr></table></figure><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a><a href="https://wishzone.ltd/2022/12/10/Rock5B/#%E7%B3%BB%E7%BB%9F"></a>系统</h1><ol><li><a href="http://www.zphj1987.com/rock5b-ke-yi-yun-xing-deuos-ca.html">rock5b uos</a></li><li>官方镜像用户名密码 rock @rock</li></ol>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      <category domain="http://example.com/tags/docker/">docker</category>
      
      <category domain="http://example.com/tags/openwrt/">openwrt</category>
      
      <category domain="http://example.com/tags/arm64/">arm64</category>
      
      <category domain="http://example.com/tags/rock5b/">rock5b</category>
      
      
      <comments>http://example.com/2023/09/12/rock5b/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>STM32</title>
      <link>http://example.com/2023/09/12/stm32/</link>
      <guid>http://example.com/2023/09/12/stm32/</guid>
      <pubDate>Tue, 12 Sep 2023 14:06:36 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;STM32的个人开发文档，不断更新ing&lt;/p&gt;
&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2022/12/10/STM32/#%E9%</description>
        
      
      
      
      <content:encoded><![CDATA[<p>STM32的个人开发文档，不断更新ing</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E9%85%8D%E7%BD%AE"></a>配置</h1><ul><li>vscode 插件 Keil Assistant</li><li>keil启动vscode<ul><li>编码改为UTF-8，Tab-size为4</li><li>在Edit-&gt;Configuration-&gt;Editor-&gt;File&amp;Project Handing里勾上了Automatic reload of externally modified files</li><li>点击mdk菜单栏Tools-&gt;Customize Tools Menu，在弹出的对话框中新建一个外部编辑器，并指定其路径， <strong>注意Arguments要填上#E</strong> ，我的vscode路径：D:\Program Files\Microsoft VS CodeCode.exe</li><li>点击确定后，点击mdk菜单栏Tools-&gt;VSCode，即可自动调用vscode打开当前文件</li></ul></li><li><a href="https://blog.csdn.net/asdfghjkl1234567890p/article/details/125522052">Keil仿真监控数据导出到EXCEL图表显示的方法</a></li><li><a href="https://blog.csdn.net/QXF0806/article/details/125687203">Keil5把变量的数据导出，可视化</a>经验</li></ul><ol><li>switch -case语句中 case: 后面不能直接定义变量，但是可以先写一个；来解决这个问题</li><li><a href="https://zhuanlan.zhihu.com/p/111723881">Nucleo-G474RE作为烧写器</a></li><li><a href="http://t.zoukankan.com/juwan-p-13069102.html">理解 LCD 屏幕的驱动原理与调试过程，示例的驱动 IC 为 GC9308 ，展示整个屏幕的驱动过程。</a></li></ol><h1 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E6%97%B6%E9%92%9F"></a>时钟</h1><h2 id="SysTick定时时间计算"><a href="#SysTick定时时间计算" class="headerlink" title="SysTick定时时间计算"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#SysTick%E5%AE%9A%E6%97%B6%E6%97%B6%E9%97%B4%E8%AE%A1%E7%AE%97"></a>SysTick定时时间计算</h2><p>t = reload <em>(1/clk)<br>clk = 72m时 t = (72)</em>(1/72M) = 1us<br>clk = 72m时 t = (72000)* (1/72M) = 1ms<br>1s = 1000ms = 1000 000us = 1000 000 000ns<br>记得使用 <code>HAL_TIM_Base_Start(&amp;htim1);</code></p><h1 id="keil-软件仿真"><a href="#keil-软件仿真" class="headerlink" title="keil 软件仿真"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#keil-%E8%BD%AF%E4%BB%B6%E4%BB%BF%E7%9C%9F"></a>keil 软件仿真</h1><h2 id="stm32f103VET6"><a href="#stm32f103VET6" class="headerlink" title="stm32f103VET6"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#stm32f103VET6"></a>stm32f103VET6</h2><ol><li>debug页面如下设置<br><a href="https://shjdgwj.github.io/e6640d881469/1.png"></a></li><li>打开逻辑分析仪</li><li>setup打开后如下设置<a href="https://shjdgwj.github.io/e6640d881469/2.png"></a><br>填 <code>PORTB.0</code>即可查看GPIOB pin0的输出<br><code>DisPlay Type</code> 选择 <code>Bit</code><br>之后就能输出PWM波形了</li></ol><h2 id="stm32f103C8T6"><a href="#stm32f103C8T6" class="headerlink" title="stm32f103C8T6"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#stm32f103C8T6"></a>stm32f103C8T6</h2><p><a href="https://blog.csdn.net/keygun/article/details/97619613">软件仿真配置</a><br>CPU<br>DLL：SARMCM3.DLL</p><p>Dialog<br>DLL：DARMSTM.DLL Parameter:-pSTM32F103C8</p><p>Driver<br>DLL SARMCM3.DLL</p><p>Dalog<br>DLL:TARMSTM.DLL Parameter:-pSTM32F103C8</p><h1 id="C相关"><a href="#C相关" class="headerlink" title="C相关"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#C%E7%9B%B8%E5%85%B3"></a>C相关</h1><h2 id="STM32使用malloc函数"><a href="#STM32使用malloc函数" class="headerlink" title="STM32使用malloc函数"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#STM32%E4%BD%BF%E7%94%A8malloc%E5%87%BD%E6%95%B0"></a>STM32使用malloc函数</h2><p>对于malloc和free对内存堆栈块的空间操作，在keilMDK中需要满足下面几个条件：</p><ol><li>使用的代码文件中需要包含头文件 <code>#include &lt;stdlib.h&gt;</code></li><li>在工程的属性设置中需要把 Use MicroLIB 选项勾选</li><li>这时候原则上就可以使用空间申请和释放的两个操作函数了，但是由于STM32在startup_stm32f10x_hd.s中分配的堆空间只有0x00000200个字节，所以很多时候调用malloc函数时如果申请空间超过0X200则返回了NULL，这时候就需要到该文件对这个值进行设置。</li></ol><h2 id="单片机中的数据类型"><a href="#单片机中的数据类型" class="headerlink" title="单片机中的数据类型"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"></a>单片机中的数据类型</h2><p>u8——1个字节，无符号型（不能表达负数，如果用来当作负数的话，就出错了）<br>u16 ——2个字节，无符号型（参看前边STM32f10x.h中的定义）<br>u32——4个字节，无符号型<br>int——4个字节,有符号型，可以表达负整数<br>float ——4个字节，有符号型，可以表达负数/小数<br>double——8个字节，有符号弄，可以表达负数/小数</p><h2 id="代码书写规范"><a href="#代码书写规范" class="headerlink" title="代码书写规范"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E4%BB%A3%E7%A0%81%E4%B9%A6%E5%86%99%E8%A7%84%E8%8C%83"></a>代码书写规范</h2><p>变量定义在.c 在.h中用extern供外部引用<br>宏定义直接define在.h最前面<br>函数定义在.c 在.h中再写一遍名字即可<br>结构体和枚举需要将类型名定义在 .h ，将变量定义在.c 在 .h中用extern引用</p><h2 id="while-str-的含义"><a href="#while-str-的含义" class="headerlink" title="while(*str)的含义"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#while-str-%E7%9A%84%E5%90%AB%E4%B9%89"></a>while(*str)的含义</h2><p>字符串是以 ‘\0’结束的 当 指针 s指向最后一个 即是 ‘\0’是 *s=’\0’ 也等于 0 即是假的 结束循环</p><h2 id="判断char数组里是否是汉字"><a href="#判断char数组里是否是汉字" class="headerlink" title="判断char数组里是否是汉字"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%88%A4%E6%96%ADchar%E6%95%B0%E7%BB%84%E9%87%8C%E6%98%AF%E5%90%A6%E6%98%AF%E6%B1%89%E5%AD%97"></a>判断char数组里是否是汉字</h2><p>百度说</p><blockquote><p>负数是为汉字，二个字节一个<br>gb2312 两个字节都是负的<br>如果是gbk，第一个字节还是负的，第二字节就不一定了</p></blockquote><p><strong>但是</strong> ！不知道为什么，在keil中</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10</p><p>char* str;<br>while(*str)<br>{<br>if(*str &gt;= 0&amp;&amp;str&lt;128){<br>…<br>}else{<br>//反正非汉字字符一定在0-127间<br>…<br>}<br>}</p><p><code>str&lt;128</code>的部分会被keil提示成 <code>always true</code>,而实际仿真中，变量窗口识别str为uchar，也就是中文的值并非<0而是>127。。。<br>改进后：</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17</p><p>while(*str)<br>{<br>uint8_t ch = *str;<br>if(ch &gt;= 0&amp;&amp;ch&lt;128)<br>{<br>showchar(*str, color);<br>str++;<br>}<br>else//汉字2个char 第一个char&lt;0<br>{<br>char s8[2];<br>int16_t *s16 ;<br>s16 = (int16_t*)str;<br>str +=2;<br>showChinese(*s16, color);<br>}<br>}</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%85%B6%E4%BB%96"></a>其他</h2><p>无符号与有符号数进行运算时，系统会自动将有符号数看成无符号数，然后进行比较。举例:<br>假定一个数是8位，一个字节表示<br>-1=11111111(补码)，相当于无符号数255<br>10=00001010，此时，-1&gt;10</p><h1 id="外设"><a href="#外设" class="headerlink" title="外设"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%A4%96%E8%AE%BE"></a>外设</h1><h2 id="TIM定时器"><a href="#TIM定时器" class="headerlink" title="TIM定时器"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#TIM%E5%AE%9A%E6%97%B6%E5%99%A8"></a>TIM定时器</h2><p>计数器时钟 CK_CNT = CK_PSC/(PSC+1)<br>计数一次的时间 1/CK_CNT<br>周期 1/CK_CNT*(ARR+1)</p><h3 id="输入捕获"><a href="#输入捕获" class="headerlink" title="输入捕获"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7"></a>输入捕获</h3><p><a href="https://blog.csdn.net/zj490044512/article/details/83754414">stm32f103输入捕获</a><br><a href="https://blog.csdn.net/as480133937/article/details/99407485">【STM32】HAL库 STM32CubeMX教程八—定时器输入捕获</a><br><a href="https://blog.csdn.net/yyx112358/article/details/78414594">使用 STM32 测量频率和占空比的几种方法</a><br><a href="https://blog.csdn.net/qq_17351161/article/details/107386857">STM32F1x HAL库学习笔记（11）定时器配置及中断（溢出中断，PWM输出，输入捕获）</a></p><h3 id="输出比较"><a href="#输出比较" class="headerlink" title="输出比较"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83"></a>输出比较</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12</p><p>/* Blocking mode: Polling 轮询模式*/  </p><p>HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel);<br>HAL_StatusTypeDef HAL_TIM_OC_Stop(TIM_HandleTypeDef htim, uint32_t Channel);<br>/* Non-Blocking mode: Interrupt 中断模式 */  </p><p>HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef htim, uint32_t Channel);<br>HAL_StatusTypeDef HAL_TIM_OC_Stop_IT(TIM_HandleTypeDef htim, uint32_t Channel);<br>/* Non-Blocking mode: DMA DMA模式*/  </p><p>HAL_StatusTypeDef HAL_TIM_OC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, uint16_t Length);<br>HAL_StatusTypeDef HAL_TIM_OC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel);</p><h3 id="全速运行卡死在-HAL-TIM-Base-Start-IT函数"><a href="#全速运行卡死在-HAL-TIM-Base-Start-IT函数" class="headerlink" title="全速运行卡死在-HAL_TIM_Base_Start_IT函数"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%85%A8%E9%80%9F%E8%BF%90%E8%A1%8C%E5%8D%A1%E6%AD%BB%E5%9C%A8-HAL-TIM-Base-Start-IT%E5%87%BD%E6%95%B0"></a>全速运行卡死在-HAL_TIM_Base_Start_IT函数</h3><blockquote><p>我没有猜错的话 你的是NVIC撞车了 都是 0 0 滴答定时器就阵亡了 修改一下分配的优先级就好了</p></blockquote><h3 id="HAL库微秒级延时"><a href="#HAL库微秒级延时" class="headerlink" title="HAL库微秒级延时"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#HAL%E5%BA%93%E5%BE%AE%E7%A7%92%E7%BA%A7%E5%BB%B6%E6%97%B6"></a>HAL库微秒级延时</h3><h4 id="优选-获取系统时钟计时，非阻塞式延时"><a href="#优选-获取系统时钟计时，非阻塞式延时" class="headerlink" title="优选-获取系统时钟计时，非阻塞式延时"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E4%BC%98%E9%80%89-%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%92%9F%E8%AE%A1%E6%97%B6%EF%BC%8C%E9%9D%9E%E9%98%BB%E5%A1%9E%E5%BC%8F%E5%BB%B6%E6%97%B6"></a>优选-获取系统时钟计时，非阻塞式延时</h4><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15</p><p>void delay_ms(int32_t nms)<br>{<br>int32_t temp;<br>SysTick-&gt;LOAD = 8000*nms;<br>SysTick-&gt;VAL=0X00;//清空计数器<br>SysTick-&gt;CTRL=0X01;//使能，减到零是无动作，采用外部时钟源<br>do<br>{<br>temp=SysTick-&gt;CTRL;//读取当前倒计数值<br>}<br>while((temp&amp;0x01)&amp;&amp;(!(temp&amp;(1&lt;&lt;16))));//等待时间到达  </p><p>SysTick-&gt;CTRL=0x00; //关闭计数器<br>SysTick-&gt;VAL =0X00; //清空计数器<br>}</p><hr><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15</p><p>void Delay_us(int16_t nus)<br>{<br>int32_t temp;<br>SysTick-&gt;LOAD = nus*9; //72MHz<br>SysTick-&gt;VAL=0X00;<br>SysTick-&gt;CTRL=0X01;<br>do<br>{<br>temp=SysTick-&gt;CTRL;<br>}<br>while((temp&amp;0x01)&amp;&amp;(!(temp&amp;(1&lt;&lt;16))));  </p><p>SysTick-&gt;CTRL=0x00;<br>SysTick-&gt;VAL =0X00;<br>}</p><h4 id="利用HAL-Delay"><a href="#利用HAL-Delay" class="headerlink" title="利用HAL_Delay"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%88%A9%E7%94%A8HAL-Delay"></a>利用HAL_Delay</h4><p><a href="https://blog.csdn.net/qq_34752070/article/details/82620374">STM32 HAL库学习 常使用的几种延时方式</a></p><p>1<br>2<br>3<br>4</p><p>// HAL_RCC_GetHCLKFreq()/1000 1ms中断一次，即HAL_Delay函数延时基准为1ms<br>// HAL_RCC_GetHCLKFreq()/100000 10us中断一次，即HAL_Delay函数延时基准为10us<br>// HAL_RCC_GetHCLKFreq()/1000000 1us中断一次，即HAL_Delay函数延时基准为1us<br>HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000000); // 配置并启动系统滴答定时器</p><h4 id="利用TIM"><a href="#利用TIM" class="headerlink" title="利用TIM"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%88%A9%E7%94%A8TIM"></a>利用TIM</h4><p><a href="https://blog.csdn.net/qq_29506411/article/details/109070558">HAL库中同时实现微秒级us以及毫秒级ms延时</a></p><p>tim6，中断不使能</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15</p><p>//72M PSC=71  </p><p>void Delay_us(uint16_t us) //注意us变量的上限是65535<br>{<br>// uint16_t counter= us &amp; 0xffff;  </p><p>HAL_TIM_Base_Start(&amp;htim6);<br>__HAL_TIM_SetCounter(&amp;htim6,0); // 对上次延时产生的计数清零  </p><p>us = (us &gt; 4)?(us-2):1; // 对counter的改变是为了让短时长的延时更精确（通过示波器校正过，timer的时钟是72M）  </p><p>while( us &gt; __HAL_TIM_GetCounter(&amp;htim6) ) {};  </p><p>HAL_TIM_Base_Stop(&amp;htim6);<br>}</p><h2 id="串口"><a href="#串口" class="headerlink" title="串口"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E4%B8%B2%E5%8F%A3"></a>串口</h2><h3 id="串口重定向"><a href="#串口重定向" class="headerlink" title="串口重定向"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E4%B8%B2%E5%8F%A3%E9%87%8D%E5%AE%9A%E5%90%91"></a>串口重定向</h3><p><a href="https://blog.csdn.net/morixinguan/article/details/103474643">STM32 HAL串口接收常用的几种方式</a><br><a href="https://blog.csdn.net/xinghunlove123/article/details/89503218">Stm32 HAL库 USART(发送+接收)全部采用DMA形式</a></p><h3 id="UART成帧"><a href="#UART成帧" class="headerlink" title="[UART成帧]"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#UART%E6%88%90%E5%B8%A7"></a>[UART成帧]</h3><p><a href="https://blog.csdn.net/WANGYONGZIXUE/article/details/121375351">UART成帧</a></p><p>ESP8266 判断 UART 传来的数据时间间隔，若时间间隔大于 20ms， 则认为一帧结束；否则， 一直接收数据到上限值 2KB， 认为一帧结束。 ESP8266 模块判断UART 来的数据一帧结束后， 通过 WIFI 接口将数据转发出去。<br>成帧时间间隔为 20ms， 一帧上限值为 2KB。</p><h2 id="SPI"><a href="#SPI" class="headerlink" title="SPI"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#SPI"></a>SPI</h2><p><a href="https://blog.csdn.net/weixin_41082463/article/details/104952605">STM32（HAL）——SPI通信</a><br><a href="https://blog.csdn.net/wanruiou/article/details/97236750">HAL库的学习 —— SPI配置和使用 发送16位和8位数据</a></p><p>Mode</p><p>含义</p><p>Full-Duplex Master</p><p>全双工主模式</p><p>Full-Duplex Slave</p><p>全双工从模式</p><p>Half-Duplex Master</p><p>半双工主模式</p><p>Half-Duplex Slave</p><p>半双工从模式</p><p>Receive Only Master</p><p>仅接收主模式</p><p>Receive Only Slave</p><p>仅接收从模式</p><p>Transmit Only Master</p><p>仅发送主模式</p><p>Transmit Only Slave</p><p>仅发送从模式</p><p>参数</p><p>含义</p><p>Frame Format</p><p>框架格式，有Motorola和TI两种</p><p>Data Size</p><p>数据长度，8bit和16bit两种</p><p>First Bit</p><p>对齐形式，高位先行和低位先行</p><p>Prescaler</p><p>预分频，用于控制波特率，波特率=16MHz/Prescaler</p><p>Clock Polarity</p><p>CPOL，前面有讲</p><p>Clock Phase</p><p>CPHA，前面有讲</p><p>CRC Calculation</p><p>是否启用CRC</p><p>NSS Signal Type</p><p>片选形式，硬件实现还是软件实现</p><h2 id="ADC-amp-amp-DAC"><a href="#ADC-amp-amp-DAC" class="headerlink" title="ADC &amp;&amp; DAC"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#ADC-amp-amp-DAC"></a>ADC &amp;&amp; DAC</h2><p><strong>测量前用 <code>HAL_ADCEx_Calibration_Start();</code>校准!</strong><br><a href="https://blog.csdn.net/qq_38410730/article/details/80071349">【STM32】ADC的基本原理、寄存器（超基础、详细版）</a></p><p><a href="https://blog.csdn.net/as480133937/article/details/99627062">【STM32】HAL库 STM32CubeMX教程九—ADC</a></p><p><a href="https://blog.csdn.net/qq_43743762/article/details/100067558">STM32—ADC详解</a></p><p><a href="https://blog.csdn.net/super828/article/details/79600395">STM32 HAL库学习系列第1篇 ADC配置 及 DAC配置</a></p><p><a href="https://www.cnblogs.com/xingboy/p/10018749.html">STM32使用HAL库实现ADC单通道转换(中断和非中断都有代码)</a></p><p><a href="https://wenku.baidu.com/view/7f69e2c081c758f5f61f67e2.html">用STM32内置的ADC实现数字示波器</a></p><p><a href="https://blog.csdn.net/qq_38294949/article/details/106036394">Cube生成定时器2触发双ADC同步采集并用DMA传输</a></p><p><a href="https://blog.csdn.net/weifengdq/article/details/121802176">STM32H743 ADC1+DMA1 ADC3+BDMA CubeMX配置使用</a></p><blockquote><p>要知道，转换后的数据是一个12位的二进制数，我们需要把这个二进制数代表的模拟量（电压）用数字表示出来。比如测量的电压范围是0~3.3V，转换后的二进制数是x，因为12位ADC在转换时将电压的范围大小（也就是3.3）分为4096（2^12）份，所以转换后的二进制数x代表的真实电压的计算方法就是：</p><p>y=3.3* x / 4096</p></blockquote><h2 id="血泪教训"><a href="#血泪教训" class="headerlink" title="血泪教训"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E8%A1%80%E6%B3%AA%E6%95%99%E8%AE%AD"></a>血泪教训</h2><p>&amp;ensp&amp;ensp如果用定时器触发adc，无论怎样设置，最高就500khz，但是一旦选择连续采样模式，让adc自动一次接一次采样，由于我配置的adc 14mhz，14个周期，因此自然而然的就是1m的采样频率。<br>而使用定时器触发时，需要关闭连续转换模式，否则无法通过定时器控制adc的采样频率<br>然后又不知道咋回事，除了使能连续转换模式，定时器触发永远是500khz的上限，我暂时没有找到不使能连续转换模式的同时使adc速度大于500khz的方法</p><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E6%A8%A1%E5%9D%97"></a>模块</h1><h2 id="AD9910"><a href="#AD9910" class="headerlink" title="AD9910"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#AD9910"></a>AD9910</h2><p><a href="https://blog.csdn.net/fraay/article/details/108687441">AD9910模块数据手册、使用方法详解</a></p><h2 id="mpu6050"><a href="#mpu6050" class="headerlink" title="mpu6050"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#mpu6050"></a>mpu6050</h2><p><a href="https://blog.csdn.net/zj490044512/article/details/83745684">stm32f103与mpu6050通信详解</a></p><h2 id="DHT11"><a href="#DHT11" class="headerlink" title="DHT11"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#DHT11"></a>DHT11</h2><p><a href="https://blog.csdn.net/dingyc_ee/article/details/103530982">HAL库 DHT11 驱动</a></p><h2 id="SSD1306-0-96OLED"><a href="#SSD1306-0-96OLED" class="headerlink" title="SSD1306 0.96OLED"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#SSD1306-0-96OLED"></a>SSD1306 0.96OLED</h2><h3 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E9%A9%B1%E5%8A%A8"></a>驱动</h3><ul><li><a href="https://github.com/SL-RU/stm32libs">stm32libs 5年前的库 基于stm32f103</a></li><li><a href="https://github.com/afiskon/stm32-ssd1306">stm32-ssd1306</a>STM32 library for working with OLEDs based on SSD1306, supports I2C and 4-wire SPI. It also works with SH1106, SH1107 and SSD1309 which are compatible with SSD1306.<br>Please see ssd1306/ssd1306_conf_template.h and examples directory for more details.</li><li><a href="https://github.com/4ilo/ssd1306-stm32HAL">ssd1306-stm32HAL</a>ssd1306 library for stm32 using stm32-hal library’s. This library works with i2c and is configured for 128x64 oled panels by default.<br>If you search 4-wire SPI support, you can find it in the afiskon/stm32-ssd1306 fork.</li></ul><h3 id="获取OLED的通信地址"><a href="#获取OLED的通信地址" class="headerlink" title="获取OLED的通信地址"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E8%8E%B7%E5%8F%96OLED%E7%9A%84%E9%80%9A%E4%BF%A1%E5%9C%B0%E5%9D%80"></a>获取OLED的通信地址</h3><p>参考<a href="https://blog.csdn.net/qq_42860728/article/details/84310160">关于Arduino&amp;SSD1306OLED（IIC）显示的学习</a></p><blockquote><p><a href="https://shjdgwj.github.io/e6640d881469/4.png"></a><br>模块背面的IIC ADRESSSELECT表示该模块在IIC通信作为从机时的地址，当中间的脚用电阻和左边接起来时，地址为0x78，当和右边接起来时，地址为0x7A。</p><p>图片所示的通信地址是0x78</p></blockquote><h3 id="显示与取模"><a href="#显示与取模" class="headerlink" title="显示与取模"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E6%98%BE%E7%A4%BA%E4%B8%8E%E5%8F%96%E6%A8%A1"></a>显示与取模</h3><p><a href="https://blog.csdn.net/u010858987/article/details/103362144">关于0.96OLED的显示过程详解（I2C通信方式）</a></p><h2 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#ESP8266"></a>ESP8266</h2><p><a href="https://blog.csdn.net/zDavid_2018/article/details/108349593">【stm32】wifi ESP8266的AT指令</a></p><ul><li><code>__HAL_UART_ENABLE_IT(&amp;huart1, UART_IT_RXNE);</code>中断模式下使用此函数使能中断</li></ul><p><a href="https://dsx2016.com/?p=1510">arduino+ESP8266模块使用AT指令设置wifi</a></p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36</p><p>void USART1_IRQHandler(void)<br>{<br>/* USER CODE BEGIN USART1_IRQn 0 */<br>uint8_t ch = 1;<br>if (__HAL_UART_GET_FLAG(&amp;huart1, UART_FLAG_RXNE) != RESET)<br>{<br>//读寄存器<br>ch = (uint16_t)READ_REG(huart1.Instance-&gt;DR);  </p><p>//将串口1的数据 写入串口3（串口3将数据 -&gt; esp8266）<br>WRITE_REG(huart3.Instance-&gt;DR, ch);<br>}<br>/* USER CODE END USART1_IRQn 0 */<br>HAL_UART_IRQHandler(&amp;huart1);<br>/* USER CODE BEGIN USART1_IRQn 1 */  </p><p>/* USER CODE END USART1_IRQn 1 */<br>}<br>void USART3_IRQHandler(void)<br>{<br>/* USER CODE BEGIN USART3_IRQn 0 */<br>uint8_t ch = 1;<br>if (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_RXNE) != RESET)<br>{<br>ch = (uint16_t)READ_REG(huart3.Instance-&gt;DR);  </p><p>//给串口1<br>WRITE_REG(huart1.Instance-&gt;DR, ch);<br>}  </p><p>/* USER CODE END USART3_IRQn 0 */<br>HAL_UART_IRQHandler(&amp;huart3);<br>/* USER CODE BEGIN USART3_IRQn 1 */  </p><p>/* USER CODE END USART3_IRQn 1 */<br>}</p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E7%AE%97%E6%B3%95"></a>算法</h1><h2 id="FFT"><a href="#FFT" class="headerlink" title="FFT"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#FFT"></a>FFT</h2><ol><li><a href="https://blog.csdn.net/u013028442/article/details/88836515">matlab中fft运算后需要对幅值乘2除N</a></li><li>矩形窗(Rectangular)：加矩形窗等于不加窗，因为在截取时域信号时本身就是采用矩形截取，所以矩形窗适用于瞬态变化的信号，只要采集的时间足够长，信号宽度基本可以覆盖整个有效的瞬态部分。<br>汉宁窗(Von Hann)：如果测试信号有多个频率分量，频谱表现的十分复杂，且测试的目的更多关注频率点而非能量的大小。在这种情况下，需要选择一个主瓣够窄的窗函数，汉宁窗是一个很好的选择。<br>flattop窗：如果测试的目的更多的关注某周期信号频率点的能量值，比如，更关心其EUpeak,EUpeak-peak,EUrms，那么其幅度的准确性则更加的重要，可以选择一个主瓣稍宽的窗，flattop窗在这样的情况下经常被使用。</li><li><a href="https://blog.csdn.net/u013346007/article/details/54142981">【Get深一度】矩形窗/bartlett/Blackman/hamming/Hanning/kaiser -相控阵雷达原理</a></li></ol><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E9%97%AE%E9%A2%98"></a>问题</h1><h2 id="STM32CUBEMX-BUG"><a href="#STM32CUBEMX-BUG" class="headerlink" title="STM32CUBEMX BUG"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#STM32CUBEMX-BUG"></a>STM32CUBEMX BUG</h2><ol><li>版本6.5.0 stm32h743 配置ADC时无法配置其时钟。<br>版本6.3.0解决此问题</li><li>STM32 DMA初始化代码要在ADC前面。</li><li><a href="https://blog.csdn.net/weixin_49497012/article/details/118499056">STM32CubeMX生成代码时防止UTF-8乱码</a><br><strong>添加环境变量</strong><ul><li>变量名称：JAVA_TOOL_OPTIONS</li><li>变量值：-Dfile.encoding=UTF-8</li></ul></li></ol><h2 id="DMA循环模式导致hal-delay失效"><a href="#DMA循环模式导致hal-delay失效" class="headerlink" title="DMA循环模式导致hal_delay失效"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#DMA%E5%BE%AA%E7%8E%AF%E6%A8%A1%E5%BC%8F%E5%AF%BC%E8%87%B4hal-delay%E5%A4%B1%E6%95%88"></a>DMA循环模式导致hal_delay失效</h2><p><a href="https://blog.csdn.net/apple_2333/article/details/96962574">可能的原因</a><br>心态爆炸！<br>野火教程</p><p>1<br>2</p><p>uint32_t adcData[5];<br>HAL_ADCEx_MultiModeStart_DMA(&amp;hadc1, (uint32_t *)&amp;adcData, sizeof(adcData));</p><p>而实际上应该写</p><p>1<br>2<br>3</p><p>uint32_t adcData[5];<br>HAL_ADCEx_MultiModeStart_DMA(&amp;hadc1, (uint32_t *)&amp;adcData, 5);<br>//HAL_ADC_Start_DMA(&amp;hadc1, (uint32_t *)&amp;adcData, 5)</p><p><code>HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)</code><br><code>HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)</code><br>Length的参数不应该是数据长度，应该是数据数量。<br><a href="https://shjdgwj.github.io/e6640d881469/5.png"></a><br>在此问题耗时6小时，特此纪念</p><p>注/HAL_ADC_Start_DMA()的data变量为uint32_t的原因是hal为了程序方便移植，虽然f1只支持12位精度的adc，但是其他芯片支持更高精度的adc。</p><h2 id="hal-根据exti获取触发中断的管脚"><a href="#hal-根据exti获取触发中断的管脚" class="headerlink" title="hal 根据exti获取触发中断的管脚"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#hal-%E6%A0%B9%E6%8D%AEexti%E8%8E%B7%E5%8F%96%E8%A7%A6%E5%8F%91%E4%B8%AD%E6%96%AD%E7%9A%84%E7%AE%A1%E8%84%9A"></a>hal 根据exti获取触发中断的管脚</h2><p>比如stm32f103c8t6 PA15和PC15都是EXTI15 那触发时我怎么知道是哪个脚触发？</p><blockquote><p><a href="https://zhidao.baidu.com/question/1642129457849988940.html比如，来自PA0的外部中断，可以通过库函数(EXTI\_GetITStatus(EXTI\_Line0)!=RESET);判断外部中断来源是不是来源于端口0（至于是PA0还是PB0可通过查询中断来源进行判断，但不建议这么用，所以设置外部中断的端口建议不要重复，比如使用了PA0，就不要使用PB0之类的）另外要注意：端口0-4有自己独立的外部中断函数入口，5-9和10-15两组分别共用两个外部中断函数入口">https://zhidao.baidu.com/question/1642129457849988940.html比如，来自PA0的外部中断，可以通过库函数(EXTI\_GetITStatus(EXTI\_Line0)!=RESET);判断外部中断来源是不是来源于端口0（至于是PA0还是PB0可通过查询中断来源进行判断，但不建议这么用，所以设置外部中断的端口建议不要重复，比如使用了PA0，就不要使用PB0之类的）另外要注意：端口0-4有自己独立的外部中断函数入口，5-9和10-15两组分别共用两个外部中断函数入口</a></p></blockquote><h2 id="HAL-GPIO-EXTI-Callback"><a href="#HAL-GPIO-EXTI-Callback" class="headerlink" title="HAL_GPIO_EXTI_Callback"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#HAL-GPIO-EXTI-Callback"></a>HAL_GPIO_EXTI_Callback</h2><p>HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) 里面一调用函数就锁死，直接写语句没问题</p><blockquote><p><a href="https://www.stm32cube.com/question/615">https://www.stm32cube.com/question/615</a><br>HAL_InitTick(uint32_t TickPriority)这个函数要重新定义下，把systick的主优先级定义为0x0000(最高），之前HAL库给出的宏参数TICK_INT_PRIORITY 0X000f(最低）。导致一进中断<br>HAL的时钟就停摆了。</p></blockquote><h2 id="“Insufficient-RAM-for-Flash-Algorithms”出错原因及解决方案"><a href="#“Insufficient-RAM-for-Flash-Algorithms”出错原因及解决方案" class="headerlink" title="“Insufficient RAM for Flash Algorithms”出错原因及解决方案"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E2%80%9CInsufficient-RAM-for-Flash-Algorithms%E2%80%9D%E5%87%BA%E9%94%99%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88"></a>“Insufficient RAM for Flash Algorithms”出错原因及解决方案</h2><p>Insufficient RAM for Flash Algorithms”错误一般会有一个“cannot load flash programming algorithm !”的提示窗口<br><a href="https://shjdgwj.github.io/e6640d881469/6.png"></a><br>如图更改为 <code>0x0000FFF4</code><br><a href="https://shjdgwj.github.io/e6640d881469/7.png"></a></p><p>注：C++ include 添加 <code>Drivers\CMSIS\DSP\Include</code></p><h2 id="stm32函数中大数组问题"><a href="#stm32函数中大数组问题" class="headerlink" title="stm32函数中大数组问题"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#stm32%E5%87%BD%E6%95%B0%E4%B8%AD%E5%A4%A7%E6%95%B0%E7%BB%84%E9%97%AE%E9%A2%98"></a>stm32函数中大数组问题</h2><blockquote><p>在以stm32构建系统的时候，当用户自己编写函数时，发现函数出现意想不到的结果，其中一项你需要注意的是看你的函数中有没有大的数组，或者说查看你函数中临时变量的总量是不是超过了系统设置的堆栈的最大值这类问题编译器是不会给出错误的，相应的当出现程序不能给出想要的结果的时候，我们需要特别注意这类问题。对系统设置函栈最大值的宏一般放在系统的启动文件中，具体的是startup_stm32xxxx.s这个启动文件的Stack_Size这个宏</p></blockquote><h2 id="STM32H743-STM32CUBEMX6-3-0-ADC时钟为什么能配置为80MHz？"><a href="#STM32H743-STM32CUBEMX6-3-0-ADC时钟为什么能配置为80MHz？" class="headerlink" title="STM32H743 STM32CUBEMX6.3.0 ADC时钟为什么能配置为80MHz？"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#STM32H743-STM32CUBEMX6-3-0-ADC%E6%97%B6%E9%92%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E8%83%BD%E9%85%8D%E7%BD%AE%E4%B8%BA80MHz%EF%BC%9F"></a>STM32H743 STM32CUBEMX6.3.0 ADC时钟为什么能配置为80MHz？</h2><p><a href="https://community.st.com/s/question/0D53W000013pKvlSAE/clock-source-for-adc-of-the-stm32h7-cpu">Clock source for ADC of The STM32H7 CPU</a></p><p>ADC 时钟配置成160MHz，12位可以达到12M采样率（ADC直连通道） 14位5M采样率</p><p><a href="https://shjdgwj.github.io/e6640d881469/image-20220721150437943.png"></a>## STM32F429 HAL 定时器触发DMA 内存到内存</p><p><a href="https://blog.csdn.net/qq\_38974298/article/details/118158575">https://blog.csdn.net/qq\_38974298/article/details/118158575</a></p><p><a href="http://www.efton.sk/STM32/bt.c">http://www.efton.sk/STM32/bt.c</a></p><h2 id="Keil-MDK下如何设置非零初始化变量-基于Arm-Compiler-6"><a href="#Keil-MDK下如何设置非零初始化变量-基于Arm-Compiler-6" class="headerlink" title="Keil MDK下如何设置非零初始化变量 - 基于Arm Compiler 6"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#Keil-MDK%E4%B8%8B%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E9%9D%9E%E9%9B%B6%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F-%E5%9F%BA%E4%BA%8EArm-Compiler-6"></a><a href="https://blog.csdn.net/zhzht19861011/article/details/124904070">Keil MDK下如何设置非零初始化变量 - 基于Arm Compiler 6</a></h2><p>Arm Compiler 5 属性</p><p>Arm Compiler 6 属性</p><p>描述</p><p><code>__attribute__((at(address)))</code></p><p><code>__attribute__((section(&quot;.ARM.__at_address&quot;)))</code></p><p>Arm Compiler 6 中的 armlink 仍然支持以 <code>.ARM.__at_address</code> 的形式放置段</p><p><code>__attribute__((at(address), zero_init))</code></p><p><code>__attribute__((section(&quot;.bss.ARM.__at_address&quot;)))</code></p><p>Arm Compiler 6 中的 armlink 支持以 <code>.bss.ARM.__at_address</code> 的形式放置零初始化段。 <code>.bss</code> 前缀区分大小写，并且必须全部小写。</p><p><code>__attribute__((section(name), zero_init))</code></p><p><code>__attribute__((section(&quot;.bss.name&quot;)))</code></p><p><code>name</code> 是你选择的名字。 <code>.bss</code> 前缀区分大小写，并且必须全部小写。</p><p><code>__attribute__((zero_init))</code></p><p>不支持 默认将零初始化变量放在 <code>.bss</code> 段。</p><p>如果变量具有初始值设定项，则 Arm Compiler 5 会生成错误。 否则，它将零初始化变量放在 <code>.bss</code>段。</p><blockquote><h3 id="5-Arm®-Compiler-5-如何防止未初始化变量被初始化为0"><a href="#5-Arm®-Compiler-5-如何防止未初始化变量被初始化为0" class="headerlink" title="5. Arm® Compiler 5 如何防止未初始化变量被初始化为0"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#5-Arm%C2%AE-Compiler-5-%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA0"></a>5. Arm® Compiler 5 如何防止未初始化变量被初始化为0</h3><ol><li>定义变量时，使用编译器扩展属性 <code>__attribute__((section(&quot;name&quot;), zero_init))</code>来将变量放入指定段中。其中 <code>section(&quot;name&quot;)</code>选择一个指定的段，<code>zero_init</code>告诉编译器将变量放入ZI段。1<br>2uint32_t phy_link_init_flag __attribute__((section(“NO_INIT”), zero_init));<br>1</li><li><p>在分散加载文件中，定义名为 <code>NO_INIT</code>的段。注意该段所在的可执行域要具有 <code>UNINIT</code>属性。1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15LR_IROM1 0x00000000 0x00080000 { ; load region size_region 从0扇区开始<br>ER_IROM1 0x00000000 0x00080000 { ; load address = execution address<br>*.o (RESET, +First)<br>*(InRoot$$Sections)<br>.ANY (+RO)<br>}<br>RW_IRAM1 0x10000000 0x0000F000 { ; RW data<br>.ANY (+RW +ZI)<br>}  </p><p>RW_IRAM2 0x1000F000 UNINIT 0x00001000 {<br>.ANY (NO_INIT)<br>}<br>}<br>1234567891011121314</p></li></ol><h3 id="6-Arm®-Compiler-6-如何防止未初始化变量被初始化为0"><a href="#6-Arm®-Compiler-6-如何防止未初始化变量被初始化为0" class="headerlink" title="6. Arm® Compiler 6 如何防止未初始化变量被初始化为0"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#6-Arm%C2%AE-Compiler-6-%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%98%E9%87%8F%E8%A2%AB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA0"></a>6. Arm® Compiler 6 如何防止未初始化变量被初始化为0</h3><ol><li>定义变量时，使用编译器扩展属性 <code>__attribute__((section(&quot;name&quot;)))</code>来将变量放入指定段中。其中 <code>section(&quot;name&quot;)</code>选择一个指定的段。1<br>2uint32_t phy_link_init_flag __attribute__((section(“.bss.NO_INIT”)));<br>1</li><li><p>在分散加载文件中，定义名为 <code>.bss.NO_INIT</code>的段，其中前缀 <code>.bss</code>是必须的，并且只能为小写。这个前缀表明该数据段具有ZI属性。注意该段所在的可执行域要具有 <code>UNINIT</code>属性1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14LR_IROM1 0x00000000 0x00080000 { ; load region size_region 从0扇区开始<br>ER_IROM1 0x00000000 0x00080000 { ; load address = execution address<br>*.o (RESET, +First)<br>*(InRoot$$Sections)<br>.ANY (+RO)<br>}<br>RW_IRAM1 0x10000000 0x0000F000 { ; RW data<br>.ANY (+RW +ZI)<br>}  </p><p>RW_IRAM2 0x1000F000 UNINIT 0x00001000 {<br>.ANY (.bss.NO_INIT)<br>}<br>}</p></li></ol></blockquote><h2 id="定时器触发DMA控制GPIO"><a href="#定时器触发DMA控制GPIO" class="headerlink" title="定时器触发DMA控制GPIO"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%AE%9A%E6%97%B6%E5%99%A8%E8%A7%A6%E5%8F%91DMA%E6%8E%A7%E5%88%B6GPIO"></a>定时器触发DMA控制GPIO</h2><p><a href="https://community.st.com/s/question/0D53W00000Eo9rLSAR/parallel-transmission-using-gpio-and-dma-like-an4666">Parallel transmission using GPIO and DMA (like AN4666)</a></p><p><a href="https://metebalci.com/blog/stm32h7-gpio-toggling/">stm32h7-gpio-toggling</a></p><h1 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a><a href="https://wishzone.ltd/2022/12/10/STM32/#%E5%8F%82%E8%80%83%E5%8D%9A%E5%AE%A2"></a>参考博客</h1><p><a href="https://shjdgwj.github.io/e6640d881469/">STM32学习笔记</a><br><a href="https://blog.csdn.net/qq_38410730/category_7511110.html">Yngz_Miao《嵌入式》STM32开发笔记</a><br><a href="https://blog.csdn.net/as480133937/category_9188655.html">Z小旋 STM32</a><br><a href="http://www.mculover666.cn/">mculover666</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/uncategorized/">uncategorized</category>
      
      
      
      <comments>http://example.com/2023/09/12/stm32/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>LINUX_Command</title>
      <link>http://example.com/2023/09/12/linux-command/</link>
      <guid>http://example.com/2023/09/12/linux-command/</guid>
      <pubDate>Tue, 12 Sep 2023 14:05:36 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;关于Linux的指令&lt;/p&gt;
&lt;h2 id=&quot;环境变量&quot;&gt;&lt;a href=&quot;#环境变量&quot; class=&quot;headerlink&quot; title=&quot;环境变量&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2022/12/13/LINUX_Command/#</description>
        
      
      
      
      <content:encoded><![CDATA[<p>关于Linux的指令</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"></a>环境变量</h2><h3 id="一、查看环境变量"><a href="#一、查看环境变量" class="headerlink" title="一、查看环境变量"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%B8%80%E3%80%81%E6%9F%A5%E7%9C%8B%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"></a>一、查看环境变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env</span><br></pre></td></tr></table></figure><h3 id="二、查看PATH"><a href="#二、查看PATH" class="headerlink" title="二、查看PATH"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%BA%8C%E3%80%81%E6%9F%A5%E7%9C%8BPATH"></a>二、查看PATH</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export</span><br><span class="line">#或者单独查看PATH环境变量</span><br><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><h3 id="三、修改PATH"><a href="#三、修改PATH" class="headerlink" title="三、修改PATH"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%B8%89%E3%80%81%E4%BF%AE%E6%94%B9PATH"></a>三、修改PATH</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.直接用export命令：</span><br><span class="line">export PATH=$PATH:你的路径</span><br><span class="line">2.修改profile文件(对系统里所有用户都有效):</span><br><span class="line">nano /etc/profile</span><br><span class="line">export PATH=&quot;$PATH:你的路径&quot;</span><br><span class="line">3.修改.bashrc文件(只对该用户有用)：</span><br><span class="line">nano /root/.bashrc</span><br><span class="line">export PATH=&quot;$PATH:你的路径&quot;</span><br></pre></td></tr></table></figure><h2 id="传输协议"><a href="#传输协议" class="headerlink" title="传输协议"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE"></a>传输协议</h2><h3 id="硬件层"><a href="#硬件层" class="headerlink" title="硬件层"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E7%A1%AC%E4%BB%B6%E5%B1%82"></a>硬件层</h3><h4 id="有线通信"><a href="#有线通信" class="headerlink" title="有线通信"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E6%9C%89%E7%BA%BF%E9%80%9A%E4%BF%A1"></a>有线通信</h4><ul><li>MBus</li><li>USB</li><li>RS485</li><li>RS232</li><li>SPI</li><li>CAN</li><li>UART</li><li>IIC</li><li>IIS</li><li>Ethernet</li></ul><h4 id="近距离"><a href="#近距离" class="headerlink" title="近距离"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E8%BF%91%E8%B7%9D%E7%A6%BB"></a>近距离</h4><ul><li>RFID</li><li>Bluetooth</li><li>NFC</li><li>Dash7</li><li>IRdA</li><li>UWB</li></ul><h4 id="远距离非蜂窝通信"><a href="#远距离非蜂窝通信" class="headerlink" title="远距离非蜂窝通信"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E8%BF%9C%E8%B7%9D%E7%A6%BB%E9%9D%9E%E8%9C%82%E7%AA%9D%E9%80%9A%E4%BF%A1"></a>远距离非蜂窝通信</h4><ul><li>ZigBee</li><li>WIFI</li><li>wHART</li><li>Z-Wave</li><li>LoRa</li></ul><h4 id="远距离蜂窝通信"><a href="#远距离蜂窝通信" class="headerlink" title="远距离蜂窝通信"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E8%BF%9C%E8%B7%9D%E7%A6%BB%E8%9C%82%E7%AA%9D%E9%80%9A%E4%BF%A1"></a>远距离蜂窝通信</h4><ul><li>2G</li><li>3G</li><li>4G</li><li>5G</li><li>NB-IOT</li></ul><h3 id="网络传输层"><a href="#网络传输层" class="headerlink" title="网络传输层"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%B1%82"></a>网络传输层</h3><ul><li>IP4V</li><li>IP6V</li><li>TCP</li><li>UDP</li><li>6LoWPAN</li><li>RPL</li></ul><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E5%BA%94%E7%94%A8%E5%B1%82"></a>应用层</h3><ul><li>MQTT</li><li>CoAP</li><li>DDS</li><li>XMPP</li><li>AMQP</li><li>HTTP(Port80)</li><li>HTTPS(Port443)</li><li>FTP(Port21控制，Port20数据)表示为TCP端口</li><li>SSH(Port22)</li><li>VNC(Port5901)</li><li>TFTP(Port69)表示为UDP端口</li><li>RDP(Port3389)</li><li>DHCP(Port68)</li><li>Telnet(Port23)</li><li>DNS(Port53)</li><li>Samba(Port445)</li><li>SSL(Port1001、1011)</li></ul><h2 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E6%A1%8C%E9%9D%A2"></a>桌面</h2><h3 id="常见桌面"><a href="#常见桌面" class="headerlink" title="常见桌面"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E5%B8%B8%E8%A7%81%E6%A1%8C%E9%9D%A2"></a>常见桌面</h3><h4 id="低资源桌面"><a href="#低资源桌面" class="headerlink" title="低资源桌面"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%BD%8E%E8%B5%84%E6%BA%90%E6%A1%8C%E9%9D%A2"></a>低资源桌面</h4><ul><li>LxQt :(LXDE,GTK2),QT5,C++/QML</li></ul><h4 id="中资源桌面"><a href="#中资源桌面" class="headerlink" title="中资源桌面"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%B8%AD%E8%B5%84%E6%BA%90%E6%A1%8C%E9%9D%A2"></a>中资源桌面</h4><ul><li>Budgie :GTK3,4</li><li>MATE :GTK3,4</li><li>XFCE :GTK3,4</li><li>CINNAMON :GTK3,4</li></ul><h4 id="高资源桌面"><a href="#高资源桌面" class="headerlink" title="高资源桌面"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E9%AB%98%E8%B5%84%E6%BA%90%E6%A1%8C%E9%9D%A2"></a>高资源桌面</h4><ul><li>KDE :GTK3,4,C,wayland</li><li>GNOME :QT5,C++/QML,wayland</li></ul><h2 id="传输协议-1"><a href="#传输协议-1" class="headerlink" title="传输协议"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE-1"></a>传输协议</h2><h3 id="RDP远程桌面协议（TCP3389）"><a href="#RDP远程桌面协议（TCP3389）" class="headerlink" title="RDP远程桌面协议（TCP3389）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#RDP%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%8D%8F%E8%AE%AE%EF%BC%88TCP3389%EF%BC%89"></a>RDP远程桌面协议（TCP3389）</h3><p>RDP（Remote Desktop Protocal）远程桌面协议，是一个多通道协议，用于终端服务器与终端服务器客户端之间的通信，让用户（即客户端）连上提供微软终端机服务的电脑。服务端听取送到TCP3389端口的数据，RDP被封装并在TCP加密。<br>RDP协议栈分为五个层次，自上向下分别为应用层、安全层、MCS层、ISO层和TCP/IP层。<br>基于RDP的应用一般包括三个部分：<br><em>终端服务器</em>,用户界面传输协议,客户端</p><h3 id="SSH远程桌面协议-（TCP22）"><a href="#SSH远程桌面协议-（TCP22）" class="headerlink" title="SSH远程桌面协议 （TCP22）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#SSH%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%8D%8F%E8%AE%AE-%EF%BC%88TCP22%EF%BC%89"></a>SSH远程桌面协议 （TCP22）</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E6%A6%82%E8%BF%B0"></a>概述</h4><p>SSH（Secure Shell）是一种在不安全网络上用于安全远程登录和其他安全网络服务的协议。SSH 为建立在应用层基础上的安全协议，专为远程登录会话和其他网络服务提供安全性的协议。</p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E9%AA%8C%E8%AF%81"></a>验证</h4><ul><li>第一种级别（基于口令的安全验证）</li></ul><p>只要你知道自己帐号和口令，就可以登录到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人”这种方式的攻击。</p><ul><li>第二种级别（基于密匙的安全验证）</li></ul><p>需要依靠密匙，也就是你必须为自己创建一对密匙，并把公用密匙放在需要访问的服务器上。如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的密匙进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用密匙，然后把它和你发送过来的公用密匙进行比较。如果两个密匙一致，服务器就用公用密匙加密“质询”（challenge）并把它发送给客户端软件。客户端软件收到“质询”之后就可以用你的私人密匙解密再把它发送给服务器。</p><ul><li>区别</li></ul><p>1.第二种级别不需要在网络上传送口令，但你必须知道自己密匙的口令</p><p>2.第二种级别不仅加密所有传送的数据，而且“中间人”这种攻击方式也是不可能的（因为他没有你的私人密匙）。但是整个登录的过程可能需要10秒</p><h3 id="VNC远程桌面协议（TCP5901）"><a href="#VNC远程桌面协议（TCP5901）" class="headerlink" title="VNC远程桌面协议（TCP5901）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#VNC%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%8D%8F%E8%AE%AE%EF%BC%88TCP5901%EF%BC%89"></a>VNC远程桌面协议（TCP5901）</h3><p>VNC是虚拟网络控制台(Virtual Network Console)的缩写，是在基于类UNIX操作系统的免费的开源软件，远程控制管理功能强大，但是由于VNC协议自身的限制，无法提供文件上传下载的能力，因此用户在行云管家中使用VNC相关协议访问服务器时，同样也无法进行文件传输。建议有相关需求的用户，尽量使用RDP或者SSH协议访问服务器。</p><h3 id="PCoIP远程桌面协议（VMware）"><a href="#PCoIP远程桌面协议（VMware）" class="headerlink" title="PCoIP远程桌面协议（VMware）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#PCoIP%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%8D%8F%E8%AE%AE%EF%BC%88VMware%EF%BC%89"></a>PCoIP远程桌面协议（VMware）</h3><h3 id="SPICE远程桌面协议（redhat）"><a href="#SPICE远程桌面协议（redhat）" class="headerlink" title="SPICE远程桌面协议（redhat）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#SPICE%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%8D%8F%E8%AE%AE%EF%BC%88redhat%EF%BC%89"></a>SPICE远程桌面协议（redhat）</h3><h3 id="ICA-HDX远程桌面协议（citrix）"><a href="#ICA-HDX远程桌面协议（citrix）" class="headerlink" title="ICA/HDX远程桌面协议（citrix）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#ICA-HDX%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%8D%8F%E8%AE%AE%EF%BC%88citrix%EF%BC%89"></a>ICA/HDX远程桌面协议（citrix）</h3><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E5%91%BD%E4%BB%A4"></a>命令</h2><h3 id="删除文件-rm"><a href="#删除文件-rm" class="headerlink" title="删除文件 rm"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6-rm"></a>删除文件 <code>rm</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">完整命令：rm [options] name</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">1. -i 删除前逐一询问确认</span><br><span class="line">2. -f 无需确认，直接删除，即使文件属性是 &#x27;唯读&#x27;</span><br><span class="line">3. -r 将目录及以下的内容全部删除</span><br><span class="line"></span><br><span class="line">删除当前目录下的所有内容</span><br><span class="line">命令： rm -r *</span><br></pre></td></tr></table></figure><h3 id="复制文件-cp"><a href="#复制文件-cp" class="headerlink" title="复制文件 cp"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6-cp"></a>复制文件 <code>cp</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">不管是 cp 还是 scp 、rsync 的上传或下载命令，他们的命令书写都遵循一个规则，就是从哪传到哪，前面是（从哪）源文件，后面是（到哪）目标文件.复制源文件或目录到指定目录</span><br><span class="line"></span><br><span class="line">语法：cp +参数+源文件或目录+目标目录（可以改名）</span><br><span class="line"></span><br><span class="line">-r或-R：递归处理，将指定目录下的子文件和子目录一并处理（复制目录的时候使用）</span><br><span class="line">-f：强行复制文件或目录，不论目标文件或目录是否已存在</span><br><span class="line">-p：保留文件属性（所有者、所属组、文件权限、文件时间·····）</span><br><span class="line">-a：相当于-prd</span><br><span class="line">-i：覆盖既有文件时先询问用户。（默认-i）</span><br><span class="line">-l：对源文件建立硬连接，非复制文件。</span><br><span class="line">-S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀。</span><br><span class="line">-b：覆盖已存在的文件目标前将目标文件备份。</span><br><span class="line">-v：详细显示命令执行的操作。</span><br><span class="line">-d:–no-dereference –preserv=links 复制符号连接加的选项</span><br><span class="line">注意：当复制目录的时候一定要加上选项-r，不然不能复制</span><br></pre></td></tr></table></figure><ul><li>不管是 <code>cp</code> 还是 <code>scp</code> 、<code>rsync</code> 的上传或下载命令，他们的命令书写都遵循一个规则，就是从哪传到哪，前面是（从哪）源文件，后面是（到哪）目标文件</li><li><em>复制源文件或目录到指定目录</em></li><li><em>语法：cp +参数+源文件或目录+目标目录（可以改名）</em></li></ul><h3 id="编辑文本文件-vim"><a href="#编辑文本文件-vim" class="headerlink" title="编辑文本文件 vim"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E7%BC%96%E8%BE%91%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6-vim"></a>编辑文本文件 <code>vim</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">打开并编辑文本文件</span><br><span class="line"></span><br><span class="line">共有三种模式：命令模式、输入模式、末行模式</span><br><span class="line">1. 完整命令： &quot;vim 文件路径&quot;</span><br><span class="line">2. 简单介绍</span><br><span class="line">命令模式： 在文件中进行 查找、删除、复制、粘贴 操作</span><br><span class="line">输入模式： 就是正常的编辑文件</span><br><span class="line">末行模式： 对文件的操作进行 保存、退出vim等</span><br><span class="line">3. 三种模式之间的切换</span><br><span class="line">命令模式 --&gt; 输入模式 # i、I、a、A、o、O、Insert 键</span><br><span class="line">输入模式 --&gt; 命令模式 # Esc 键</span><br><span class="line">命令模式 --&gt; 末行模式 # ： 键</span><br><span class="line">末行模式 --&gt; 命令模式 # Esc 键</span><br></pre></td></tr></table></figure><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">命令模式： # 实际上看不到输入的命令</span><br><span class="line">默认处于命令模式，此模式下可以用方向键或者&quot; h、j、k、l &quot; 移动光标，还可以对文件进行复制、粘贴、替换、删除等操作</span><br><span class="line"></span><br><span class="line"># 光标操作：</span><br><span class="line">跳转到行首： Home 键、 &quot;^&quot;键、数字&quot;0&quot;</span><br><span class="line">跳转到行尾： End 键、&quot;$&quot;键</span><br><span class="line">跳转到文件的首行： &quot;1G&quot;、&quot;gg&quot;</span><br><span class="line">跳转到文件的尾行： &quot;G&quot;</span><br><span class="line">跳转到文件的第n行： &quot;nG&quot; # n为数字</span><br><span class="line">行号显示/不显示： &quot;:set nu&quot; &quot;:set nonu&quot;</span><br><span class="line"></span><br><span class="line"># 文件内容操作</span><br><span class="line"></span><br><span class="line">删除：</span><br><span class="line">删除光标处的单个字符： &quot;x、X、Del&quot;键</span><br><span class="line">删除当前光标所在行： &quot;dd&quot;</span><br><span class="line">删除从光标处开始的 n 行内容 &quot;ndd&quot; # n为数字</span><br><span class="line">删除从行首到光标的所有内容 &quot;d^&quot;</span><br><span class="line">删除从行尾到光标的所有内容 &quot;d$&quot;</span><br><span class="line">复制：</span><br><span class="line">复制光标所在行的整行 &quot;yy&quot;</span><br><span class="line">复制从光标往上的 n 行内容 &quot;nyy&quot; # n为数字</span><br><span class="line"></span><br><span class="line">粘贴：</span><br><span class="line">粘贴到光标之后 &quot;p&quot; # 小写</span><br><span class="line">粘贴到光标之前 &quot;P&quot; # 大写</span><br><span class="line"></span><br><span class="line">查找： # 能看到命令</span><br><span class="line">查找字符串 &quot;/word&quot; # 从上而下查找&quot;word&quot;字符串</span><br><span class="line">查找字符串 &quot;/word&quot; # 从下而上查找&quot;word&quot;字符串</span><br></pre></td></tr></table></figure><h4 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">主要是用来对文件进行保存、退出vim编辑器 等操作</span><br><span class="line">1. 保存文件</span><br><span class="line">:w</span><br><span class="line">:w 文件路径 # 另存为其他文件，如 :w /root/new_file/test.txt ，另存为/root/new_file目录下的test.txt</span><br><span class="line">2. 退出vim</span><br><span class="line">:q # 未修改任何内容的情况下，退出vim</span><br><span class="line">:q! # 放弃修改，退出vi</span><br><span class="line">3. 保存文件并退出vim</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure><h3 id="查看文件-cat"><a href="#查看文件-cat" class="headerlink" title="查看文件 cat"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6-cat"></a>查看文件 <code>cat</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">查看详情</span><br><span class="line">cat 命令 两种用法</span><br><span class="line"></span><br><span class="line">显示文件内容，打印到终端</span><br><span class="line"></span><br><span class="line">也可以把几个文件内容附加到另一个文件中，即连接合并文件</span><br><span class="line"></span><br><span class="line">基本使用：</span><br><span class="line">1. 查看文件内容（会把内容全部打印到终端）</span><br><span class="line">cat [选项] 文件路径 # 不论文件内容有多少，都会一次性显示。如果文件非常大，那么文件开头的内容就看不到了不过 Linux 可以使用 PgUp+上箭头 组合键向上翻页，但是这种翻页是有极限的，如果文件足够长，那么还是无法看全文件的内容</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">-A 相当于 -vET 选项的整合，用于列出所有隐藏符号；</span><br><span class="line">-E 列出每行结尾的回车符 $；</span><br><span class="line">-n 对输出的所有行进行编号；</span><br><span class="line">-b 同 -n 不同，此选项表示只对非空行进行编号。</span><br><span class="line">-T 把 Tab 键 ^I 显示出来；</span><br><span class="line">-V 列出特殊字符；</span><br><span class="line">-s 当遇到有连续 2 行以上的空白行时，就替换为 1 行的空白行。</span><br><span class="line"></span><br><span class="line">2. 查找文件中的内容</span><br><span class="line">cat a.txt grep ** # ** 即是要查找的内容</span><br><span class="line"></span><br><span class="line">3. 利用cat 创建文件</span><br><span class="line">若原来没有文件:</span><br><span class="line">cat &gt; b.txt &lt;&lt;EOF</span><br><span class="line">&gt;你要输入的内容...</span><br><span class="line">&gt;EOF</span><br><span class="line"></span><br><span class="line"># 上面三行的意思是创建并打开一个 b.txt文件，并且以EOF为结束编辑并保存的结束语（也可以用自定义的结束语），中间输入自己要编辑的内容，最后输入EOF保存退出。</span><br><span class="line"></span><br><span class="line">4. 利用cat清空文件内容（实际就是利用cat的编辑模式，进行覆盖写，和python中的 w 模式相同）</span><br><span class="line">cat &gt;c.txt&lt;&lt;EOF</span><br><span class="line">&gt;EOF</span><br><span class="line"></span><br><span class="line">5. 像文件的尾部写入内容（追加写）</span><br><span class="line">命令与上面的覆盖写类似，只是把 &gt; 换成 &gt;&gt; 即可</span><br><span class="line">cat &gt;&gt; b.txt &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">6. cat 可以实现调用变量，对关键字$的转义</span><br><span class="line">如 不转义$</span><br><span class="line">cat &gt;test.txt &lt;&lt;EOF</span><br><span class="line">&gt;DATE=$(date + %Y%m%d)</span><br><span class="line">&gt;mkdir /root/$DATE</span><br><span class="line">&gt;EOF</span><br><span class="line">cat test.txt</span><br><span class="line">结果为：</span><br><span class="line">DATE=20220620</span><br><span class="line">mkdir /root/</span><br><span class="line"></span><br><span class="line">转义 $</span><br><span class="line">cat &gt;test.txt &lt;&lt;EOF</span><br><span class="line">&gt;DATE=$(date + %Y%m%d)</span><br><span class="line">&gt;mkdir /root/\$DATE</span><br><span class="line">&gt;EOF</span><br><span class="line">cat test.txt</span><br><span class="line">结果为：</span><br><span class="line">DATE=20220620</span><br><span class="line">mkdir /root/$DATE</span><br><span class="line"></span><br><span class="line">7. 合并文件的内容到一个新的文件中</span><br><span class="line">[root@localhost base]# ls</span><br><span class="line">file1.txt file2.txt</span><br><span class="line">[root@localhost base]# cat file1.txt</span><br><span class="line">http://c.biancheng.net(file1.txt)</span><br><span class="line">[root@localhost base]# cat file2.txt</span><br><span class="line">is great(file2.txt)</span><br><span class="line">[root@localhost base]# cat file1.txt file2.txt &gt; file3.txt</span><br><span class="line">[root@localhost base]# more file3.txt</span><br><span class="line"></span><br><span class="line"># more 命令也可查看文件中的内容</span><br><span class="line"></span><br><span class="line">http://c.biancheng.net(file1.txt)</span><br><span class="line">is great(file2.txt)</span><br><span class="line">[root@localhost base]# ls</span><br><span class="line">file1.txt file2.txt file3.txt</span><br></pre></td></tr></table></figure><h3 id="后台执行程序"><a href="#后台执行程序" class="headerlink" title="后台执行程序"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F"></a>后台执行程序</h3><h4 id="（1）后台执行"><a href="#（1）后台执行" class="headerlink" title="（1）后台执行"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%881%EF%BC%89%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C"></a>（1）后台执行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">nohup 命令</span><br><span class="line">英文全称 no hang up （不挂起），用于在系统后台不挂断地运行命令，退出终端不会影响程序的运行</span><br><span class="line"></span><br><span class="line">在默认情况下（非重定向时），会输出一个名叫 nohup.out 的文件到当前目录下，如果当前目录的 nohup.out文件不可写，输出重定向到 $HOME/nohup.out 文件中</span><br><span class="line">1. 完整命令：</span><br><span class="line"></span><br><span class="line">&quot; nohup Command [ Arg … ] [　&amp; ] &quot;</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">Command：要执行的命令。</span><br><span class="line"></span><br><span class="line">Arg：一些参数，可以指定输出文件。</span><br><span class="line"></span><br><span class="line">&amp;：让命令在后台执行，终端退出后命令仍旧执行。</span><br><span class="line"></span><br><span class="line">2. 实例</span><br><span class="line"></span><br><span class="line">nohup python /opt/project/test.py &amp; # 以下命令在后台执行 /opt/project 目录下的 test.py 脚本，在终端如果看到以下输出说明运行成功 appending output to nohup.out</span><br><span class="line"></span><br><span class="line">nohup /root/runoob.sh &gt; runoob.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">2&gt;&amp;1 解释：</span><br><span class="line"># 将标准错误 2 重定向到标准输出 &amp;1 ，标准输出 &amp;1 再被重定向输入到 runoob.log 文件中</span><br><span class="line">0 – stdin (standard input，标准输入)</span><br><span class="line">1 – stdout (standard output，标准输出)</span><br><span class="line">2 – stderr (standard error，标准错误输出)</span><br><span class="line"></span><br><span class="line">3. 结束后台运行的程序</span><br><span class="line">- 可以用杀死进程的方法实现</span><br><span class="line">- 可以查看当前终端后台执行的任务，然后用 kill jobnum 命令来删除任务（这种不太推荐，终端断开或关闭之后，就差看不到之前的任务了）</span><br><span class="line"></span><br><span class="line">ps -aux  grep &quot;test.py&quot;</span><br><span class="line">ps -aux  grep &quot;runoob.sh&quot;</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">a : 显示所有程序</span><br><span class="line">u : 以用户为主的格式来显示</span><br><span class="line">x : 显示所有程序，不区分终端机</span><br><span class="line"></span><br><span class="line">找到进程号PID之后，可以用 kill PID 命令来删除</span><br><span class="line">kill -9 进程号PID</span><br></pre></td></tr></table></figure><h4 id="（2）前、后台任务切换"><a href="#（2）前、后台任务切换" class="headerlink" title="（2）前、后台任务切换"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%882%EF%BC%89%E5%89%8D%E3%80%81%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1%E5%88%87%E6%8D%A2"></a>（2）前、后台任务切换</h4><ul><li><p>将后台执行的程序调到前台继续执行  </p><p>命令： fg<br>将后台中的命令调至前台继续运行  </p><p>如果后台中有多个命令，可以先用jobs -l查看jobnun，然后用 fg jobnum 将选中的命令调出  </p><p>命令： Ctrl + z<br>将一个正在前台执行的命令放到后台，并且处于暂停状态  </p><p>命令： bg<br>将一个在后台暂停的命令，变成在后台继续执行  </p><p>如果后台中有多个命令，可以先用jobs查看jobnum，然后用 bg jobnum 将选中的命令调出继续执行</p></li></ul><h4 id="（3）nohup-out-维护"><a href="#（3）nohup-out-维护" class="headerlink" title="（3）nohup.out 维护"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%883%EF%BC%89nohup-out-%E7%BB%B4%E6%8A%A4"></a>（3）nohup.out 维护</h4><ul><li><code>nohup.out</code>会一直增加内容，因此就有了不停止服务直接，清空 <code>nohup.out</code>文件的方法。<br>两个可以不用停止WEB服务就可以清空 <code>nohup.out</code>的命令</li><li><p>第一种：<br>cp /dev/null nohup.out  </p><p>第二种：<br>cat /dev/null &gt; nohup.out</p></li></ul><h3 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E8%BF%9B%E7%A8%8B%E7%9B%B8%E5%85%B3"></a>进程相关</h3><h4 id="（1）显示进程"><a href="#（1）显示进程" class="headerlink" title="（1）显示进程"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%881%EF%BC%89%E6%98%BE%E7%A4%BA%E8%BF%9B%E7%A8%8B"></a>（1）显示进程</h4><ul><li><a href="https://www.coonote.com/linux-note/linux-ps-cmd-use.html">查看详情</a></li><li><p>显示进程常用命令：<br>ps -ef # 显示所有进程信息  </p><p>ps -efgrep *** # 查找特定进程， *** 代表进程信息中包含的关键字，如 是什么程序python、java等，运行脚本的文件名等</p></li></ul><h4 id="（2）杀死进程"><a href="#（2）杀死进程" class="headerlink" title="（2）杀死进程"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%882%EF%BC%89%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8B"></a>（2）杀死进程</h4><ul><li><a href="http://edu.jb51.net/linux/linux-comm-kill.html">查看详情</a></li><li><p>杀进程常用命令<br>kill PID # 杀死某进程<br>kill -9 PID # 彻底杀死某进程  </p><p>杀死指定用户的所有进程<br>kill -9 $(ps -ef grep hnlinux) # 方法一 过滤出hnlinux用户进程<br>kill -u hnlinux # 方法二</p></li></ul><h3 id="防火墙相关"><a href="#防火墙相关" class="headerlink" title="防火墙相关"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3"></a>防火墙相关</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">一、打开/关闭某个端口</span><br><span class="line"># 查看防火墙状态：（active (running) 即是开启状态）</span><br><span class="line">systemctl status firewalld</span><br><span class="line"></span><br><span class="line"># 查看已开放端口：（8080和3306 即是已开放端口）</span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"></span><br><span class="line"># 防火墙开放端口：（以3306为例）</span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"></span><br><span class="line"># 关闭8080端口</span><br><span class="line">firewall-cmd --permanent --zone=public --remove-port=8080/tcp</span><br><span class="line"></span><br><span class="line"># 重启防火墙:</span><br><span class="line">systemctl restart firewalld.service</span><br><span class="line"></span><br><span class="line"># 更新防火墙规则：</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">命令含义：</span><br><span class="line"></span><br><span class="line">–zone #作用域</span><br><span class="line"></span><br><span class="line">–add-port=80/tcp #添加端口，格式为：端口/通讯协议</span><br><span class="line"></span><br><span class="line">–permanent #永久生效，没有此参数重启后失效</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload 并不中断用户连接，即不丢失状态信息</span><br><span class="line"></span><br><span class="line">firewalld的基本使用</span><br><span class="line"></span><br><span class="line">二、常用操作命令</span><br><span class="line"></span><br><span class="line"># 启动：</span><br><span class="line">systemctl start firewalld</span><br><span class="line"></span><br><span class="line"># 关闭：</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"># 查看状态：</span><br><span class="line">systemctl status firewalld</span><br><span class="line"></span><br><span class="line"># 开机禁用 ：</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line"># 开机启用 ：</span><br><span class="line">systemctl enable firewalld</span><br><span class="line"></span><br><span class="line"># 启动一个服务：</span><br><span class="line">systemctl start firewalld.service</span><br><span class="line"></span><br><span class="line"># 关闭一个服务：</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line"># 重启一个服务：</span><br><span class="line">systemctl restart firewalld.service</span><br><span class="line"></span><br><span class="line"># 显示一个服务的状态：</span><br><span class="line">systemctl status firewalld.service</span><br><span class="line"></span><br><span class="line"># 在开机时启用一个服务：</span><br><span class="line">systemctl enable firewalld.service</span><br><span class="line"></span><br><span class="line"># 在开机时禁用一个服务：</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line"># 查看服务是否开机启动：</span><br><span class="line">systemctl is-enabled firewalld.service</span><br><span class="line"></span><br><span class="line"># 查看已启动的服务列表：</span><br><span class="line">systemctl list-unit-filesgrep enabled</span><br><span class="line"></span><br><span class="line"># 查看启动失败的服务列表：</span><br><span class="line">systemctl --failed</span><br><span class="line"></span><br><span class="line"># 配置</span><br><span class="line">firewalld-cmd</span><br><span class="line"></span><br><span class="line"># 查看版本：</span><br><span class="line">firewall-cmd --version</span><br><span class="line"></span><br><span class="line"># 查看帮助：</span><br><span class="line">firewall-cmd --help</span><br><span class="line"></span><br><span class="line"># 显示状态：</span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line"># 查看所有打开的端口：</span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br><span class="line"></span><br><span class="line"># 查看区域信息:</span><br><span class="line">firewall-cmd --get-active-zones</span><br><span class="line"></span><br><span class="line"># 查看指定接口所属区域：</span><br><span class="line">firewall-cmd --get-zone-of-interface=eth0</span><br><span class="line"></span><br><span class="line"># 拒绝所有包：</span><br><span class="line">firewall-cmd --panic-on</span><br><span class="line"></span><br><span class="line"># 取消拒绝状态：</span><br><span class="line">firewall-cmd --panic-off</span><br><span class="line"></span><br><span class="line"># 查看是否拒绝：</span><br><span class="line">firewall-cmd --query-panic</span><br><span class="line"></span><br><span class="line">systemctl start firewalld.service    启动防火墙</span><br><span class="line"></span><br><span class="line">systemctl enable firewalld    自启动</span><br><span class="line"></span><br><span class="line">firewalld-cmd    后面跟命令行</span><br><span class="line"></span><br><span class="line">firewalld-cmd --help    查看一下有啥命令呗</span><br><span class="line"></span><br><span class="line">firewall-config     图形化配置，偷懒大法</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=block --add-source=192.168.100.0/24    添加一条规则，凡是来自192.168.100.0/24网段的信息就放到block中</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=block --remove-source=192.168.100.0/24    remove删了这条规则</span><br><span class="line"></span><br><span class="line">这个block 的zone 到这里的都给拒绝了，去别的机器ping就ping不通了</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=drop --add-source=192.168.100.0/24    这个drop比block还厉害，直接把你包给扔了都不告诉你</span><br><span class="line"></span><br><span class="line">一般用drop，别用block</span><br><span class="line"></span><br><span class="line">systemctl restart firewalld.service    重启以后临时规则就没了，永久规则还有</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --zone=drop --add-source=192.168.100.0/24    使用--permanent永久规则，必须重启服务后生效</span><br><span class="line"></span><br><span class="line">firewall-cmd --list-all    列出规则，默认public</span><br></pre></td></tr></table></figure><h3 id="用户-su-和-sudo"><a href="#用户-su-和-sudo" class="headerlink" title="用户 su 和 sudo"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E7%94%A8%E6%88%B7-su-%E5%92%8C-sudo"></a>用户 <code>su 和 sudo</code></h3><h3 id="（1）su介绍"><a href="#（1）su介绍" class="headerlink" title="（1）su介绍"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%881%EF%BC%89su%E4%BB%8B%E7%BB%8D"></a>（1）<code>su</code>介绍</h3><ul><li><code>su</code>的全称是switch user，用来切换当前用户。<code>su</code>的一般使用方法是 <code>su</code> 或者 <code>su -</code>1<br>su是切换到root用户的命令，主要用法如下：<br>su # 不带参数直接输入su将切换到root用户，需要输入root密码<br>su - # 等同于 su -l，切换到root用户并加载root的环境变量（等同于root身份登录），加入了 - 或 -l 参数表示同时切换到该用户的环境<br>su username # 切换到其他用户，需要输入该用户的密码<br>su -c ‘commond’ # 以root用户执行命令，类似于sudo，不同之处是需要输入root密码<br>su命令主要是用来切换root身份，前提是需要知道root密码</li></ul><h4 id="（2）sudo介绍"><a href="#（2）sudo介绍" class="headerlink" title="（2）sudo介绍"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%882%EF%BC%89sudo%E4%BB%8B%E7%BB%8D"></a>（2）<code>sudo</code>介绍</h4><ul><li>全称为super user do，即以超级用户root的身份执行命令</li><li>使用 <code>sudo su -</code>，提供当前用户的密码，可以切换到root用户</li><li>完整命令 <code>sudo &#39;要执行的commond&#39;</code></li></ul><h3 id="权限相关"><a href="#权限相关" class="headerlink" title="权限相关"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3"></a>权限相关</h3><ul><li><a href="https://www.136.la/nginx/show-64121.html">查看详情</a></li></ul><h4 id="（1）关键字解释"><a href="#（1）关键字解释" class="headerlink" title="（1）关键字解释"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%881%EF%BC%89%E5%85%B3%E9%94%AE%E5%AD%97%E8%A7%A3%E9%87%8A"></a>（1）关键字解释</h4><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9</p><p>通过ll查看详细信息时，例如：<br>-rwxrwxrwx. 1 root root 181 3月 15 15:34 test.txt  </p><p>从左往右：（r 为 读，w 为 写，x 为 可执行）  </p><p>- # 表示类型 -表示普通文件 d表示目录<br>rwx # 第一组rwx：当前用户权限，某个权限没有就显示 -<br>rwx # 第二组rwx：当前用户组权限，某个权限没有就显示 -<br>rwx # 第三组rwx：其他用户权限，某个权限没有就显示 -</p><h4 id="（2）chmod-命令修改权限"><a href="#（2）chmod-命令修改权限" class="headerlink" title="（2）chmod 命令修改权限"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%882%EF%BC%89chmod-%E5%91%BD%E4%BB%A4%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90"></a>（2）chmod 命令修改权限</h4><ul><li>完整命令 <code>chmod [options] mode 文件或目录名</code></li><li><p>修改文件权限，共两种命令方式</p><ul><li>使用相加减表达权限，</li><li>使用数字表达权限</li></ul><p>权限介绍：4=可读 2=可写 1=可执行<br>7 7 7<br>第一个7 是 文件所有者的权限<br>第二个7 是 文件所属组的权限<br>第三个7 是 其他用户的权限<br>7 = 4+2+1 表示有可读可写可执行<br>6 = 4+2 表示有可读可写权限<br>5 = 4+1 表示有可读可执行  </p><p>[options]：<br>-c # 若该文件权限确实已经更改，才显示其更改动作<br>-f # 若该文件权限无法被更改也不要显示错误讯息<br>-v # 显示权限变更的详细资料<br>-R # 对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)  </p><p>mode ：<br>u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。u用户 g组 o其它 a 所有用户(默认)  </p><p>+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。  </p><p>r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行</p></li></ul><h4 id="（3）权限修改实例"><a href="#（3）权限修改实例" class="headerlink" title="（3）权限修改实例"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%EF%BC%883%EF%BC%89%E6%9D%83%E9%99%90%E4%BF%AE%E6%94%B9%E5%AE%9E%E4%BE%8B"></a>（3）权限修改实例</h4><h4 id="i）更改目录所有者（非-chmod-命令）"><a href="#i）更改目录所有者（非-chmod-命令）" class="headerlink" title="i）更改目录所有者（非 chmod 命令）"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#i%EF%BC%89%E6%9B%B4%E6%94%B9%E7%9B%AE%E5%BD%95%E6%89%80%E6%9C%89%E8%80%85%EF%BC%88%E9%9D%9E-chmod-%E5%91%BD%E4%BB%A4%EF%BC%89"></a>i）更改目录所有者（非 <code>chmod 命令</code>）</h4><p>1</p><p>“ chown -R 用户名称 目录名称 “</p><h4 id="ii）更改目录权限"><a href="#ii）更改目录权限" class="headerlink" title="ii）更改目录权限"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#ii%EF%BC%89%E6%9B%B4%E6%94%B9%E7%9B%AE%E5%BD%95%E6%9D%83%E9%99%90"></a>ii）更改目录权限</h4><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8</p><p>1. chmod u+x file # 给file的属主增加执行权限<br>2. chmod 751 file # 给file的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限<br>3. chmod u=rwx,g=rx,o=x file # 同 2 效果一样<br>4. chmod =r file # 为所有用户分配读权限<br>5. chmod 444 file # 同 4 效果一样<br>6. chmod a-wx,a+r file # 同 4、5 效果一样<br>7. chmod -R u+r directory # 递归地给directory目录下所有文件和子目录的属主分配读的权限<br>8. chmod 4755 # 设置用ID，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</p><h3 id="下载-wget"><a href="#下载-wget" class="headerlink" title="下载 wget"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#%E4%B8%8B%E8%BD%BD-wget"></a>下载 wget</h3><h4 id="wget介绍"><a href="#wget介绍" class="headerlink" title="wget介绍"></a><a href="https://wishzone.ltd/2022/12/13/LINUX_Command/#wget%E4%BB%8B%E7%BB%8D"></a><code>wget</code>介绍</h4><ul><li><a href="https://blog.csdn.net/qq_43842093/article/details/122030935">查看详情</a></li><li><code>wget</code>命令是Linux系统用于从Web下载文件的命令行工具，支持 HTTP、HTTPS及FTP协议下载文件，而且 <code>wget</code>还提供了很多选项，例如下载多个文件、后台下载，使用代理等等</li><li><p>完整命令 <code>wget [options] [url]</code><br>[options]： 常用参数，’注意大小写’<br>-O # 以其他名称保存下载的文件<br>-P # 将文件下载到指定目录<br>-c # 断点续传<br>-nc # 不要重复下载已存在的文件<br>-b # 在后台下载<br>-i # 下载多个文件<br>-limit-rate # 限制下载速度<br>-U # 设定模拟下载<br>-t # 增加重试次数<br>实例：<br># 该命令会下载文件到当前工作目录中，在下载过程中，会显示进度条、文件大小、下载速度等<br>wget <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p>wget -O redis.tar.gz <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p>wget -P /usr/software <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p>wget -c <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p># 如果先要一次下载多个文件，首先需要创建一个文本文件，并将所有的url添加到该文件中，每个url都必须是单独的一行<br>vim download_list.txt<br>wget -i download_list.txt  </p><p># 下载速度限制为1m/s<br>wget —limit-rate=1m <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p># 如果远程服务器阻止wget下载资源，我们可以通过-U选项模拟浏览器进行下载，例如下面模拟谷歌浏览器下载<br>wget -U ‘Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.43 Safari/537.36’ <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p># 设置重试次数为40次<br>wget —t=40 <a href="https://download.redis.io/releases/redis-6.0.8.tar.gz">https://download.redis.io/releases/redis-6.0.8.tar.gz</a>  </p><p># 通过FTP下载如果要从受密码保护的FTP服务器下载文件，需要指定用户名和密码，格式如下<br>wget —ftp-user=<username> —ftp-password=<password> url</p></li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      
      <comments>http://example.com/2023/09/12/linux-command/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Android</title>
      <link>http://example.com/2023/09/12/android/</link>
      <guid>http://example.com/2023/09/12/android/</guid>
      <pubDate>Tue, 12 Sep 2023 14:04:52 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;一些安卓开发教程，不断更新ing&lt;/p&gt;
&lt;h1 id=&quot;主要&quot;&gt;&lt;a href=&quot;#主要&quot; class=&quot;headerlink&quot; title=&quot;主要&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2022/12/18/Android/#%E4%B8</description>
        
      
      
      
      <content:encoded><![CDATA[<p>一些安卓开发教程，不断更新ing</p><h1 id="主要"><a href="#主要" class="headerlink" title="主要"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E4%B8%BB%E8%A6%81"></a>主要</h1><h1 id="adb调试"><a href="#adb调试" class="headerlink" title="adb调试"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb%E8%B0%83%E8%AF%95"></a>adb调试</h1><h2 id="有线调试"><a href="#有线调试" class="headerlink" title="有线调试"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E6%9C%89%E7%BA%BF%E8%B0%83%E8%AF%95"></a>有线调试</h2><p>1<br>2<br>3<br>4</p><p>adb device #查看adb设备<br>adb shell #连接adb设备<br>adb root #以管理员身份连接adb设备  </p><h2 id="无线调试"><a href="#无线调试" class="headerlink" title="无线调试"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95"></a>无线调试</h2><p>1<br>2<br>3<br>4<br>5</p><p>adb tcpip 5555 #给设备指定端口，其他端口也可以<br>adb connect 192.168.31.196:5555 #连接设备<br>adb devices #查看设备是否连接<br>adb shell #连接设备  </p><h2 id="设置开机启动无线调试"><a href="#设置开机启动无线调试" class="headerlink" title="设置开机启动无线调试"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95"></a>设置开机启动无线调试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在手机的/system/build.prop中增加一行配置:service.adb.tcp.port=5555（同样可以指定为其他值）即可，因此可以先将/system/build.prop从手机中pull出来，修改后再push进去</span><br></pre></td></tr></table></figure><p>1<br>2<br>3<br>4<br>5</p><p>adb pull /system/build.prop #将build.prop文件拉出<br>nano build.prop #编辑build.prop文件，添加上述代码<br>adb remount<br>adb push build.prop /system/ #将build.prop文件放回  </p><h2 id="其他常见命令"><a href="#其他常见命令" class="headerlink" title="其他常见命令"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E5%85%B6%E4%BB%96%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4"></a>其他常见命令</h2><h3 id="adb-基础指令"><a href="#adb-基础指令" class="headerlink" title="adb 基础指令"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E5%9F%BA%E7%A1%80%E6%8C%87%E4%BB%A4"></a>adb 基础指令</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20</p><p>//启动 adb 服务<br>adb start-server  </p><p>//关闭 adb 服务<br>adb kill-server  </p><p>//获取 adb 帮助信息<br>adb help  </p><p>//获取 adb 当前版本<br>adb version  </p><p>//重启设备<br>adb reboot  </p><p>//获取设备 IP<br>adb shell ifconfig  </p><p>//断开设备<br>adb disconnect</p><h3 id="adb-设置权限"><a href="#adb-设置权限" class="headerlink" title="adb 设置权限"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E8%AE%BE%E7%BD%AE%E6%9D%83%E9%99%90"></a>adb 设置权限</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8</p><p>//root 权限<br>adb root  </p><p>//将 ‘/system’ 部分置于可写入模式，需先 root，比如 push 前先执行 remount<br>adb remount  </p><p>//remount 等同<br>adb shell mount -o rw,remount,rw /system</p><h3 id="adb-安装卸载"><a href="#adb-安装卸载" class="headerlink" title="adb 安装卸载"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E5%AE%89%E8%A3%85%E5%8D%B8%E8%BD%BD"></a>adb 安装卸载</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8</p><p>//安装应用<br>adb install launch.apk  </p><p>//安装带参，参数参考 adb help 注释<br>adb install -r -t launch.apk  </p><p>//卸载应用<br>adb uninstall com.google.launch</p><h3 id="adb-上传下载"><a href="#adb-上传下载" class="headerlink" title="adb 上传下载"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD"></a>adb 上传下载</h3><p>1<br>2<br>3<br>4<br>5</p><p>//上传(push local remote)<br>adb push /Users/launch.apk /system/app  </p><p>//下载(pull remote local)<br>adb pull /system/app/launch.apk /Users/Roy/Desktop/</p><h3 id="adb-截图录屏"><a href="#adb-截图录屏" class="headerlink" title="adb 截图录屏"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E6%88%AA%E5%9B%BE%E5%BD%95%E5%B1%8F"></a>adb 截图录屏</h3><p>1<br>2<br>3<br>4<br>5</p><p>//生成截图（screencap path)<br>adb shell screencap /sdcard/screen.png  </p><p>//生成视频(screenrecord path)<br>adb shell screenrecord /sdcard/demo.mp4</p><h3 id="adb-应用信息"><a href="#adb-应用信息" class="headerlink" title="adb 应用信息"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E5%BA%94%E7%94%A8%E4%BF%A1%E6%81%AF"></a>adb 应用信息</h3><p>1<br>2<br>3<br>4<br>5</p><p>//获取所有应用信息<br>adb shell pm list package  </p><p>//获取应用安装包路径<br>adb shell pm path com.android.bluetooth</p><h3 id="adb-版本信息"><a href="#adb-版本信息" class="headerlink" title="adb 版本信息"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF"></a>adb 版本信息</h3><p>1<br>2<br>3<br>4<br>5</p><p>//获取应用 versionName<br>adb shell dumpsys package com.xxx.xxx grep versionName  </p><p>//获取应用 versionCode<br>adb shell dumpsys package com.xxx.xxx grep versionCode</p><h3 id="adb-进程信息"><a href="#adb-进程信息" class="headerlink" title="adb 进程信息"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E8%BF%9B%E7%A8%8B%E4%BF%A1%E6%81%AF"></a>adb 进程信息</h3><p>1<br>2<br>3<br>4<br>5</p><p>//获取应用进程号<br>adb shell ps grep com.android.bluetooth  </p><p>//根据进程号杀掉应用进程<br>adb shell kill -9 processid</p><h3 id="adb-属性信息"><a href="#adb-属性信息" class="headerlink" title="adb 属性信息"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E5%B1%9E%E6%80%A7%E4%BF%A1%E6%81%AF"></a>adb 属性信息</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8</p><p>//获取所有属性<br>adb shell getprop  </p><p>//过滤特定属性<br>adb shell getprop grep vin  </p><p>//设置属性值<br>adb shell setprop persisi.sys.vin 123456</p><h3 id="adb-焦点输入"><a href="#adb-焦点输入" class="headerlink" title="adb 焦点输入"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E7%84%A6%E7%82%B9%E8%BE%93%E5%85%A5"></a>adb 焦点输入</h3><p>1<br>2</p><p>//焦点在输入框，可直接将文本填充到输入框<br>adb shell input text 123456</p><h3 id="adb-启动页面"><a href="#adb-启动页面" class="headerlink" title="adb 启动页面"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E5%90%AF%E5%8A%A8%E9%A1%B5%E9%9D%A2"></a>adb 启动页面</h3><p>1<br>2<br>3<br>4<br>5</p><p>//启动设置页面<br>adb shell am start com.android.settings/com.android.settings.Settings  </p><p>//启动设置页面，并计算启动时间<br>adb shell am start -W -n com.android.settings/com.android.settings.Settings</p><h3 id="adb-修改屏幕分辨率密度"><a href="#adb-修改屏幕分辨率密度" class="headerlink" title="adb 修改屏幕分辨率密度"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E4%BF%AE%E6%94%B9%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87%E5%AF%86%E5%BA%A6"></a>adb 修改屏幕分辨率密度</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17</p><p>//获取分辨率<br>adb shell wm size  </p><p>//修改分辨率<br>adb shell wm size 1920x600  </p><p>//重置分辨率<br>adb shell wm size reset  </p><p>//获取屏幕密度<br>adb shell wm density  </p><p>//修改屏幕密度<br>adb shell wm density 240  </p><p>//重置屏幕密度<br>adb shell wm density</p><h3 id="adb-获取日志"><a href="#adb-获取日志" class="headerlink" title="adb 获取日志"></a><a href="https://wishzone.ltd/2022/12/18/Android/#adb-%E8%8E%B7%E5%8F%96%E6%97%A5%E5%BF%97"></a>adb 获取日志</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14</p><p>//打印默认日志<br>adb logcat  </p><p>//打印时间和默认日志<br>adb logcat -v time  </p><p>//打印Error级别的信息<br>adb logcat *:E  </p><p>//打印时间和Error级别的信息<br>adb logcat -v time *E  </p><p>//日志保存到指定位置<br>adb logcat -v time &gt; ~/Deskop/log.</p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"></a>常见问题</h1><h2 id="执行-adb-remount-出错：“-remount-of-the-superblock-failed-Permission-denied”"><a href="#执行-adb-remount-出错：“-remount-of-the-superblock-failed-Permission-denied”" class="headerlink" title="执行 adb remount 出错：“ remount of the / superblock failed: Permission denied”"></a><a href="https://wishzone.ltd/2022/12/18/Android/#%E6%89%A7%E8%A1%8C-adb-remount-%E5%87%BA%E9%94%99%EF%BC%9A%E2%80%9C-remount-of-the-superblock-failed-Permission-denied%E2%80%9D"></a>执行 adb remount 出错：“ remount of the / superblock failed: Permission denied”</h2><p>先执行如下指令：</p><p>1<br>2</p><p>adb root<br>adb disable-verity</p><p>再重启设备</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      
      <comments>http://example.com/2023/09/12/android/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>网络基础</title>
      <link>http://example.com/2023/09/12/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <guid>http://example.com/2023/09/12/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Tue, 12 Sep 2023 14:04:25 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;关于光猫与路由器设置的简单教程&lt;/p&gt;
&lt;h1 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2023/01/19/%E7%BD%91%</description>
        
      
      
      
      <content:encoded><![CDATA[<p>关于光猫与路由器设置的简单教程</p><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86"></a>基础知识</h1><h2 id="光猫"><a href="#光猫" class="headerlink" title="光猫"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%85%89%E7%8C%AB"></a>光猫</h2><p>进行光电转换的设备，最纯净的光猫是毛棒，常见的运营商的光猫是集成了光猫路由器交换机等功能的设备。</p><h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%B7%AF%E7%94%B1%E5%99%A8"></a>路由器</h2><p>进行拨号NAT转换的设备</p><h2 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E4%BA%A4%E6%8D%A2%E6%9C%BA"></a>交换机</h2><p>拓展接口的设备</p><h2 id="AP"><a href="#AP" class="headerlink" title="AP"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#AP"></a>AP</h2><p>同交换机只不过是通过无线网的方式来拓展接口</p><h1 id="光猫-1"><a href="#光猫-1" class="headerlink" title="光猫"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%85%89%E7%8C%AB-1"></a>光猫</h1><h2 id="超级管理员密码"><a href="#超级管理员密码" class="headerlink" title="超级管理员密码"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E5%AF%86%E7%A0%81"></a>超级管理员密码</h2><h3 id="电信"><a href="#电信" class="headerlink" title="电信"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%94%B5%E4%BF%A1"></a>电信</h3><p>用户名：useradmin<br>密码：nE7jA%5m</p><h3 id="移动"><a href="#移动" class="headerlink" title="移动"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%A7%BB%E5%8A%A8"></a>移动</h3><p>用户名：CMCCAdmin<br>密码：aDm8H%MdA</p><h2 id="桥接和路由模式切换"><a href="#桥接和路由模式切换" class="headerlink" title="桥接和路由模式切换"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E6%A1%A5%E6%8E%A5%E5%92%8C%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2"></a>桥接和路由模式切换</h2><p>桥接模式：不进行NAT转换，等同于交换器，让外接路由器拨号，效率更高</p><p>路由模式：由光猫拨号进行一次NAT转换，再由路由器DHCP上网，再进行一次NAT转换，效率低，但可将光猫自带的AP功能用上</p><p>但其实可以既用上光猫的AP功能，又使用桥接模式，只需要新建一个网络连接，将光猫自带的AP功能单独分到一个网络上面进行PPPoE拨号，再将其他的LAN口分到另一个网络进行桥接即可，就相当于有两个ip了，如果是申请的公网IP，就赚大了，但要知道怎么设置，或者是光猫默认设置里面就是这么分的，自己乱设置的往往没法上网</p><p>连接光猫WIFI或LAN口，登录光猫后台，输入超级管理员密码，有的光猫默认将自带的AP功能分在一个网络下面，此时只需要将这个设备所在的网络设置为路由模式便可以白嫖一个地址，如果是给的公网地址的话，就相当于又多一个公网地址。</p><h2 id="白嫖20-带宽"><a href="#白嫖20-带宽" class="headerlink" title="白嫖20%带宽"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%99%BD%E5%AB%9620-%E5%B8%A6%E5%AE%BD"></a>白嫖20%带宽</h2><p>由于IPV4协议的原因，理论传输效率一般是94%多一点<br>宽带供应商考虑损耗往往提供的带宽是标称带宽的120%，也就是1000M宽带，往往能给到1200M。<br>但是由于宽带供应商送的光猫拨号和光带你转换性能不行，会有带宽损耗，所以采用桥接模式，让高性能路由器来进行拨号，带宽会有一定的提升<br>若要完全白嫖到那20%带宽，则可以根据光猫的类型使用gpon或者epon的光电转换棒猫棒，让软路由拨号。epon和gpon就像是两种方言，epon往往更贵。</p><h1 id="路由器-1"><a href="#路由器-1" class="headerlink" title="路由器"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%B7%AF%E7%94%B1%E5%99%A8-1"></a>路由器</h1><h2 id="确定公网ip"><a href="#确定公网ip" class="headerlink" title="确定公网ip"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%A1%AE%E5%AE%9A%E5%85%AC%E7%BD%91ip"></a>确定公网ip</h2><p>登录路由器后台，查看路由器获取到的ip地址，再使用设备连接到该路由器，然后在bing上搜索my ip或者在百度上面搜索ip查询，看查到的ip和路由器上面的ip是否一样，如果不一样，则不是公网ip，如果一样，则是公网ip。</p><h2 id="公网访问内网（有公网IP）"><a href="#公网访问内网（有公网IP）" class="headerlink" title="公网访问内网（有公网IP）"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%85%AC%E7%BD%91%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%EF%BC%88%E6%9C%89%E5%85%AC%E7%BD%91IP%EF%BC%89"></a>公网访问内网（有公网IP）</h2><h3 id="第一步：设置光猫"><a href="#第一步：设置光猫" class="headerlink" title="第一步：设置光猫"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E8%AE%BE%E7%BD%AE%E5%85%89%E7%8C%AB"></a>第一步：设置光猫</h3><p>方式1：设置光猫为桥接模式<br>方式2：若使用路由模式，则将使用的路由器设置DMZ或者端口转发。</p><h3 id="第二步：设置路由器"><a href="#第二步：设置路由器" class="headerlink" title="第二步：设置路由器"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1%E5%99%A8"></a>第二步：设置路由器</h3><p>方式1：设置端口转发<br>针对多个不同设备，但公网对80端口和443端口有限制，需要备案，可以转发成别的端口，如8080，或者4433，访问的时候，需要在域名后面缀上端口访问<br>方式2：设置DMZ<br>针对单个设备，可以将设备的所有端口全部放在外网，但是风险较大，建议设置防火墙</p><h3 id="第三步：设置动态域名解析DDNS"><a href="#第三步：设置动态域名解析DDNS" class="headerlink" title="第三步：设置动态域名解析DDNS"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A%E8%AE%BE%E7%BD%AE%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90DDNS"></a>第三步：设置动态域名解析DDNS</h3><p>由于家庭宽带给的公网IP地址都是动态的，一般每48小时变化一次，因此需要进行动态域名解析，以后只需要记住域名就可以访问了<br>若是企业专线网络的固定公网IP地址，则不需要这一步，直接记住IP访问就行了</p><p>在路由器后台，要看不同的路由器支持哪家的，不同路由器支持的不一样，如果是软路由或者OP系统，往往可以自己设置，但往往对花生壳的动态域名解析支持的都比较好，电信光猫里面的DDNS就是采用的花生壳的动态域名解析</p><h3 id="第四步：开放端口"><a href="#第四步：开放端口" class="headerlink" title="第四步：开放端口"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E5%9B%9B%E6%AD%A5%EF%BC%9A%E5%BC%80%E6%94%BE%E7%AB%AF%E5%8F%A3"></a>第四步：开放端口</h3><p>window系统可以在防火墙，防火墙高级设置，入站规则里面设置，新建规则，设置开放端口即可</p><h2 id="公网访问内网（无公网IP）"><a href="#公网访问内网（无公网IP）" class="headerlink" title="公网访问内网（无公网IP）"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%85%AC%E7%BD%91%E8%AE%BF%E9%97%AE%E5%86%85%E7%BD%91%EF%BC%88%E6%97%A0%E5%85%AC%E7%BD%91IP%EF%BC%89"></a>公网访问内网（无公网IP）</h2><h3 id="无获取到公网IP的服务器"><a href="#无获取到公网IP的服务器" class="headerlink" title="无获取到公网IP的服务器"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E6%97%A0%E8%8E%B7%E5%8F%96%E5%88%B0%E5%85%AC%E7%BD%91IP%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8"></a>无获取到公网IP的服务器</h3><p>方式1：第三方内网穿透服务：花生壳等<br>方式2：虚拟组网：ZeroTier等</p><h3 id="有获取到公网IP的服务器"><a href="#有获取到公网IP的服务器" class="headerlink" title="有获取到公网IP的服务器"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E6%9C%89%E8%8E%B7%E5%8F%96%E5%88%B0%E5%85%AC%E7%BD%91IP%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8"></a>有获取到公网IP的服务器</h3><p>方式1：架设转发服务：Frp等<br>方式2：点对点透传</p><h2 id="设置移动IPV6公网IP"><a href="#设置移动IPV6公网IP" class="headerlink" title="设置移动IPV6公网IP"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%AE%BE%E7%BD%AE%E7%A7%BB%E5%8A%A8IPV6%E5%85%AC%E7%BD%91IP"></a>设置移动IPV6公网IP</h2><h3 id="第一步：设置光猫（需支持IPV6）"><a href="#第一步：设置光猫（需支持IPV6）" class="headerlink" title="第一步：设置光猫（需支持IPV6）"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E8%AE%BE%E7%BD%AE%E5%85%89%E7%8C%AB%EF%BC%88%E9%9C%80%E6%94%AF%E6%8C%81IPV6%EF%BC%89"></a>第一步：设置光猫（需支持IPV6）</h3><p>登录光猫后台，设置网络为IPV4&amp;IPV6，关闭IPV6防火墙，便于外网访问内网</p><h3 id="第二步：设置路由器（需支持IPV6）"><a href="#第二步：设置路由器（需支持IPV6）" class="headerlink" title="第二步：设置路由器（需支持IPV6）"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%88%E9%9C%80%E6%94%AF%E6%8C%81IPV6%EF%BC%89"></a>第二步：设置路由器（需支持IPV6）</h3><p>登录路由器后台，在基本设置里面开启IPV6即可。</p><h3 id="第三步：验证"><a href="#第三步：验证" class="headerlink" title="第三步：验证"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A%E9%AA%8C%E8%AF%81"></a>第三步：验证</h3><p>1.电脑或手机连接路由器，设置DMZ。<br>2.打开浏览器输入test—ipv6.com即可</p><h3 id="小米路由器开启外网ssh"><a href="#小米路由器开启外网ssh" class="headerlink" title="小米路由器开启外网ssh"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%BC%80%E5%90%AF%E5%A4%96%E7%BD%91ssh"></a>小米路由器开启外网ssh</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10</p><p>cd / //回到根目录<br>vi /etc/config/firewall //编辑防火墙配置  </p><p>添加以下代码<br>config redirect ‘Myssh’<br>option src ‘wan’<br>option src_dport ‘2345’<br>option dest ‘lan’<br>option dest_port ‘22’<br>option proto ‘tcp’</p><h1 id="网络运营商"><a href="#网络运营商" class="headerlink" title="网络运营商"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E7%BD%91%E7%BB%9C%E8%BF%90%E8%90%A5%E5%95%86"></a>网络运营商</h1><p>电信：提供IPV4公网IP，需要申请<br>移动：不提供IPV4公网IP，但提供IPV6公网地址，不需要申请，只需要手动配置一下就行，参照前面的教程</p><h1 id="光猫开启IPV6"><a href="#光猫开启IPV6" class="headerlink" title="光猫开启IPV6"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E5%85%89%E7%8C%AB%E5%BC%80%E5%90%AFIPV6"></a>光猫开启IPV6</h1><h2 id="桥接端："><a href="#桥接端：" class="headerlink" title="桥接端："></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E6%A1%A5%E6%8E%A5%E7%AB%AF%EF%BC%9A"></a>桥接端：</h2><p>只需要在网络，网络设置，网络连接，IP模式选择IPV4&amp;IPV6即可</p><h2 id="路由端："><a href="#路由端：" class="headerlink" title="路由端："></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%B7%AF%E7%94%B1%E7%AB%AF%EF%BC%9A"></a>路由端：</h2><h3 id="获取前缀："><a href="#获取前缀：" class="headerlink" title="获取前缀："></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%8E%B7%E5%8F%96%E5%89%8D%E7%BC%80%EF%BC%9A"></a>获取前缀：</h3><p>1.网络，网络设置，网络连接，获取前缀勾选；<br>2.网络，网络设置，网络连接，前缀获取方式选择DHCPV6-PD;<br>3.网络，用户侧管理，IPV6设置，前缀来源选择WAN侧代理即可；</p><h3 id="获取DNS（可手动配置）"><a href="#获取DNS（可手动配置）" class="headerlink" title="获取DNS（可手动配置）:"></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%8E%B7%E5%8F%96DNS%EF%BC%88%E5%8F%AF%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE%EF%BC%89"></a>获取DNS（可手动配置）:</h3><p>1.网络，网络设置，网络连接，DNS获取方式选择自动配置;<br>2.网络，用户侧管理，IPV6设置，DNS来源选择网络连接；<br>3.网络，用户侧管理，IPV6设置，接口选择路由的那个网络即可；</p><h3 id="获取IPV6："><a href="#获取IPV6：" class="headerlink" title="获取IPV6："></a><a href="https://wishzone.ltd/2023/01/19/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#%E8%8E%B7%E5%8F%96IPV6%EF%BC%9A"></a>获取IPV6：</h3><p>1.网络，网络设置，网络连接，IP模式选择IPV4&amp;IPV6；<br>2.网络，网络设置，网络连接，地址获取方式选择自动配置</p><p>注意：<br>fe开头通常为内网<br>240开头通常为外网</p><p>其他：DHCPv6能通过DHCPv6获得DNS,域名,但网关信息他不会给你获得,只能通过NDP(无状态地址解析)获得网关信息，要手动设置一下ipv6网关才行，实际上它是通的 只是被代理了 DP模式就正常 SLAAC模式就这样，DNS选择手动 地址分配模式选SLAAC 关闭DHCPv6分配，选DP模式</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      <category domain="http://example.com/categories/Windows/">Windows</category>
      
      
      <category domain="http://example.com/tags/web/">web</category>
      
      
      <comments>http://example.com/2023/09/12/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Windows</title>
      <link>http://example.com/2023/09/12/windows/</link>
      <guid>http://example.com/2023/09/12/windows/</guid>
      <pubDate>Tue, 12 Sep 2023 14:04:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Windows常用设置&lt;/p&gt;
&lt;h2 id=&quot;常用操作&quot;&gt;&lt;a href=&quot;#常用操作&quot; class=&quot;headerlink&quot; title=&quot;常用操作&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2023/01/20/Windows/#%E5%B</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Windows常用设置</p><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C"></a>常用操作</h2><h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E7%89%88%E6%9C%AC"></a>查看系统版本</h3><p>命令：winver</p><h3 id="查看文件MD5码"><a href="#查看文件MD5码" class="headerlink" title="查看文件MD5码"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6MD5%E7%A0%81"></a>查看文件MD5码</h3><p>certutil -hashfile 文件路径名称 MD5</p><h3 id="win11安装系统应用"><a href="#win11安装系统应用" class="headerlink" title="win11安装系统应用"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#win11%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%BA%94%E7%94%A8"></a>win11安装系统应用</h3><p>1.以管理员运行powershell<br>2.输入Get-AppxPackage -allusers Select Name, PackageFullName<br>3.找到需要安装的应用后面的应用版本<br>4输入Add-appxpackage -register “C:\Program Files\WindowsApps\【应用版本】\appxmanifest.xml” -disabledevelopmentmod即可</p><h2 id="修复Win11更新的BUG"><a href="#修复Win11更新的BUG" class="headerlink" title="修复Win11更新的BUG"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E4%BF%AE%E5%A4%8DWin11%E6%9B%B4%E6%96%B0%E7%9A%84BUG"></a>修复Win11更新的BUG</h2><p>1.网站uupdump.net可以下载最新版本</p><p>2.进入注册表<br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\wuauserv\Parameters<br>找到ServiceDll<br>win11将数据改为%systemroot%\system32\wuauserv.dll，<br>win10将数据改为%systemroot%\system32\wuaueng.dll<br>如果还是找不到<br>进入”C:\WINDOWS\System32\wuauserv.dll”看是否存在wuauserv.dll或者wuaueng.dll，<br>如果不存在的话可能是其他软件删除了，需自行下载或者从别的电脑拷贝放进去就好了</p><h2 id="配置FRPC服务"><a href="#配置FRPC服务" class="headerlink" title="配置FRPC服务"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E9%85%8D%E7%BD%AEFRPC%E6%9C%8D%E5%8A%A1"></a>配置FRPC服务</h2><h3 id="设置启动脚本"><a href="#设置启动脚本" class="headerlink" title="设置启动脚本"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E8%AE%BE%E7%BD%AE%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC"></a>设置启动脚本</h3><p>创建文件：<br>start_frpc.vbs<br>写入脚本</p><p>1</p><p>CreateObject(“WScript.Shell”).Run “””D:\Program Files\frp_0.38.0_windows_amd64\frpc.exe””” &amp; “-c” &amp; “””D:\Program Files\frp_0.38.0_windows_amd64\frpc.ini”””,0</p><p>双击就可启动frpc，可在资源管理器中看到frpc.exe已启动;</p><h3 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a><a href="https://wishzone.ltd/2023/01/20/Windows/#%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF"></a>设置开机自启</h3><p>“win+r”输入shell:startup就会自动打开启动文件夹。<br>将文件放入即可（一般为：C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup）</p><h2 id="链路聚合方案"><a href="#链路聚合方案" class="headerlink" title="链路聚合方案"></a>链路聚合方案</h2><ol><li><a href="https://blog.csdn.net/ytlzq0228/article/details/118071224">NIC 组合</a></li><li><a href="https://www.intel.com/content/www/us/en/download/727998/intel-network-adapter-driver-for-microsoft-windows-11.html?wapkw=Intel%C2%AE%20Network%20Adapter%20Driver%20for%20Windows%C2%AE%2011l">Intel® PROSet</a></li></ol>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Windows/">Windows</category>
      
      
      
      <comments>http://example.com/2023/09/12/windows/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESP_AT串口透传</title>
      <link>http://example.com/2023/09/12/esp-at%E4%B8%B2%E5%8F%A3%E9%80%8F%E4%BC%A0/</link>
      <guid>http://example.com/2023/09/12/esp-at%E4%B8%B2%E5%8F%A3%E9%80%8F%E4%BC%A0/</guid>
      <pubDate>Tue, 12 Sep 2023 14:03:38 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;配置ESP系列AT指令进行wifi串口穿透的教程&lt;/p&gt;
&lt;h1 id=&quot;初始配置命令&quot;&gt;&lt;a href=&quot;#初始配置命令&quot; class=&quot;headerlink&quot; title=&quot;初始配置命令&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2023/0</description>
        
      
      
      
      <content:encoded><![CDATA[<p>配置ESP系列AT指令进行wifi串口穿透的教程</p><h1 id="初始配置命令"><a href="#初始配置命令" class="headerlink" title="初始配置命令"></a><a href="https://wishzone.ltd/2023/06/24/ESP-AT%E4%B8%B2%E5%8F%A3%E9%80%8F%E4%BC%A0/#%E5%88%9D%E5%A7%8B%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4"></a>初始配置命令</h1><p>ESP32（AT）：AT+CWJAP=”XXXX“,”XXXXXXX“ //热点的SSID和密码<br>ESP32（AT）：AT+CIPSTA? //查看ip<br>串口开启tcp的server模式输入esp的ip和80端口<br>设置自己的ip并随便指定一个端口打开监听</p><h1 id="每次上电需要执行的命令"><a href="#每次上电需要执行的命令" class="headerlink" title="每次上电需要执行的命令"></a><a href="https://wishzone.ltd/2023/06/24/ESP-AT%E4%B8%B2%E5%8F%A3%E9%80%8F%E4%BC%A0/#%E6%AF%8F%E6%AC%A1%E4%B8%8A%E7%94%B5%E9%9C%80%E8%A6%81%E6%89%A7%E8%A1%8C%E7%9A%84%E5%91%BD%E4%BB%A4"></a>每次上电需要执行的命令</h1><p>ESP32（AT）：AT+CIPSTART=”TCP”,”192.168.1.236”,11451（手机的ip和手机指定的端口）<br>此时手机发送的数据，esp32即可收到<br>收到格式为：+IPD,6:DATA //+IPD,数据长度:数据<br>ESP32（AT）：AT+CIPMODE=1 //设置传输模式为透传模式,此方式不能写进flash<br>此时收到格式为：DATA //数据，直接就是数据<br>ESP32（AT）：AT+CIPSEND //数据发送<br>此时esp32发送的数据，手机即可收到<br>ESP32（AT）：+++ //不带换行符，结束透传</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/uncategorized/">uncategorized</category>
      
      
      
      <comments>http://example.com/2023/09/12/esp-at%E4%B8%B2%E5%8F%A3%E9%80%8F%E4%BC%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Raspberry_pico</title>
      <link>http://example.com/2023/09/12/raspberry-pico/</link>
      <guid>http://example.com/2023/09/12/raspberry-pico/</guid>
      <pubDate>Tue, 12 Sep 2023 14:03:15 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;关于树莓派pico的环境搭建与开发&lt;/p&gt;
&lt;h1 id=&quot;Ubuntu-C-C&quot;&gt;&lt;a href=&quot;#Ubuntu-C-C&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu C/C++&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd</description>
        
      
      
      
      <content:encoded><![CDATA[<p>关于树莓派pico的环境搭建与开发</p><h1 id="Ubuntu-C-C"><a href="#Ubuntu-C-C" class="headerlink" title="Ubuntu C/C++"></a><a href="https://wishzone.ltd/2023/06/24/Raspberry-pico/#Ubuntu-C-C"></a>Ubuntu C/C++</h1><h2 id="依赖："><a href="#依赖：" class="headerlink" title="依赖："></a><a href="https://wishzone.ltd/2023/06/24/Raspberry-pico/#%E4%BE%9D%E8%B5%96%EF%BC%9A"></a>依赖：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential python3-tk</span><br></pre></td></tr></table></figure><h2 id="下载官方SDK文件"><a href="#下载官方SDK文件" class="headerlink" title="下载官方SDK文件"></a><a href="https://wishzone.ltd/2023/06/24/Raspberry-pico/#%E4%B8%8B%E8%BD%BD-pico-sdk-%E5%92%8C-pico-examples"></a>下载官方SDK文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//下载 pico-sdk 和 pico-examples</span><br><span class="line">cd ~</span><br><span class="line">mkdir pico</span><br><span class="line">cd pico</span><br><span class="line">git clone -b master https://github.com/raspberrypi/pico-sdk.git</span><br><span class="line">cd pico-sdk</span><br><span class="line">git submodule update —init</span><br><span class="line">cd ~/pico</span><br><span class="line">git clone -b master https://github.com/raspberrypi/pico-examples.git</span><br><span class="line">//下载 pico-project-generator</span><br><span class="line">cd ~/pico</span><br><span class="line">git clone https://github.com/raspberrypi/pico-project-generator.git</span><br></pre></td></tr></table></figure><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//添加环境变量</span><br><span class="line">echo “export PICO_SDK_PATH=/home/$USER/pico/pico-sdk” &gt;&gt; .bashrc</span><br><span class="line">//安装 VSCode 插件</span><br><span class="line">code —install-extension marus25.cortex-debug</span><br><span class="line">code —install-extension ms-vscode.cmake-tools</span><br><span class="line">code —install-extension ms-vscode.cpptools</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a><a href="https://wishzone.ltd/2023/06/24/Raspberry-pico/#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"></a>使用方法</h2><p>cd pico-project-generator</p><p>./pico-progect.py —gui</p><p>手动生成工程</p><p>cd build</p><p>make -j(核心数) eg：make -j4</p><p>将uf2文件拖入pico即可</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><a href="https://wishzone.ltd/2023/06/24/Raspberry-pico/#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"></a>参考资料</h2><p><a href="https://datasheets.raspberrypi.com/pico/getting-started-with-pico.pdf">https://datasheets.raspberrypi.com/pico/getting-started-with-pico.pdf</a><br><a href="https://datasheets.raspberrypi.com/pico/raspberry-pi-pico-c-sdk.pdf">https://datasheets.raspberrypi.com/pico/raspberry-pi-pico-c-sdk.pdf</a></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      <category domain="http://example.com/tags/linux/">linux</category>
      
      
      <comments>http://example.com/2023/09/12/raspberry-pico/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo</title>
      <link>http://example.com/2023/09/12/hexo/</link>
      <guid>http://example.com/2023/09/12/hexo/</guid>
      <pubDate>Tue, 12 Sep 2023 14:02:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;关于Hexo的配置与部署&lt;/p&gt;
&lt;h1 id=&quot;安装-Node-js-和-Git&quot;&gt;&lt;a href=&quot;#安装-Node-js-和-Git&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js 和 Git&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://w</description>
        
      
      
      
      <content:encoded><![CDATA[<p>关于Hexo的配置与部署</p><h1 id="安装-Node-js-和-Git"><a href="#安装-Node-js-和-Git" class="headerlink" title="安装 Node.js 和 Git"></a><a href="https://wishzone.ltd/2023/06/24/Hexo/#%E5%AE%89%E8%A3%85-Node-js-%E5%92%8C-Git%E3%80%82"></a>安装 Node.js 和 Git</h1><ul><li>Node.js：<a href="https://link.zhihu.com/?target=https%3A//nodejs.org/zh-cn">https://<strong>nodejs.org/zh-cn</strong></a></li><li>Git：<a href="https://link.zhihu.com/?target=https%3A//git-scm.com/downloads">https://<strong>git-scm.com/downloads</strong></a></li></ul><h1 id="连接-Github"><a href="#连接-Github" class="headerlink" title="连接 Github"></a><a href="https://wishzone.ltd/2023/06/24/Hexo/#%E8%BF%9E%E6%8E%A5-Github"></a>连接 Github</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//右键 -&gt; Git Bash Here， 设置用户名和邮箱 ：</span><br><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br><span class="line">//创建 SSH 密匙</span><br><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;  #然后一路回车</span><br></pre></td></tr></table></figure><h2 id="添加密匙："><a href="#添加密匙：" class="headerlink" title="添加密匙："></a><a href="https://wishzone.ltd/2023/06/24/Hexo/#%E6%B7%BB%E5%8A%A0%E5%AF%86%E5%8C%99%EF%BC%9A"></a>添加密匙：</h2><p>进入 [C:\Users\用户名\.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，点击头像，选择 Settings ，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><h2 id="验证连接："><a href="#验证连接：" class="headerlink" title="验证连接："></a><a href="https://wishzone.ltd/2023/06/24/Hexo/#%E9%AA%8C%E8%AF%81%E8%BF%9E%E6%8E%A5%EF%BC%9A"></a>验证连接：</h2><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a><a href="https://wishzone.ltd/2023/06/24/Hexo/#%E5%AE%89%E8%A3%85-Hexo"></a>安装 Hexo</h1><p>使用 npm 一键安装 Hexo 博客程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//打开cmd使用npm安装Hexo</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo-deployer-git —save</span><br></pre></td></tr></table></figure><p>然后文章修改 _config.yml 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:type: gitrepository: git@github.com:用户名/用户名.github.io.gitbranch: master</span><br></pre></td></tr></table></figure><h1 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a><a href="https://wishzone.ltd/2023/06/24/Hexo/#%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0"></a>发布文章</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//右键打开 Git Bash Here，创建博文：</span><br><span class="line">hexo new “My New Post”</span><br><span class="line">hexo g # 生成页面</span><br><span class="line">hexo d # 部署发布</span><br></pre></td></tr></table></figure><h2 id="从wordpress导入"><a href="#从wordpress导入" class="headerlink" title="从wordpress导入"></a>从wordpress导入</h2><p>首先，安装 <code>hexo-migrator-wordpress</code> 插件。</p><p>$ npm install hexo-migrator-wordpress —save</p><p>在 WordPress 仪表盘中导出数据(“Tools” → “Export” → “WordPress”)（详情参考<a href="https://wordpress.com/zh-cn/support/export/">WP支持页面</a>）。</p><p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p><p>$ hexo migrate wordpress <source></p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Windows/">Windows</category>
      
      
      
      <comments>http://example.com/2023/09/12/hexo/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Rockpi4B+</title>
      <link>http://example.com/2023/09/12/rockpi4b/</link>
      <guid>http://example.com/2023/09/12/rockpi4b/</guid>
      <pubDate>Tue, 12 Sep 2023 14:01:37 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;rock4B+的设置和配置服务器的教程&lt;/p&gt;
&lt;h1 id=&quot;配置脚本&quot;&gt;&lt;a href=&quot;#配置脚本&quot; class=&quot;headerlink&quot; title=&quot;配置脚本&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2023/06/24/Rockpi</description>
        
      
      
      
      <content:encoded><![CDATA[<p>rock4B+的设置和配置服务器的教程</p><h1 id="配置脚本"><a href="#配置脚本" class="headerlink" title="配置脚本"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E9%85%8D%E7%BD%AE%E8%84%9A%E6%9C%AC"></a>配置脚本</h1><p>最开始是外国源，为了提高速度，不要下载别的东西，只安装wget</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install wget</span><br></pre></td></tr></table></figure><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E6%8D%A2%E6%BA%90"></a>换源</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apt-transport-https ca-certificates</span><br><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23</p><p>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/debian/">https://mirrors.tuna.tsinghua.edu.cn/debian/</a> buster main contrib non-free  </p><p># deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/debian/">https://mirrors.tuna.tsinghua.edu.cn/debian/</a> buster main contrib non-free  </p><p>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/debian/">https://mirrors.tuna.tsinghua.edu.cn/debian/</a> buster-updates main contrib non-free  </p><p># deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/debian/">https://mirrors.tuna.tsinghua.edu.cn/debian/</a> buster-updates main contrib non-free  </p><p>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/debian/">https://mirrors.tuna.tsinghua.edu.cn/debian/</a> buster-backports main contrib non-free  </p><p># deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/debian/">https://mirrors.tuna.tsinghua.edu.cn/debian/</a> buster-backports main contrib non-free  </p><p># deb <a href="https://mirrors.tuna.tsinghua.edu.cn/debian-security">https://mirrors.tuna.tsinghua.edu.cn/debian-security</a> buster/updates main contrib non-free  </p><p># # deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/debian-security">https://mirrors.tuna.tsinghua.edu.cn/debian-security</a> buster/updates main contrib non-free  </p><p>deb <a href="https://security.debian.org/debian-security">https://security.debian.org/debian-security</a> buster/updates main contrib non-free  </p><p># deb-src <a href="https://security.debian.org/debian-security">https://security.debian.org/debian-security</a> buster/updates main contrib non-free  </p><p>deb <a href="http://apt.radxa.com/buster-testing/">http://apt.radxa.com/buster-testing/</a> buster main  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -O - apt.radxa.com/buster-testing/public.key  sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h1 id="装radxa硬件驱动"><a href="#装radxa硬件驱动" class="headerlink" title="装radxa硬件驱动"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E8%A3%85radxa%E7%A1%AC%E4%BB%B6%E9%A9%B1%E5%8A%A8"></a>装radxa硬件驱动</h1><p>sudo apt-get install -y rockchip-overlay &amp;&amp; sudo apt-get install -y rockpi4-dtbo libmraa</p><h1 id="改地区"><a href="#改地区" class="headerlink" title="改地区"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E6%94%B9%E5%9C%B0%E5%8C%BA"></a>改地区</h1><p>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</p><h1 id="安装wifi蓝牙GPU驱动"><a href="#安装wifi蓝牙GPU驱动" class="headerlink" title="安装wifi蓝牙GPU驱动"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E5%AE%89%E8%A3%85wifi%E8%93%9D%E7%89%99GPU%E9%A9%B1%E5%8A%A8"></a>安装wifi蓝牙GPU驱动</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y broadcom-wifibt-firmware</span><br><span class="line">systemctl start bluetooth</span><br><span class="line">pulseaudio —start</span><br><span class="line">sudo apt install -y git gcc g++ libpng-dev libjpeg-dev pkg-config libx11-dev libdrm-dev libgbm-dev libgbm1 libudev-dev</span><br><span class="line">mkdir -p /home/rock/work</span><br><span class="line">cd /home/rock/work</span><br><span class="line">git clone https://github.com/glmark2/glmark2.git</span><br><span class="line">cd glmark2/</span><br><span class="line">./waf configure —with-flavors=drm-glesv2</span><br><span class="line">./waf build -j 4</span><br><span class="line">./waf install</span><br><span class="line">sudo apt install -y rockchip-mali-midgard14=1.6-2</span><br><span class="line">sudo apt install -y rockchip-mali-midgard-dev=1.6-2</span><br><span class="line">glmark2-es2-drm</span><br><span class="line">apt-get install golang emacs</span><br></pre></td></tr></table></figure><h1 id="hdmi热插拔"><a href="#hdmi热插拔" class="headerlink" title="hdmi热插拔"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#hdmi%E7%83%AD%E6%8F%92%E6%8B%94"></a>hdmi热插拔</h1><p>sudo chmod +x /usr/local/bin/drm-hotplug.sh</p><h1 id="超频"><a href="#超频" class="headerlink" title="超频"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E8%B6%85%E9%A2%91"></a>超频</h1><p>nano /boot/hw_intfc.conf</p><p>setting cpu frequency over-2GHz</p><p>intfc:dtoverlay=cpufreq</p><h1 id="wifi模式切换"><a href="#wifi模式切换" class="headerlink" title="wifi模式切换"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#wifi%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2"></a>wifi模式切换</h1><p>sudo apt-get install git cmake hostapd<br>git clone <a href="https://github.com/oblique/create_ap">https://github.com/oblique/create_ap</a><br>cd create_ap<br>sudo make install<br>wget <a href="https://raw.githubusercontent.com/radxa/rkwifibt/master/brcm_tools/dhd_priv.c">https://raw.githubusercontent.com/radxa/rkwifibt/master/brcm_tools/dhd_priv.c</a><br>gcc dhd_priv.c -o dhd_priv<br>sudo ./dhd_priv channel 6<br>sudo ./dhd_priv monitor 1</p><h1 id="安装樱花frpc"><a href="#安装樱花frpc" class="headerlink" title="安装樱花frpc"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E5%AE%89%E8%A3%85%E6%A8%B1%E8%8A%B1frpc"></a>安装樱花frpc</h1><p>cd /usr/local/bin<br>sudo wget -O frpc <a href="https://getfrp.sh/d/frpc_linux_arm64">https://getfrp.sh/d/frpc_linux_arm64</a><br>sudo chmod 755 frpc<br>ls -ls frpc<br>md5sum frpc<br>sudo mkdir -p /usr/local/etc/natfrp<br>sudo nano /etc/systemd/system/frpc@.service</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16</p><p>[Unit]<br>Description=SakuraFrp Service<br>After=network.target  </p><p>[Service]<br>Type=idle<br>User=nobody<br>Restart=on-failure<br>RestartSec=60s<br>ExecStart=/usr/local/bin/frpc -f %i<br>WorkingDirectory=/usr/local/etc/natfrp  </p><p>[Install]<br>WantedBy=multi-user.target  </p><p>打开后直接crtl c退出就可以启动<br>systemctl daemon-reload<br>systemctl enable frpc@7xk345t4zdqx2d2345fsxx91svfs7e5x:7402311<br>外网ip：202.182.122.24:63979<br>frp-fly.top:63979</p><p>配置systemctl进行开机启动</p><p>创建frpc.service服务</p><p>sudo nano /lib/systemd/system/frpc.service</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25</p><p>[Unit]  </p><h1 id="服务描述"><a href="#服务描述" class="headerlink" title="服务描述"></a>服务描述</h1><p>Description=frpcservice  </p><p>After=network.targetsyslog.target  </p><p>Wants=network.target  </p><p>[Service]  </p><p>Type=simple  </p><h1 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h1><p>ExecStart=/usr/local/frpc/frpc-c/usr/local/frpc/frpc.ini  </p><p>[Install]  </p><p>WantedBy=multi-user.target  </p><p>重载</p><p>systemctl daemon-reload</p><h1 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E6%9F%A5%E7%9C%8B%E7%8A%B6%E6%80%81"></a>查看状态</h1><p>sudo systemctl status frpc</p><p>设置开机自动启动</p><p>sudo systemctl enable frpc</p><h1 id="安装并配置clash和控制面板"><a href="#安装并配置clash和控制面板" class="headerlink" title="安装并配置clash和控制面板"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEclash%E5%92%8C%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF"></a>安装并配置clash和控制面板</h1><p>wget <a href="https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv64-v1.14.6.gz">https://github.com/Dreamacro/clash/releases/download/v1.10.6/clash-linux-armv64-v1.14.6.gz</a><br>gunzip linux-armv64-v1.14.6.gz<br>mv linux-armv64-v1.14.6 clash<br>sudo mv clash /usr/local/bin<br>sudo chmod a+x /usr/local/bin/clash<br>mkdir ~/.config/clash<br>nano ~/.config/clash/config.yaml<br>放入配置文件即可</p><p>mv Country.mmdb ~/.config/clash<br>sudo nano /etc/environment</p><p>export http_proxy=”<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a>“<br>export https_proxy=”<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a>“<br>export no_proxy=”localhost, 127.0.0.1, *edu.cn”</p><p>sudo visudo</p><p>Defaults env_keep+=”http_proxy https_proxy no_proxy”</p><p>sudo nano /etc/apt/apt.conf.d/10proxy</p><p>Acquire::http::Proxy “<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890/</a>“;</p><p>nano ~/.gitconfig</p><p>[http]<br>proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a><br>[https]<br>proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></p><p>crontab -e</p><p>@reboot /usr/local/bin/clash</p><p>cd ~/.config/clash<br>clash &amp;<br>git clone <a href="https://github.com/Dreamacro/clash-dashboard.git">https://github.com/Dreamacro/clash-dashboard.git</a><br>cd ~/.config/clash/clash-dashboard<br>git checkout -b gh-pages origin/gh-pages<br>nano ~/.config/clash/config.yaml<br>头部添加：</p><p>external-ui: clash-dashboard<br>external-controller: 127.0.0.1:9090</p><p><a href="http://127.0.0.1:9090/ui">http://127.0.0.1:9090/ui</a></p><h1 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E6%A1%8C%E9%9D%A2"></a>桌面</h1><p>sudo apt install xfce4 xorg xrdp xorgxrdp<br>touch ~/.xsession<br>echo xfce4-session &gt;~/.xsession<br>sudo chown rock:rock ~/.xsession</p><h1 id="改中文"><a href="#改中文" class="headerlink" title="改中文"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#%E6%94%B9%E4%B8%AD%E6%96%87"></a>改中文</h1><p>sudo apt install fcitx5 locales fonts-noto-cjk fonts-noto-cjk-extra<br>sudo dpkg-reconfigure locales<br>sudo apt-get install chromium-l10n</p><h1 id="Docker-运行openwrt"><a href="#Docker-运行openwrt" class="headerlink" title="Docker 运行openwrt"></a><a href="https://wishzone.ltd/2023/06/24/Rockpi4B+/#Docker-%E8%BF%90%E8%A1%8Copenwrt"></a>Docker 运行openwrt</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 666 /var/run/docker.sock</span><br><span class="line">sudo ip link set eth0 promisc on</span><br><span class="line"></span><br><span class="line">sudo nano /etc/rc.local</span><br></pre></td></tr></table></figure><p>1</p><p>ip link set eth0 promisc on &amp;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker network create -d macvlan —subnet=192.168.1.0/24 —gateway=192.168.1.1 -o parent=eth0 macnet</span><br><span class="line">docker network list</span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">nano /etc/systemd/system/docker.service.d/http-proxy.conf</span><br></pre></td></tr></table></figure><p>1<br>2<br>3<br>4</p><p>[Service]<br>Environment=”HTTP_PROXY=<a href="http://proxy-addr:proxy-port">http://proxy-addr:proxy-port</a>“ #代理服务器地址<br>Environment=”HTTPS_PROXY=<a href="http://proxy-addr:proxy-port">http://proxy-addr:proxy-port</a>“ #https<br>Environment=”NO_PROXY=localhost,127.0.0.0/8,docker-registry.example.com,.corp” #哪些地址不需要走代理</p><p>systemctl daemon-reload<br>systemctl restart docker<br>sudo systemctl show —property=Environment docker<br>docker run —restart always —name openwrt -d —network macnet —privileged sulinggg/openwrt:armv8 /sbin/init<br>docker ps -a<br>docker exec -it d61d5edd67d4 bash<br>vim /etc/config/network<br>将后面三项改成自己的ip</p><p>/etc/init.d/network restart</p><p>直接浏览器访问刚刚设置的ip和端口<br>密码默认passwd</p><p>在网络LAN口中关闭桥接接口</p><p>网络防火墙自定义规则中添加<br>iptables -t nat -I POSTROUTING -j MASQUERADE</p><p>在网络Turbo ACC网络加速中勾选DNS缓存</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      <category domain="http://example.com/tags/docker/">docker</category>
      
      <category domain="http://example.com/tags/openwrt/">openwrt</category>
      
      <category domain="http://example.com/tags/rock4b/">rock4b+</category>
      
      <category domain="http://example.com/tags/web/">web</category>
      
      
      <comments>http://example.com/2023/09/12/rockpi4b/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RT-Thread</title>
      <link>http://example.com/2023/09/12/rt-thread/</link>
      <guid>http://example.com/2023/09/12/rt-thread/</guid>
      <pubDate>Tue, 12 Sep 2023 14:01:11 GMT</pubDate>
      
        
        
      <description>&lt;p&gt; 发表于 2023-06-24   分类于 &lt;a href=&quot;https://wishzone.ltd/categories/%E5%8D%95%E7%89%87%E6%9C%BA/&quot;&gt;单片机&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;记录自己学习RT-Thread的过程&lt;/p&gt;
&lt;h1 id</description>
        
      
      
      
      <content:encoded><![CDATA[<p> 发表于 2023-06-24   分类于 <a href="https://wishzone.ltd/categories/%E5%8D%95%E7%89%87%E6%9C%BA/">单片机</a></p><p>记录自己学习RT-Thread的过程</p><h1 id="RT-Thread版本"><a href="#RT-Thread版本" class="headerlink" title="RT-Thread版本"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#RT-Thread%E7%89%88%E6%9C%AC"></a>RT-Thread版本</h1><h2 id="标准版"><a href="#标准版" class="headerlink" title="标准版"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E6%A0%87%E5%87%86%E7%89%88"></a>标准版</h2><p>包含内核，组件和服务，上层应用包</p><h2 id="Nano版"><a href="#Nano版" class="headerlink" title="Nano版"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#Nano%E7%89%88"></a>Nano版</h2><p>包含内核，可移植组件</p><h2 id="Smart版"><a href="#Smart版" class="headerlink" title="Smart版"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#Smart%E7%89%88"></a>Smart版</h2><p>将硬件层与软件层分开，类似Linux</p><h1 id="内核"><a href="#内核" class="headerlink" title="内核"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E5%86%85%E6%A0%B8"></a>内核</h1><p>负责线程管理thread.c，时钟管理clock.c,timer.c，中断管理，内存管理mem.c,memheap.c等，以及线程之间的同步与通信ipc.c,对象管理object.c,实时调度器schedule.c，设备管理device.c</p><h1 id="内核启动"><a href="#内核启动" class="headerlink" title="内核启动"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E5%86%85%E6%A0%B8%E5%90%AF%E5%8A%A8"></a>内核启动</h1><h2 id="汇编启动"><a href="#汇编启动" class="headerlink" title="汇编启动"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E6%B1%87%E7%BC%96%E5%90%AF%E5%8A%A8"></a>汇编启动</h2><p>Reset_Handler—&gt;LoopCopyDataInit—&gt;LoopFillZerobss—&gt;SystemInit()</p><h2 id="C文件启动"><a href="#C文件启动" class="headerlink" title="C文件启动"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#C%E6%96%87%E4%BB%B6%E5%90%AF%E5%8A%A8"></a>C文件启动</h2><p>SystemInit()—&gt;__libc_init_array()—&gt;entry()—&gt;rtthread_startup()</p><h2 id="系统启动"><a href="#系统启动" class="headerlink" title="系统启动"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8"></a>系统启动</h2><p>rtthread启动过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">intrtthread_startup(void)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">rt_hw_interrupt_disable();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*板级初始化：需在该函数内部进行系统堆的初始化*/</span><br><span class="line"></span><br><span class="line">rt_hw_board_init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*打印RT-Thread版本信息*/</span><br><span class="line"></span><br><span class="line">rt_show_version();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*定时器初始化*/</span><br><span class="line"></span><br><span class="line">rt_system_timer_init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*调度器初始化*/</span><br><span class="line"></span><br><span class="line">rt_system_scheduler_init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#ifdef RT_USING_SIGNALS</span><br><span class="line"></span><br><span class="line">/*信号初始化*/</span><br><span class="line"></span><br><span class="line">rt_system_signal_init();</span><br><span class="line"></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*由此创建一个用户main线程mian_thread_entry*/</span><br><span class="line"></span><br><span class="line">rt_application_init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*定时器线程初始化创建线程rt_thread_timer_entry*/</span><br><span class="line"></span><br><span class="line">rt_system_timer_thread_init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*空闲线程初始化创建线程rt_thread_idle_entry*/</span><br><span class="line"></span><br><span class="line">rt_thread_idle_init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*启动调度器*/</span><br><span class="line"></span><br><span class="line">rt_system_scheduler_start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*不会执行至此*/</span><br><span class="line"></span><br><span class="line">return0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程启动"><a href="#线程启动" class="headerlink" title="线程启动"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E5%90%AF%E5%8A%A8"></a>线程启动</h2><p>首先在系统启动的时候就已经创建了三个线程：</p><p>mian_thread_entry</p><p>rt_thread_timer_entry</p><p>rt_thread_idle_entry</p><h3 id="rt-application-init"><a href="#rt-application-init" class="headerlink" title="rt_application_init()"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#rt-application-init"></a>rt_application_init()</h3><h4 id="线程创建"><a href="#线程创建" class="headerlink" title="线程创建"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E5%88%9B%E5%BB%BA"></a>线程创建</h4><p>根据是否使用堆会有两种创建方式:</p><h5 id="使用堆heap"><a href="#使用堆heap" class="headerlink" title="使用堆heap"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E4%BD%BF%E7%94%A8%E5%A0%86heap"></a>使用堆heap</h5><p>1<br>2<br>3<br>4<br>5</p><p>rt_thread_create(“main”, main_thread_entry, RT_NULL,  </p><p>RT_MAIN_THREAD_STACK_SIZE, RT_MAIN_THREAD_PRIORITY, 20);  </p><p>动态调度方式创建</p><h5 id="不使用堆heap"><a href="#不使用堆heap" class="headerlink" title="不使用堆heap"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%A0%86heap"></a>不使用堆heap</h5><p>1<br>2<br>3<br>4<br>5</p><p>rt_thread_init(tid, “main”, main_thread_entry, RT_NULL,  </p><p>main_stack, sizeof(main_stack), RT_MAIN_THREAD_PRIORITY, 20);  </p><p>静态创建</p><h4 id="进入线程启动器函数启动线程"><a href="#进入线程启动器函数启动线程" class="headerlink" title="进入线程启动器函数启动线程"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E8%BF%9B%E5%85%A5%E7%BA%BF%E7%A8%8B%E5%90%AF%E5%8A%A8%E5%99%A8%E5%87%BD%E6%95%B0%E5%90%AF%E5%8A%A8%E7%BA%BF%E7%A8%8B"></a>进入线程启动器函数启动线程</h4><p>rt_thread_startup(tid)</p><h4 id="进入就绪状态并运行线程"><a href="#进入就绪状态并运行线程" class="headerlink" title="进入就绪状态并运行线程"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E8%BF%9B%E5%85%A5%E5%B0%B1%E7%BB%AA%E7%8A%B6%E6%80%81%E5%B9%B6%E8%BF%90%E8%A1%8C%E7%BA%BF%E7%A8%8B"></a>进入就绪状态并运行线程</h4><p>main_thread_entry()</p><h4 id="线程进入主函数"><a href="#线程进入主函数" class="headerlink" title="线程进入主函数"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E8%BF%9B%E5%85%A5%E4%B8%BB%E5%87%BD%E6%95%B0"></a>线程进入主函数</h4><p>main()</p><h3 id="rt-thread-timer-entry"><a href="#rt-thread-timer-entry" class="headerlink" title="rt_thread_timer_entry()"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#rt-thread-timer-entry"></a>rt_thread_timer_entry()</h3><h3 id="rt-thread-idle-entry"><a href="#rt-thread-idle-entry" class="headerlink" title="rt_thread_idle_entry()"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#rt-thread-idle-entry"></a>rt_thread_idle_entry()</h3><p>退出线程,cleanup函数清理资源</p><h2 id="用户线程的创建"><a href="#用户线程的创建" class="headerlink" title="用户线程的创建"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%94%A8%E6%88%B7%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%88%9B%E5%BB%BA"></a>用户线程的创建</h2><h3 id="线程结构体-线程控制块"><a href="#线程结构体-线程控制块" class="headerlink" title="线程结构体(线程控制块)"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E7%BB%93%E6%9E%84%E4%BD%93-%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%9D%97"></a>线程结构体(线程控制块)</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142</p><p>struct rt_thread  </p><p>{  </p><p>/* rt object */  </p><p>char name[RT_NAME_MAX]; /**&lt; the name of thread */  </p><p>rt_uint8_t type; /**&lt; type of object */  </p><p>rt_uint8_t flags; /**&lt; thread’s flags */  </p><h1 id="ifdef-RT-USING-MODULE"><a href="#ifdef-RT-USING-MODULE" class="headerlink" title="ifdef RT_USING_MODULE"></a>ifdef RT_USING_MODULE</h1><p>void *module_id; /**&lt; id of application module */  </p><h1 id="endif"><a href="#endif" class="headerlink" title="endif"></a>endif</h1><p>rt_list_t list; /**&lt; the object list */  </p><p>rt_list_t tlist; /**&lt; the thread list */  </p><p>/* stack point and entry */  </p><p>void *sp; /**&lt; stack point */  </p><p>void *entry; /**&lt; entry */  </p><p>void *parameter; /**&lt; parameter */  </p><p>void *stack_addr; /**&lt; stack address */  </p><p>rt_uint32_t stack_size; /**&lt; stack size */  </p><p>/* error code */  </p><p>rt_err_t error; /**&lt; error code */  </p><p>rt_uint8_t stat; /**&lt; thread status */  </p><h1 id="ifdef-RT-USING-SMP-判断是否使用多核"><a href="#ifdef-RT-USING-SMP-判断是否使用多核" class="headerlink" title="ifdef RT_USING_SMP //判断是否使用多核"></a>ifdef RT_USING_SMP //判断是否使用多核</h1><p>rt_uint8_t bind_cpu; /**&lt; thread is bind to cpu */  </p><p>rt_uint8_t oncpu; /**&lt; process on cpu` */  </p><p>rt_uint16_t scheduler_lock_nest; /**&lt; scheduler lock count */  </p><p>rt_uint16_t cpus_lock_nest; /**&lt; cpus lock count */  </p><p>rt_uint16_t critical_lock_nest; /**&lt; critical lock count */  </p><h1 id="endif-RT-USING-SMP"><a href="#endif-RT-USING-SMP" class="headerlink" title="endif /*RT_USING_SMP*/"></a>endif /*RT_USING_SMP*/</h1><p>/* priority */  </p><p>rt_uint8_t current_priority; /**&lt; current priority */  </p><p>rt_uint8_t init_priority; /**&lt; initialized priority */  </p><h1 id="if-RT-THREAD-PRIORITY-MAX-gt-32"><a href="#if-RT-THREAD-PRIORITY-MAX-gt-32" class="headerlink" title="if RT_THREAD_PRIORITY_MAX &gt;32"></a>if RT_THREAD_PRIORITY_MAX &gt;32</h1><p>rt_uint8_t number;  </p><p>rt_uint8_t high_mask;  </p><h1 id="endif-1"><a href="#endif-1" class="headerlink" title="endif"></a>endif</h1><p>rt_uint32_t number_mask;  </p><h1 id="ifdefined-RT-USING-EVENT"><a href="#ifdefined-RT-USING-EVENT" class="headerlink" title="ifdefined(RT_USING_EVENT)"></a>ifdefined(RT_USING_EVENT)</h1><p>/* thread event */  </p><p>rt_uint32_t event_set;  </p><p>rt_uint8_t event_info;  </p><h1 id="endif-2"><a href="#endif-2" class="headerlink" title="endif"></a>endif</h1><h1 id="ifdefined-RT-USING-SIGNALS"><a href="#ifdefined-RT-USING-SIGNALS" class="headerlink" title="ifdefined(RT_USING_SIGNALS)"></a>ifdefined(RT_USING_SIGNALS)</h1><p>rt_sigset_t sig_pending; /**&lt; the pending signals */  </p><p>rt_sigset_t sig_mask; /**&lt; the mask bits of signal */  </p><h1 id="ifndef-RT-USING-SMP"><a href="#ifndef-RT-USING-SMP" class="headerlink" title="ifndef RT_USING_SMP"></a>ifndef RT_USING_SMP</h1><p>void *sig_ret; /**&lt; the return stack pointer from signal */  </p><h1 id="endif-3"><a href="#endif-3" class="headerlink" title="endif"></a>endif</h1><p>rt_sighandler_t *sig_vectors; /**&lt; vectors of signal handler */  </p><p>void *si_list; /**&lt; the signal infor list */  </p><h1 id="endif-4"><a href="#endif-4" class="headerlink" title="endif"></a>endif</h1><p>rt_ubase_t init_tick; /**&lt; thread’s initialized tick */  </p><p>rt_ubase_t remaining_tick; /**&lt; remaining tick */  </p><h1 id="ifdef-RT-USING-CPU-USAGE"><a href="#ifdef-RT-USING-CPU-USAGE" class="headerlink" title="ifdef RT_USING_CPU_USAGE"></a>ifdef RT_USING_CPU_USAGE</h1><p>rt_uint64_t duration_tick; /**&lt; cpu usage tick */  </p><h1 id="endif-5"><a href="#endif-5" class="headerlink" title="endif"></a>endif</h1><p>struct rt_timer thread_timer; /**&lt; built-in thread timer */  </p><p>void (*cleanup)(struct rt_thread *tid); /**&lt; cleanup function when thread exit */  </p><p>/* light weight process if present */  </p><h1 id="ifdef-RT-USING-LWP"><a href="#ifdef-RT-USING-LWP" class="headerlink" title="ifdef RT_USING_LWP"></a>ifdef RT_USING_LWP</h1><p>void *lwp;  </p><h1 id="endif-6"><a href="#endif-6" class="headerlink" title="endif"></a>endif</h1><p>rt_ubase_t user_data; /**&lt; private user data beyond this thread */  </p><p>};  </p><h3 id="线程属性"><a href="#线程属性" class="headerlink" title="线程属性"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E5%B1%9E%E6%80%A7"></a>线程属性</h3><h4 id="线程栈"><a href="#线程栈" class="headerlink" title="线程栈"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E6%A0%88"></a>线程栈</h4><h4 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81"></a>线程状态</h4><h5 id="初始状态"><a href="#初始状态" class="headerlink" title="初始状态"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81"></a>初始状态</h5><p>当线程刚开始创建还没开始运行时就处于初始状态；在初始状态下，线程不参与调度。此状态在 RT-Thread 中的宏定义为 RT_THREAD_INIT</p><h5 id="就绪状态"><a href="#就绪状态" class="headerlink" title="就绪状态"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E5%B0%B1%E7%BB%AA%E7%8A%B6%E6%80%81"></a>就绪状态</h5><p>在就绪状态下，线程按照优先级排队，等待被执行；一旦当前线程运行完毕让出处理器，操作系统会马上寻找最高优先级的就绪态线程运行。此状态在 RT-Thread 中的宏定义为 RT_THREAD_READY</p><h5 id="运行状态"><a href="#运行状态" class="headerlink" title="运行状态"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%81"></a>运行状态</h5><p>线程当前正在运行。在单核系统中，只有 rt_thread_self() 函数返回的线程处于运行状态；在多核系统中，可能就不止这一个线程处于运行状态。此状态在 RT-Thread 中的宏定义为 RT_THREAD_RUNNING</p><h5 id="挂起状态"><a href="#挂起状态" class="headerlink" title="挂起状态"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E6%8C%82%E8%B5%B7%E7%8A%B6%E6%80%81"></a>挂起状态</h5><p>也称阻塞态。它可能因为资源不可用而挂起等待，或线程主动延时一段时间而挂起。在挂起状态下，线程不参与调度。此状态在 RT-Thread 中的宏定义为 RT_THREAD_SUSPEND</p><h5 id="关闭状态"><a href="#关闭状态" class="headerlink" title="关闭状态"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E5%85%B3%E9%97%AD%E7%8A%B6%E6%80%81"></a>关闭状态</h5><p>当线程运行结束时将处于关闭状态。关闭状态的线程不参与线程的调度。此状态在 RT-Thread 中的宏定义为 RT_THREAD_CLOSE</p><h4 id="时间片"><a href="#时间片" class="headerlink" title="时间片"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E6%97%B6%E9%97%B4%E7%89%87"></a>时间片</h4><p>如果线程优先级相同则通过时间片,一个线程运行几个时钟周期再切换给另一个</p><h3 id="线程状态切换"><a href="#线程状态切换" class="headerlink" title="线程状态切换"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81%E5%88%87%E6%8D%A2"></a>线程状态切换</h3><p><img src="https://www.rt-thread.org/document/site/rt-thread-version/rt-thread-standard/programming-manual/thread/figures/04thread_sta.png" alt="Alt text"></p><h3 id="线程操作"><a href="#线程操作" class="headerlink" title="线程操作"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E6%93%8D%E4%BD%9C"></a>线程操作</h3><h4 id="线程创建与删除"><a href="#线程创建与删除" class="headerlink" title="线程创建与删除"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%88%A0%E9%99%A4"></a>线程创建与删除</h4><p>动态创建:系统分配栈与句柄</p><p>静态创建:用户自行分配栈和句柄</p><h5 id="线程的创建"><a href="#线程的创建" class="headerlink" title="线程的创建"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%88%9B%E5%BB%BA"></a>线程的创建</h5><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13</p><p>rt_thread_create(constchar *name,//名字  </p><p>void (*entry)(void *parameter),//线程函数入口  </p><p>void *parameter,//传递给线程函数的参数  </p><p>rt_uint32_tstack_size,//线程栈大小  </p><p>rt_uint8_t priority,//优先级,stm32为32个  </p><p>rt_uint32_ttick);//时间片节拍数量  </p><p>返回值为rt_thread_t,为结构体指针,返回线程控制块</p><h5 id="线程的删除"><a href="#线程的删除" class="headerlink" title="线程的删除"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%88%A0%E9%99%A4"></a>线程的删除</h5><p>rt_thread_delete(rt_thread_t thread);</p><p>返回值为rt_err_t,线程错误码</p><h2 id="RT-Thread程序内存分布"><a href="#RT-Thread程序内存分布" class="headerlink" title="RT_Thread程序内存分布"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#RT-Thread%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%88%86%E5%B8%83"></a>RT_Thread程序内存分布</h2><p>一般 MCU 包含的存储空间有：片内 Flash 与片内 RAM，RAM 相当于内存，Flash 相当于硬盘。编译器会将一个程序分类为好几个部分，分别存储在 MCU 不同的存储区。</p><p>Keil 工程在编译完之后，会有相应的程序所占用的空间提示信息，如下所示：</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11</p><p>linking…  </p><p>Program Size: Code=48008 RO-data=5660 RW-data=604 ZI-data=2124  </p><p>After Build - User command \#1: fromelf —bin.\\build\\rtthread-stm32.axf—output rtthread.bin  </p><p>“.\\build\\rtthread-stm32.axf” - 0Error(s), 0Warning(s).  </p><p>Build Time Elapsed: 00:00:07  </p><p>上面提到的 Program Size 包含以下几个部分：</p><p>1）Code：代码段，存放程序的代码部分；</p><p>2）RO-data：只读数据段，存放程序中定义的常量；</p><p>3）RW-data：读写数据段，存放初始化为非 0 值的全局变量；</p><p>4）ZI-data：0 数据段，存放未初始化的全局变量及初始化为 0 的变量；</p><p>编译完工程会生成一个. map 的文件，该文件说明了各个函数占用的尺寸和地址，在文件的最后几行也说明了上面几个字段的关系：</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7</p><p>Total RO Size (Code + RO Data) 53668 ( 52.41kB)  </p><p>Total RW Size (RW Data + ZI Data) 2728 ( 2.66kB)  </p><p>Total ROM Size (Code + RO Data + RW Data) 53780 ( 52.52kB)  </p><p>1）RO Size 包含了 Code 及 RO-data，表示程序占用 Flash 空间的大小；</p><p>2）RW Size 包含了 RW-data 及 ZI-data，表示运行时占用的 RAM 的大小；</p><p>3）ROM Size 包含了 Code、RO-data 以及 RW-data，表示烧写程序所占用的 Flash 空间的大小；</p><h2 id="RT-Thread-自动初始化机制"><a href="#RT-Thread-自动初始化机制" class="headerlink" title="RT-Thread 自动初始化机制"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#RT-Thread-%E8%87%AA%E5%8A%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%BA%E5%88%B6"></a>RT-Thread 自动初始化机制</h2><p>INIT_BOARD_EXPORT(rt_hw_usart_init); / <em>使用组件自动初始化机制</em> /</p><h1 id="IO设备"><a href="#IO设备" class="headerlink" title="IO设备"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#IO%E8%AE%BE%E5%A4%87"></a>IO设备</h1><p><img src="https://www.rt-thread.org/document/site/rt-thread-version/rt-thread-standard/programming-manual/device/figures/io-dev.png" alt="Alt text"></p><p><img src="https://www.rt-thread.org/document/site/rt-thread-version/rt-thread-standard/programming-manual/device/figures/io-fun-call.png" alt="Alt text"></p><p><img src="https://www.rt-thread.org/document/site/rt-thread-version/rt-thread-standard/programming-manual/device/figures/io-dev-ex.png" alt="Alt text"></p><h2 id="创建设备"><a href="#创建设备" class="headerlink" title="创建设备"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E5%88%9B%E5%BB%BA%E8%AE%BE%E5%A4%87"></a>创建设备</h2><h2 id="注册设备"><a href="#注册设备" class="headerlink" title="注册设备"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E6%B3%A8%E5%86%8C%E8%AE%BE%E5%A4%87"></a>注册设备</h2><h2 id="访问设备"><a href="#访问设备" class="headerlink" title="访问设备"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E8%AE%BF%E9%97%AE%E8%AE%BE%E5%A4%87"></a>访问设备</h2><h1 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84"></a>文件结构</h1><h2 id="applications应用层"><a href="#applications应用层" class="headerlink" title="applications应用层"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#applications%E5%BA%94%E7%94%A8%E5%B1%82"></a>applications应用层</h2><h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#Debug"></a>Debug</h2><h2 id="drivers驱动层"><a href="#drivers驱动层" class="headerlink" title="drivers驱动层"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#drivers%E9%A9%B1%E5%8A%A8%E5%B1%82"></a>drivers驱动层</h2><h2 id="libraries芯片硬件层"><a href="#libraries芯片硬件层" class="headerlink" title="libraries芯片硬件层"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#libraries%E8%8A%AF%E7%89%87%E7%A1%AC%E4%BB%B6%E5%B1%82"></a>libraries芯片硬件层</h2><p>包含有Hal库驱动和CMSIS等</p><h2 id="rt-thread系统层"><a href="#rt-thread系统层" class="headerlink" title="rt_thread系统层"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#rt-thread%E7%B3%BB%E7%BB%9F%E5%B1%82"></a>rt_thread系统层</h2><h2 id="packages"><a href="#packages" class="headerlink" title="packages"></a><a href="https://wishzone.ltd/2023/06/24/RT-Thread/#packages"></a>packages</h2>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      
      <comments>http://example.com/2023/09/12/rt-thread/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PVE</title>
      <link>http://example.com/2023/09/12/pve/</link>
      <guid>http://example.com/2023/09/12/pve/</guid>
      <pubDate>Tue, 12 Sep 2023 14:00:12 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;PVE的一部分配置&lt;/p&gt;
&lt;h1 id=&quot;PVE-使用无线网卡上网&quot;&gt;&lt;a href=&quot;#PVE-使用无线网卡上网&quot; class=&quot;headerlink&quot; title=&quot;PVE 使用无线网卡上网&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/202</description>
        
      
      
      
      <content:encoded><![CDATA[<p>PVE的一部分配置</p><h1 id="PVE-使用无线网卡上网"><a href="#PVE-使用无线网卡上网" class="headerlink" title="PVE 使用无线网卡上网"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#PVE-%E4%BD%BF%E7%94%A8%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E4%B8%8A%E7%BD%91"></a>PVE 使用无线网卡上网</h1><h2 id="查询网卡是否识别"><a href="#查询网卡是否识别" class="headerlink" title="查询网卡是否识别"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E6%9F%A5%E8%AF%A2%E7%BD%91%E5%8D%A1%E6%98%AF%E5%90%A6%E8%AF%86%E5%88%AB"></a>查询网卡是否识别</h2><p>1<br>2</p><p>ip addr<br>在输出的信息中查看是否包含 w 开头的网卡</p><h2 id="安装并配置WiFi管理工具"><a href="#安装并配置WiFi管理工具" class="headerlink" title="安装并配置WiFi管理工具"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEWiFi%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7"></a>安装并配置WiFi管理工具</h2><p>以iwd为例</p><p>1<br>2<br>3<br>4<br>5</p><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><p>apt install iwd  </p><h1 id="启动-iwd-，并设置开机启动"><a href="#启动-iwd-，并设置开机启动" class="headerlink" title="启动 iwd ，并设置开机启动"></a>启动 iwd ，并设置开机启动</h1><p>systemctl start iwd<br>systemctl enable iwd</p><h2 id="查看无线网卡"><a href="#查看无线网卡" class="headerlink" title="查看无线网卡"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E6%9F%A5%E7%9C%8B%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1"></a>查看无线网卡</h2><p>1</p><p>iwctl device list</p><h2 id="扫描并获取无线网络"><a href="#扫描并获取无线网络" class="headerlink" title="扫描并获取无线网络"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E6%89%AB%E6%8F%8F%E5%B9%B6%E8%8E%B7%E5%8F%96%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C"></a>扫描并获取无线网络</h2><p>1<br>2</p><p>iwctl station wlan0 scan<br>iwctl station wlan0 get-networks</p><h2 id="连接无线网"><a href="#连接无线网" class="headerlink" title="连接无线网"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E8%BF%9E%E6%8E%A5%E6%97%A0%E7%BA%BF%E7%BD%91"></a>连接无线网</h2><p>1</p><p>iwctl —passphrase 密码 station 网卡 connect SSID</p><h2 id="安装并配置-DHCP-为虚拟机自动分配IP"><a href="#安装并配置-DHCP-为虚拟机自动分配IP" class="headerlink" title="安装并配置 DHCP 为虚拟机自动分配IP"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE-DHCP-%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%88%86%E9%85%8DIP"></a>安装并配置 DHCP 为虚拟机自动分配IP</h2><p>以dnsmasq为例</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7</p><p>apt install dnsmasq<br># 修改配置文件 /etc/dnsmasq.conf<br># 为vmbr0网卡自动分配IP，从100-254，租约72小时<br>interface=vmbr0<br>dhcp-range=10.10.10.100,10.10.10.254,255.255.255.0,72h<br># 设置开机启动<br>systemctl enable dnsmasq</p><h2 id="配置网络让路由器下的其它设备能连上pve和虚拟机"><a href="#配置网络让路由器下的其它设备能连上pve和虚拟机" class="headerlink" title="配置网络让路由器下的其它设备能连上pve和虚拟机"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E8%AE%A9%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%8B%E7%9A%84%E5%85%B6%E5%AE%83%E8%AE%BE%E5%A4%87%E8%83%BD%E8%BF%9E%E4%B8%8Apve%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA"></a>配置网络让路由器下的其它设备能连上pve和虚拟机</h2><h3 id="编辑配置文件-etc-network-interfaces"><a href="#编辑配置文件-etc-network-interfaces" class="headerlink" title="编辑配置文件 /etc/network/interfaces"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-etc-network-interfaces"></a>编辑配置文件 /etc/network/interfaces</h3><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19</p><p>auto lo<br>iface lo inet loopback<br># 设置无线网卡静态IP<br>auto wlan0<br>iface wlan0 inet static<br>address 192.168.31.2/24<br>gateway 192.168.31.1  </p><p>iface enp6s0 inet manual<br># 设置 NAT<br>auto vmbr0<br>iface vmbr0 inet static<br>address 10.10.10.1/24<br>bridge-ports enp6s0<br>bridge-stp off<br>bridge-fd 0  </p><p>post-up echo 1 &gt; /proc/sys/net/ipv4/ip_forward # 开启IP转发<br>post-up bash /root/iptables.config.sh # 定义规则</p><h3 id="修改-root-iptables-config-sh"><a href="#修改-root-iptables-config-sh" class="headerlink" title="修改 /root/iptables.config.sh"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E4%BF%AE%E6%94%B9-root-iptables-config-sh"></a>修改 /root/iptables.config.sh</h3><p>1<br>2<br>3<br>4</p><h1 id="usr-bin-env-bash"><a href="#usr-bin-env-bash" class="headerlink" title="!/usr/bin/env bash"></a>!/usr/bin/env bash</h1><h1 id="设置NAT，让10-10-10-0-24的数据走wlan0网卡"><a href="#设置NAT，让10-10-10-0-24的数据走wlan0网卡" class="headerlink" title="设置NAT，让10.10.10.0/24的数据走wlan0网卡"></a>设置NAT，让10.10.10.0/24的数据走wlan0网卡</h1><p>iptables -t nat -A POSTROUTING -s ‘10.10.10.0/24’ -o wlan0 -j MASQUERADE<br>iptables -t raw -I PREROUTING -i fwbr+ -j CT —zone 1</p><h3 id="设置端口转发-让路由器下的设备能访问到虚拟机"><a href="#设置端口转发-让路由器下的设备能访问到虚拟机" class="headerlink" title="设置端口转发, 让路由器下的设备能访问到虚拟机"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91-%E8%AE%A9%E8%B7%AF%E7%94%B1%E5%99%A8%E4%B8%8B%E7%9A%84%E8%AE%BE%E5%A4%87%E8%83%BD%E8%AE%BF%E9%97%AE%E5%88%B0%E8%99%9A%E6%8B%9F%E6%9C%BA"></a>设置端口转发, 让路由器下的设备能访问到虚拟机</h3><h3 id="把访问-192-168-31-2-指定端口的流量转发到虚拟机对应的IP"><a href="#把访问-192-168-31-2-指定端口的流量转发到虚拟机对应的IP" class="headerlink" title="把访问 192.168.31.2 指定端口的流量转发到虚拟机对应的IP"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E6%8A%8A%E8%AE%BF%E9%97%AE-192-168-31-2-%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%B5%81%E9%87%8F%E8%BD%AC%E5%8F%91%E5%88%B0%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%B9%E5%BA%94%E7%9A%84IP"></a>把访问 192.168.31.2 指定端口的流量转发到虚拟机对应的IP</h3><p>1<br>2</p><p>iptables -t nat -A PREROUTING -i wlan0 -p tcp —dport 8006 -j DNAT —to-destination 10.10.10.1:8006<br>iptables -t nat -A PREROUTING -i wlan0 -p tcp —dport 10100 -j DNAT —to-destination 10.10.10.100:80</p><h3 id="设置默认路由，将所有未知目的地的数据包发送到-wlan0-网络接口上，并将它们的下一跳设置为-192-168-31-1"><a href="#设置默认路由，将所有未知目的地的数据包发送到-wlan0-网络接口上，并将它们的下一跳设置为-192-168-31-1" class="headerlink" title="设置默认路由，将所有未知目的地的数据包发送到 wlan0 网络接口上，并将它们的下一跳设置为 192.168.31.1"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%B0%86%E6%89%80%E6%9C%89%E6%9C%AA%E7%9F%A5%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E5%8F%91%E9%80%81%E5%88%B0-wlan0-%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3%E4%B8%8A%EF%BC%8C%E5%B9%B6%E5%B0%86%E5%AE%83%E4%BB%AC%E7%9A%84%E4%B8%8B%E4%B8%80%E8%B7%B3%E8%AE%BE%E7%BD%AE%E4%B8%BA-192-168-31-1"></a>设置默认路由，将所有未知目的地的数据包发送到 wlan0 网络接口上，并将它们的下一跳设置为 192.168.31.1</h3><p>1<br>2</p><p>ip route add default via 192.168.31.1 dev wlan0<br>ip route flush cache</p><h1 id="PVE监测温度"><a href="#PVE监测温度" class="headerlink" title="PVE监测温度"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#PVE%E7%9B%91%E6%B5%8B%E6%B8%A9%E5%BA%A6"></a>PVE监测温度</h1><h2 id="安装并配置温度监控软件-lm-sensors"><a href="#安装并配置温度监控软件-lm-sensors" class="headerlink" title="安装并配置温度监控软件 lm-sensors"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%B8%A9%E5%BA%A6%E7%9B%91%E6%8E%A7%E8%BD%AF%E4%BB%B6-lm-sensors"></a>安装并配置温度监控软件 lm-sensors</h2><p>1<br>2<br>3<br>4<br>5</p><p>apt-get install lm-sensors<br># 验证lm-sensors的版本<br>sensors -v<br>sensors-detect #获取可显示的温度,全部填YES<br>sensors #读取传感器</p><p>显示如下</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16</p><p>root@wishzone:~# sensors<br>iwlwifi_1-virtual-0<br>Adapter: Virtual device<br>temp1: +53.0°C  </p><p>nvme-pci-0300<br>Adapter: PCI adapter<br>Composite: +60.9°C  </p><p>coretemp-isa-0000<br>Adapter: ISA adapter<br>Package id 0: +54.0°C (high = +105.0°C, crit = +105.0°C)<br>Core 0: +54.0°C (high = +105.0°C, crit = +105.0°C)<br>Core 1: +54.0°C (high = +105.0°C, crit = +105.0°C)<br>Core 2: +54.0°C (high = +105.0°C, crit = +105.0°C)<br>Core 3: +54.0°C (high = +105.0°C, crit = +105.0°C)</p><p>我们可以看出</p><p>iwlwifi_1-virtual-0是无线网卡温度<br>coretemp-isa-0000是 CPU 温度<br>使用命令lspci查询编号可知：<br>nvme-pci-0300是主硬盘温度</p><h2 id="定制显示温度内容"><a href="#定制显示温度内容" class="headerlink" title="定制显示温度内容"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%AE%9A%E5%88%B6%E6%98%BE%E7%A4%BA%E6%B8%A9%E5%BA%A6%E5%86%85%E5%AE%B9"></a>定制显示温度内容</h2><p>PVE 的 WebUI 控制台是使用Node.js实现的，所以要修改对应的文件，使得其可以定期执行sensors命令，并将结果输出 Web 页面上。</p><h3 id="修改Nodes-pm，获取温度"><a href="#修改Nodes-pm，获取温度" class="headerlink" title="修改Nodes.pm，获取温度"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E4%BF%AE%E6%94%B9Nodes-pm%EF%BC%8C%E8%8E%B7%E5%8F%96%E6%B8%A9%E5%BA%A6"></a>修改Nodes.pm，获取温度</h3><p>1</p><p>nano /usr/share/perl5/PVE/API2/Nodes.pm</p><p>增加的内容</p><p>1</p><p>$res-&gt;{temperature} = `sensors`; # 获取 CPU 和 主板 的温度</p><p>增加的位置<br>ctrl+w搜索my $dinfo = df(‘/‘, 1)</p><p>在搜索内容的上面添加，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">···</span><br><span class="line"></span><br><span class="line">$res-&gt;&#123;ksm&#125; = &#123;</span><br><span class="line">shared =&gt; $meminfo-&gt;&#123;memshared&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$res-&gt;&#123;swap&#125; = &#123;</span><br><span class="line">free =&gt; $meminfo-&gt;&#123;swapfree&#125;,</span><br><span class="line">total =&gt; $meminfo-&gt;&#123;swaptotal&#125;,</span><br><span class="line">used =&gt; $meminfo-&gt;&#123;swapused&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$res-&gt;&#123;pveversion&#125; = PVE::pvecfg::package() . &quot;/&quot; .</span><br><span class="line">PVE::pvecfg::version_text();</span><br><span class="line"></span><br><span class="line">$res-&gt;&#123;temperature&#125; = `sensors`; # 获取 CPU 和 主板 的温度</span><br><span class="line"></span><br><span class="line">my $dinfo = df(&#x27;/&#x27;, 1); # output is bytes</span><br><span class="line"></span><br><span class="line">$res-&gt;&#123;rootfs&#125; = &#123;</span><br><span class="line">total =&gt; $dinfo-&gt;&#123;blocks&#125;,</span><br><span class="line">avail =&gt; $dinfo-&gt;&#123;bavail&#125;,</span><br><span class="line">used =&gt; $dinfo-&gt;&#123;used&#125;,</span><br><span class="line">free =&gt; $dinfo-&gt;&#123;blocks&#125; - $dinfo-&gt;&#123;used&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">return $res;</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure><h3 id="修改pvemanagerlib-js，显示温度"><a href="#修改pvemanagerlib-js，显示温度" class="headerlink" title="修改pvemanagerlib.js，显示温度"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E4%BF%AE%E6%94%B9pvemanagerlib-js%EF%BC%8C%E6%98%BE%E7%A4%BA%E6%B8%A9%E5%BA%A6"></a>修改pvemanagerlib.js，显示温度</h3><p>1</p><p>vi /usr/share/pve-manager/js/pvemanagerlib.js</p><p>添加内容要根据自己的实际情况修改，注意逗号和括号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">,</span><br><span class="line">&#123;</span><br><span class="line">itemId: &#x27;temperature&#x27;,</span><br><span class="line">colspan: 2,</span><br><span class="line">printBar: false,</span><br><span class="line">title: gettext(&#x27;温度&#x27;),</span><br><span class="line">textField: &#x27;temperature&#x27;,</span><br><span class="line">renderer: function(value)&#123;</span><br><span class="line">const p0 = value.match(/Package id 0.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const b0 = value.match(/temp1.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const b1 = value.match(/Composite.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c0 = value.match(/Core 0.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c1 = value.match(/Core 1.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c2 = value.match(/Core 2.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c3 = value.match(/Core 3.*?\+([\d\.]+)?/)[1];</span><br><span class="line"></span><br><span class="line">return `CPU: $&#123;p0&#125;℃  Core0: $&#123;c0&#125;℃  Core1: $&#123;c1&#125;℃  Core2: $&#123;c2&#125;℃  Core3: $&#123;c3&#125;℃  无线网卡: $&#123;b0&#125;℃  系统盘: $&#123;b1&#125;℃ `</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自己照猫画虎改就行了，不难<br>增加的位置<br>ctrl+w搜索itemId: ‘version’,<br>在内容的下面添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">itemId: &#x27;version&#x27;,</span><br><span class="line">colspan: 2,</span><br><span class="line">printBar: false,</span><br><span class="line">title: gettext(&#x27;PVE Manager Version&#x27;),</span><br><span class="line">textField: &#x27;pveversion&#x27;,</span><br><span class="line">value: &#x27;&#x27;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">itemId: &#x27;temperature&#x27;,</span><br><span class="line">colspan: 2,</span><br><span class="line">printBar: false,</span><br><span class="line">title: gettext(&#x27;温度&#x27;),</span><br><span class="line">textField: &#x27;temperature&#x27;,</span><br><span class="line">renderer: function(value)&#123;</span><br><span class="line">const p0 = value.match(/Package id 0.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const b0 = value.match(/temp1.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const b1 = value.match(/Composite.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c0 = value.match(/Core 0.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c1 = value.match(/Core 1.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c2 = value.match(/Core 2.*?\+([\d\.]+)?/)[1];</span><br><span class="line">const c3 = value.match(/Core 3.*?\+([\d\.]+)?/)[1];</span><br><span class="line"></span><br><span class="line">return `CPU: $&#123;p0&#125;℃  Core0: $&#123;c0&#125;℃  Core1: $&#123;c1&#125;℃  Core2: $&#123;c2&#125;℃  Core3: $&#123;c3&#125;℃  无线网卡: $&#123;b0&#125;℃  系统盘: $&#123;b1&#125;℃ `</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line">updateTitle: function() &#123;</span><br><span class="line">var me = this;</span><br><span class="line">var uptime = Proxmox.Utils.render_uptime(me.getRecordValue(&#x27;uptime&#x27;));</span><br><span class="line">me.setTitle(me.pveSelNode.data.node + &#x27; (&#x27; + gettext(&#x27;Uptime&#x27;) + &#x27;: &#x27; + uptime + &#x27;)&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="修改完成，重启Web控制台"><a href="#修改完成，重启Web控制台" class="headerlink" title="修改完成，重启Web控制台"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E4%BF%AE%E6%94%B9%E5%AE%8C%E6%88%90%EF%BC%8C%E9%87%8D%E5%90%AFWeb%E6%8E%A7%E5%88%B6%E5%8F%B0"></a>修改完成，重启Web控制台</h3><p>systemctl restart pveproxy</p><p>注意：若温度的显示值为null，请打开开发者工具，在Console中进行查看</p><h2 id="懒人修改法"><a href="#懒人修改法" class="headerlink" title="懒人修改法"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E6%87%92%E4%BA%BA%E4%BF%AE%E6%94%B9%E6%B3%95"></a>懒人修改法</h2><p><a href="https://www.right.com.cn/forum/thread-6754687-1-1.html">点击这里，支持各种版本</a></p><h1 id="IMG文件创建虚拟机"><a href="#IMG文件创建虚拟机" class="headerlink" title="IMG文件创建虚拟机"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#IMG%E6%96%87%E4%BB%B6%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA"></a>IMG文件创建虚拟机</h1><h2 id="创建虚拟机时选择无镜像"><a href="#创建虚拟机时选择无镜像" class="headerlink" title="创建虚拟机时选择无镜像"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%B6%E9%80%89%E6%8B%A9%E6%97%A0%E9%95%9C%E5%83%8F"></a>创建虚拟机时选择无镜像</h2><h2 id="创建完成后分离并删除磁盘"><a href="#创建完成后分离并删除磁盘" class="headerlink" title="创建完成后分离并删除磁盘"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%88%9B%E5%BB%BA%E5%AE%8C%E6%88%90%E5%90%8E%E5%88%86%E7%A6%BB%E5%B9%B6%E5%88%A0%E9%99%A4%E7%A3%81%E7%9B%98"></a>创建完成后分离并删除磁盘</h2><h2 id="进入宿主机输入指令"><a href="#进入宿主机输入指令" class="headerlink" title="进入宿主机输入指令"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E8%BF%9B%E5%85%A5%E5%AE%BF%E4%B8%BB%E6%9C%BA%E8%BE%93%E5%85%A5%E6%8C%87%E4%BB%A4"></a>进入宿主机输入指令</h2><p>1<br>2<br>3<br>4<br>5<br>6</p><p>qm importdisk 103 /var/lib/vz/template/iso/DS3615xs.img local-lvm  </p><p>//103为虚拟机代号<br>///var/lib/vz/为存储镜像的磁盘的位置<br>//DS3615xs.img 为需要创建虚拟机的镜像<br>//local-lvm为所创建虚拟机的镜像的存储磁盘的名称</p><h2 id="进入虚拟机磁盘管理双击磁盘选择添加"><a href="#进入虚拟机磁盘管理双击磁盘选择添加" class="headerlink" title="进入虚拟机磁盘管理双击磁盘选择添加"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E8%BF%9B%E5%85%A5%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%8F%8C%E5%87%BB%E7%A3%81%E7%9B%98%E9%80%89%E6%8B%A9%E6%B7%BB%E5%8A%A0"></a>进入虚拟机磁盘管理双击磁盘选择添加</h2><h2 id="进入虚拟机选项调整启动顺序"><a href="#进入虚拟机选项调整启动顺序" class="headerlink" title="进入虚拟机选项调整启动顺序"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E8%BF%9B%E5%85%A5%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%80%89%E9%A1%B9%E8%B0%83%E6%95%B4%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F"></a>进入虚拟机选项调整启动顺序</h2><h2 id="开机即可"><a href="#开机即可" class="headerlink" title="开机即可"></a><a href="https://wishzone.ltd/2023/08/24/PVE/#%E5%BC%80%E6%9C%BA%E5%8D%B3%E5%8F%AF"></a>开机即可</h2>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      
      <comments>http://example.com/2023/09/12/pve/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker</title>
      <link>http://example.com/2023/09/12/docker/</link>
      <guid>http://example.com/2023/09/12/docker/</guid>
      <pubDate>Tue, 12 Sep 2023 13:59:45 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;docker的基本用法&lt;/p&gt;
&lt;h2 id=&quot;配置非root用户使用docker&quot;&gt;&lt;a href=&quot;#配置非root用户使用docker&quot; class=&quot;headerlink&quot; title=&quot;配置非root用户使用docker&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https:/</description>
        
      
      
      
      <content:encoded><![CDATA[<p>docker的基本用法</p><h2 id="配置非root用户使用docker"><a href="#配置非root用户使用docker" class="headerlink" title="配置非root用户使用docker"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E9%85%8D%E7%BD%AE%E9%9D%9Eroot%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8docker"></a>配置非root用户使用docker</h2><h3 id="一、为用户添加root权限"><a href="#一、为用户添加root权限" class="headerlink" title="一、为用户添加root权限"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E4%B8%80%E3%80%81%E4%B8%BA%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0root%E6%9D%83%E9%99%90"></a>一、为用户添加root权限</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A"></a>方法一：</h4><p>修改 /etc/sudoers 文件，找到下面一行，把前面的注释（#）去掉<br>Allows people in group wheel to run all commands<br>%wheel ALL=(ALL) ALL<br>然后修改用户，使其属于root组（wheel），命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g root ithing</span><br></pre></td></tr></table></figure><p>修改完毕，现在可以用tommy帐号登录，然后用命令 su - ，即可获得root权限进行操作。</p><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9A"></a>方法二：</h4><p>修改 /etc/sudoers 文件，找到下面一行，在root下面添加一行，如下所示：<br>Allow root to run any commands anywhere<br>root ALL=(ALL) ALL<br>ithing ALL=(ALL) ALL</p><p>如果，在修改/etc/sudoers 文件，你该错误了，会导致使用不了sudo命令，使用vim也打不开该文件了；</p><p><strong>解决方式</strong>：执行下面的命令</p><p>1</p><p>pkexec visudo</p><h3 id="二、为非root用户添加docker执行权限"><a href="#二、为非root用户添加docker执行权限" class="headerlink" title="二、为非root用户添加docker执行权限"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E4%BA%8C%E3%80%81%E4%B8%BA%E9%9D%9Eroot%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0docker%E6%89%A7%E8%A1%8C%E6%9D%83%E9%99%90"></a>二、为非root用户添加docker执行权限</h3><h4 id="方式1：创建docker组"><a href="#方式1：创建docker组" class="headerlink" title="方式1：创建docker组"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E6%96%B9%E5%BC%8F1%EF%BC%9A%E5%88%9B%E5%BB%BAdocker%E7%BB%84"></a>方式1：创建docker组</h4><p>1<br>2<br>3<br>4</p><p>sudo groupadd docker #添加docker用户组<br>sudo gpasswd -a $USER docker #将登陆用户加入到docker用户组中<br>newgrp docker #更新用户组<br>docker ps #测试docker命令是否可以使用sudo正常使用</p><h4 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%9A"></a>方式二：</h4><p>直接修改 /var/run/docker.sock文件（这样是所有的用户都可操作docker,这样不安全，但是如果安全性要求不高，就可这样做）</p><p>先查看一下默认这个文件/var/run/docker.sock的权限是啥 ？</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9</p><p>$ sudo ls -al /var/run/docker.sock<br>srw-rw—— 1 root root 0 Feb 15 03:13 /var/run/docker.sock  </p><h1 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h1><p>sudo chmod 666 /var/run/docker.sock  </p><h1 id="修改后，再查看一下这个文件的权限"><a href="#修改后，再查看一下这个文件的权限" class="headerlink" title="修改后，再查看一下这个文件的权限"></a>修改后，再查看一下这个文件的权限</h1><p>$ sudo ls -al /var/run/docker.sock<br>srw-rw-rw- 1 root root 0 Feb 15 03:14 /var/run/docker.sock</p><h2 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E9%95%9C%E5%83%8F%E6%93%8D%E4%BD%9C"></a>镜像操作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull xxx //拉取镜像</span><br><span class="line">docker image list //查看镜像</span><br><span class="line">docker image rm [ID] //删除镜像</span><br><span class="line">cat docker/xxx.tar  docker import - xxx:v1 //导入本地包到镜像</span><br></pre></td></tr></table></figure><h2 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E5%AE%B9%E5%99%A8%E6%93%8D%E4%BD%9C"></a>容器操作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run —name=xyz -it xxx /bin/bash //前台运行docker run —name=xyz -itd xxx /bin/bash //后台运行docker exec -it [ID] /bin/bash //进入运行中的容器docker stop [ID] //停止容器docker restart [ID] //重启容器docker rm -f [ID] //删除容器docker export [ID] &gt; xxx.tar //导出容器到本地包docker container prune //清除所有停止的容器docker commit -m=”has update” -a=”runoob” [ID] name:v2 //提交容器为镜像</span><br></pre></td></tr></table></figure><h2 id="修改映射地址和端口（wordpress为例）"><a href="#修改映射地址和端口（wordpress为例）" class="headerlink" title="修改映射地址和端口（wordpress为例）"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E4%BF%AE%E6%94%B9%E6%98%A0%E5%B0%84%E5%9C%B0%E5%9D%80%E5%92%8C%E7%AB%AF%E5%8F%A3%EF%BC%88wordpress%E4%B8%BA%E4%BE%8B%EF%BC%89"></a>修改映射地址和端口（wordpress为例）</h2><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14</p><p># 1. 进入到容器中<br>docker exec -it wordpress bash<br>ls  </p><p># 2. 官方的 wordpress 镜像中并没有预装vim编辑器，所以要先装一下编辑器<br>apt-get update<br>apt-get install vim  </p><p># 3. 编辑 wp-config.php 文件<br>vi wp-config.php  </p><p># 找到 define ‘DB_HOST’ 那一行修改<br># 按【i】进入输入模式，移动光标去修改<br># 按键盘左上角【退出Esc】切换到命令模式，输入【:wq 】保存后离开</p><h2 id="推送操作"><a href="#推送操作" class="headerlink" title="推送操作"></a><a href="https://wishzone.ltd/2023/08/24/Docker/#%E6%8E%A8%E9%80%81%E6%93%8D%E4%BD%9C"></a>推送操作</h2><p>docker push xxx //推送xxx到仓库</p><p>注意docker镜像需要提前改名才能推送（name/xxx:v1.0）</p><h2 id="COMMAND查询命令"><a href="#COMMAND查询命令" class="headerlink" title="COMMAND查询命令"></a>COMMAND查询命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a --no-trunc</span><br></pre></td></tr></table></figure><h2 id="Docker的三种网络代理配置"><a href="#Docker的三种网络代理配置" class="headerlink" title="Docker的三种网络代理配置"></a>Docker的三种网络代理配置</h2><h3 id="dockerd代理-¶"><a href="#dockerd代理-¶" class="headerlink" title="dockerd代理 ¶"></a>dockerd代理 <a href="https://note.qidong.name/2020/05/docker-proxy/#dockerd%e4%bb%a3%e7%90%86">¶</a></h3><p>在执行<code>docker pull</code>时，是由守护进程<code>dockerd</code>来执行。 因此，代理需要配在<code>dockerd</code>的环境中。 而这个环境，则是受<code>systemd</code>所管控，因此实际是<code>systemd</code>的配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">sudo touch /etc/systemd/system/docker.service.d/proxy.conf</span><br></pre></td></tr></table></figure><p>在这个<code>proxy.conf</code>文件（可以是任意<code>*.conf</code>的形式）中，添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Environment=&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;</span><br><span class="line">Environment=&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;</span><br><span class="line">Environment=&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>proxy.example.com:8080</code>要换成可用的免密代理。 通常使用<code>cntlm</code>在本机自建免密代理，去对接公司的代理。 可参考《<a href="https://note.qidong.name/2018/11/cntlm-proxy/">Linux下安装配置Cntlm代理</a>》。</p><h3 id="Container代理-¶"><a href="#Container代理-¶" class="headerlink" title="Container代理 ¶"></a>Container代理 <a href="https://note.qidong.name/2020/05/docker-proxy/#container%e4%bb%a3%e7%90%86">¶</a></h3><p>在容器运行阶段，如果需要代理上网，则需要配置<code>~/.docker/config.json</code>。 以下配置，只在Docker 17.07及以上版本生效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;proxies&quot;:</span><br><span class="line"> &#123;</span><br><span class="line">   &quot;default&quot;:</span><br><span class="line">   &#123;</span><br><span class="line">     &quot;httpProxy&quot;: &quot;http://proxy.example.com:8080&quot;,</span><br><span class="line">     &quot;httpsProxy&quot;: &quot;http://proxy.example.com:8080&quot;,</span><br><span class="line">     &quot;noProxy&quot;: &quot;localhost,127.0.0.1,.example.com&quot;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是用户级的配置，除了<code>proxies</code>，<code>docker login</code>等相关信息也会在其中。 而且还可以配置信息展示的格式、插件参数等。</p><p>此外，容器的网络代理，也可以直接在其运行时通过<code>-e</code>注入<code>http_proxy</code>等环境变量。 这两种方法分别适合不同场景。 <code>config.json</code>非常方便，默认在所有配置修改后启动的容器生效，适合个人开发环境。 在CI/CD的自动构建环境、或者实际上线运行的环境中，这种方法就不太合适，用<code>-e</code>注入这种显式配置会更好，减轻对构建、部署环境的依赖。 当然，在这些环境中，最好用良好的设计避免配置代理上网。</p><h3 id="docker-build代理-¶"><a href="#docker-build代理-¶" class="headerlink" title="docker build代理 ¶"></a><code>docker build</code>代理 <a href="https://note.qidong.name/2020/05/docker-proxy/#docker-build%e4%bb%a3%e7%90%86">¶</a></h3><p>虽然<code>docker build</code>的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。 在构建时，需要注入<code>http_proxy</code>等参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker build . \</span><br><span class="line">    --build-arg &quot;HTTP_PROXY=http://proxy.example.com:8080/&quot; \</span><br><span class="line">    --build-arg &quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot; \</span><br><span class="line">    --build-arg &quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot; \</span><br><span class="line">    -t your/image:tag</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：无论是<code>docker run</code>还是<code>docker build</code>，默认是网络隔绝的。 如果代理使用的是<code>localhost:3128</code>这类，则会无效。 这类仅限本地的代理，必须加上<code>--network host</code>才能正常使用。 而一般则需要配置代理的外部IP，而且代理本身要开启gateway模式。</p><h3 id="重启生效-¶"><a href="#重启生效-¶" class="headerlink" title="重启生效 ¶"></a>重启生效 <a href="https://note.qidong.name/2020/05/docker-proxy/#%e9%87%8d%e5%90%af%e7%94%9f%e6%95%88">¶</a></h3><p>代理配置完成后，<code>reboot</code>重启当然可以生效，但不重启也行。</p><p><code>docker build</code>代理是在执行前设置的，所以修改后，下次执行立即生效。 Container代理的修改也是立即生效的，但是只针对以后启动的Container，对已经启动的Container无效。</p><p><code>dockerd</code>代理的修改比较特殊，它实际上是改<code>systemd</code>的配置，因此需要重载<code>systemd</code>并重启<code>dockerd</code>才能生效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="参考-¶"><a href="#参考-¶" class="headerlink" title="参考 ¶"></a>参考 <a href="https://note.qidong.name/2020/05/docker-proxy/#%e5%8f%82%e8%80%83">¶</a></h3><ul><li><a href="https://docs.docker.com/config/daemon/systemd/">Control Docker with systemd Docker Documentation</a></li><li><a href="https://docs.docker.com/network/proxy/">Configure Docker to use a proxy server Docker Documentation</a></li><li><a href="https://docs.docker.com/engine/reference/commandline/cli/">Use the Docker command line Docker Documentation</a></li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      <category domain="http://example.com/tags/docker/">docker</category>
      
      
      <comments>http://example.com/2023/09/12/docker/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Openwrt</title>
      <link>http://example.com/2023/09/12/openwrt/</link>
      <guid>http://example.com/2023/09/12/openwrt/</guid>
      <pubDate>Tue, 12 Sep 2023 13:59:10 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Openwrt的配置问题及解决方法&lt;/p&gt;
&lt;h2 id=&quot;开启80端口和22端口&quot;&gt;&lt;a href=&quot;#开启80端口和22端口&quot; class=&quot;headerlink&quot; title=&quot;开启80端口和22端口&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.lt</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Openwrt的配置问题及解决方法</p><h2 id="开启80端口和22端口"><a href="#开启80端口和22端口" class="headerlink" title="开启80端口和22端口"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E5%BC%80%E5%90%AF80%E7%AB%AF%E5%8F%A3%E5%92%8C22%E7%AB%AF%E5%8F%A3"></a>开启80端口和22端口</h2><p>由于小米路由为了安全考虑，对WEB与防火墙规则进行限制，WEB管理、SSH只能通过内网登 陆，外网无法访问，在路由器的WEB管理页面新建端口转发中不能添加路由本机内网IP。<br>开启小米路由的SSH后，我们可以通过登陆SSH在命令行中手动添加防火墙中端口转发规则</p><h3 id="一、解除WEB管理页面访问限制"><a href="#一、解除WEB管理页面访问限制" class="headerlink" title="一、解除WEB管理页面访问限制"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E4%B8%80%E3%80%81%E8%A7%A3%E9%99%A4WEB%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2%E8%AE%BF%E9%97%AE%E9%99%90%E5%88%B6"></a>一、解除WEB管理页面访问限制</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysapihttpd/ //切换目录</span><br><span class="line">cp miwifi-webinitrd.conf miwifi-webinitrd.conf.bak //备份</span><br><span class="line">vi miwifi-webinitrd.conf //编辑miwifi-webinitrd.conf</span><br><span class="line"></span><br><span class="line">在如下位置插入代码set $finalvar &quot;$canproxy $isluci&quot;;：</span><br><span class="line"></span><br><span class="line">set $isluci &quot;1&quot;;</span><br><span class="line"></span><br><span class="line">set $finalvar &quot;$canproxy $isluci&quot;;</span><br><span class="line"></span><br><span class="line">/etc/init.d/sysapihttpd restart //重启httpd服务使配置生效</span><br></pre></td></tr></table></figure><p>二、手动添加防火墙端口转发规则，开启外网访问WEB管理和SSH</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cd / //回到根目录</span><br><span class="line">vi /etc/config/firewall //编辑防火墙配置</span><br><span class="line">1.添加WEB管理外网端口转发规则代码段：</span><br><span class="line">config redirect &#x27;MIWEB&#x27;</span><br><span class="line">option src &#x27;wan&#x27;</span><br><span class="line">option src_dport &#x27;1314&#x27;</span><br><span class="line">option dest_ip &#x27;10.0.0.1&#x27;</span><br><span class="line">option name &#x27;WEB&#x27;</span><br><span class="line">option ftype &#x27;1&#x27;</span><br><span class="line">option dest_port &#x27;80&#x27;</span><br><span class="line">option proto &#x27;tcp&#x27;</span><br><span class="line"></span><br><span class="line">WEB管理界面外网端口为1314 可通过外网IP:1314访问 (例 http://61.181.133.5:1314),绑定DDNS的用户可通过域名:1314进行访问。</span><br><span class="line">2.添加SSH外网登陆端口转发规则代码段：</span><br><span class="line">config redirect &#x27;Myssh&#x27;</span><br><span class="line">option src &#x27;wan&#x27;</span><br><span class="line">option src_dport &#x27;2345&#x27;</span><br><span class="line">option dest &#x27;lan&#x27;</span><br><span class="line">option dest_port &#x27;22&#x27;</span><br><span class="line">option proto &#x27;tcp&#x27;</span><br><span class="line"></span><br><span class="line">SSH登陆外网端口为2345</span><br><span class="line">重启防火墙使规则生效</span><br><span class="line"></span><br><span class="line">/etc/init.d/firewall restart</span><br></pre></td></tr></table></figure><h3 id="查看端口状态："><a href="#查看端口状态：" class="headerlink" title="查看端口状态："></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E7%8A%B6%E6%80%81%EF%BC%9A"></a>查看端口状态：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure><h2 id="Openwrt编译指南"><a href="#Openwrt编译指南" class="headerlink" title="Openwrt编译指南"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#Openwrt%E7%BC%96%E8%AF%91%E6%8C%87%E5%8D%97"></a>Openwrt编译指南</h2><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E5%AE%89%E8%A3%85%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83"></a>安装编译环境</h3><h4 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA"></a>安装虚拟机</h4><h4 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83"></a>配置环境</h4><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6"></a><a href="https://openwrt.org/docs/guide-developer/toolchain/install-buildsystem#debianubuntu">安装软件</a></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">根据系统选择合适的代码复制粘贴即可</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget</span><br></pre></td></tr></table></figure><h3 id="配置源码"><a href="#配置源码" class="headerlink" title="配置源码"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E9%85%8D%E7%BD%AE%E6%BA%90%E7%A0%81"></a><a href="https://openwrt.org/docs/guide-developer/toolchain/use-buildsystem">配置源码</a></h3><h4 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81"></a>下载源码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://git.openwrt.org/openwrt/openwrt.git [&lt;buildroot&gt;]</span><br></pre></td></tr></table></figure><h4 id="切换版本"><a href="#切换版本" class="headerlink" title="切换版本"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC"></a>切换版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag //查看版本</span><br><span class="line">git checkout v22.03.5 //切换到22.03.5</span><br></pre></td></tr></table></figure><h4 id="更新源码"><a href="#更新源码" class="headerlink" title="更新源码"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E6%9B%B4%E6%96%B0%E6%BA%90%E7%A0%81"></a>更新源码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="更新feeds"><a href="#更新feeds" class="headerlink" title="更新feeds"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E6%9B%B4%E6%96%B0feeds"></a>更新feeds</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Pull the latest updates for the feeds in case it became outdated.</span><br><span class="line"></span><br><span class="line">./scripts/feeds update -a</span><br><span class="line">Make the downloaded package/packages available in make menuconfig.</span><br><span class="line"></span><br><span class="line">./scripts/feeds install &lt;package_name&gt;</span><br><span class="line">./scripts/feeds install -a</span><br></pre></td></tr></table></figure><h4 id="配置软件"><a href="#配置软件" class="headerlink" title="配置软件"></a>配置软件<a href="https://wishzone.ltd/2023/08/24/Openwrt/#make-menuconfig"></a></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E7%BC%96%E8%AF%91"></a>编译</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make download V=s</span><br><span class="line">make V=s</span><br></pre></td></tr></table></figure><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a><a href="https://wishzone.ltd/2023/08/24/Openwrt/#%E8%8E%B7%E5%8F%96%E9%95%9C%E5%83%8F"></a>获取镜像</h3><p>进入/bin/target<br>xxx.combined.img即为编译的镜像</p><h2 id="多线与多拨"><a href="#多线与多拨" class="headerlink" title="多线与多拨"></a>多线与多拨</h2><p>提高网络带宽的方法有很多，单线多拨，多线单拨，多线多拨。其本质上都是获取多个IP地址；</p><h3 id="多线"><a href="#多线" class="headerlink" title="多线"></a>多线</h3><p>即设置多个WAN口，并通过DHCP或PPPoE获取多个不同的IP；</p><h3 id="多拨"><a href="#多拨" class="headerlink" title="多拨"></a>多拨</h3><p>实现的原理通常是先通过macvlan生成多个虚拟网口，类似内部虚拟出交换机，然后在交换机上面进行拨号获取IP，可以使用同样的账号拨号获取IP，也可以使用不同的账号拨号或者DHCP获取IP，具体得看发送端的限制。多拨实现的方法很简单，只需要利用macvlan，因此手写脚本就可以。</p><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>很多人将负载均衡和端口聚合混淆，简单来说端口聚合是需要有运营商控制的通过多通道提升网络带宽的方法，它需要发送端和接收端都是可控的，最终是只获得一个IP地址；而负载均衡仅仅是将多路的网络流量均匀的分发，最终获得的还是多个IP地址，它只需要接收端可控即可，因此对于一些高安全性的应用使用负载均衡可能会无法访问。</p><h3 id="安装软件-1"><a href="#安装软件-1" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install mwan3 luci-app-mwan3</span><br></pre></td></tr></table></figure><h3 id="配置软件-1"><a href="#配置软件-1" class="headerlink" title="配置软件"></a>配置软件</h3><p>首先获取多IP，在网络-负载均衡-接口中依据网络-接口中的名称依次设置相同的名称，跟踪的主机填写www.baidu.com,8.8.8.8,刷新连接跟踪表选择总是；</p><p>在成员中设置相同数量的成员，名称自定义，跃点数和权众都设置为1；</p><p>进入策略，添加一个策略，名称自定义，将所有成员都添加进去；</p><p>进入规则，添加一个规则，将设置的策略添加进去即可；</p><h3 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h3><p>进入状态-负载均衡可以看到网口是否在线，详细信息可以看到权重；</p><h2 id="常见问题及解决方法"><a href="#常见问题及解决方法" class="headerlink" title="常见问题及解决方法"></a>常见问题及解决方法</h2><h3 id="无法安装软件"><a href="#无法安装软件" class="headerlink" title="无法安装软件"></a>无法安装软件</h3><p>1.根据提示安装依赖软件</p><p>2.冲突时根据提示删除文件</p><p>如：删除 /etc/init.d/frpc 后再安装。</p><p>提示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# opkg install luci-app-frpc_1.2.1-1_all.ipk</span><br><span class="line">Installing luci-app-frpc (1.2.1-1) to root...</span><br><span class="line">Collected errors:</span><br><span class="line">   check_data_file_clashes: Package luci-app-frpc wants to install file /etc/init.d/frpc</span><br><span class="line">   But that file is already provided by package * frpc</span><br><span class="line">   opkg_install_cmd: Cannot install package luci-app-frpc.</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      <category domain="http://example.com/tags/openwrt/">openwrt</category>
      
      <category domain="http://example.com/tags/%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8/">小米路由器</category>
      
      
      <comments>http://example.com/2023/09/12/openwrt/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Linux</title>
      <link>http://example.com/2023/09/12/linux/</link>
      <guid>http://example.com/2023/09/12/linux/</guid>
      <pubDate>Tue, 12 Sep 2023 13:58:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Linux一些问题和解决方法&lt;/p&gt;
&lt;h1 id=&quot;远程访问方式对比&quot;&gt;&lt;a href=&quot;#远程访问方式对比&quot; class=&quot;headerlink&quot; title=&quot;远程访问方式对比&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://wishzone.ltd/2023/08/24</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Linux一些问题和解决方法</p><h1 id="远程访问方式对比"><a href="#远程访问方式对比" class="headerlink" title="远程访问方式对比"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94"></a>远程访问方式对比</h1><h2 id="XRDP"><a href="#XRDP" class="headerlink" title="XRDP"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#XRDP"></a>XRDP</h2><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E7%BC%BA%E7%82%B9%EF%BC%9A"></a>缺点：</h3><p>1.通常只支持X类的管理器<br>2.不能多用户同时登录<br>3.Linux下不支持UDP协议</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E4%BC%98%E7%82%B9%EF%BC%9A"></a>优点：</h3><p>1.安装包小<br>2.安装简单<br>3.画质高，速度快</p><h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#VNC"></a>VNC</h2><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E7%BC%BA%E7%82%B9"></a>缺点</h3><p>1.显示效果相对较差<br>2.需要HDMI诱骗器</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E4%BC%98%E7%82%B9"></a>优点</h3><p>1.支持UDP，相应快</p><h1 id="Linux系统设置开机启动的三种方式："><a href="#Linux系统设置开机启动的三种方式：" class="headerlink" title="Linux系统设置开机启动的三种方式："></a><a href="https://wishzone.ltd/2023/08/24/Linux/#Linux%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%EF%BC%9A"></a>Linux系统设置开机启动的三种方式：</h1><h2 id="1-在-etc-rc-local添加需要启动的命令"><a href="#1-在-etc-rc-local添加需要启动的命令" class="headerlink" title="1.在/etc/rc.local添加需要启动的命令"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#1-%E5%9C%A8-etc-rc-local%E6%B7%BB%E5%8A%A0%E9%9C%80%E8%A6%81%E5%90%AF%E5%8A%A8%E7%9A%84%E5%91%BD%E4%BB%A4"></a>1.在/etc/rc.local添加需要启动的命令</h2><p>这样系统在启动的时候会自动执行这些命令。</p><h2 id="2-使用systemd服务管理器"><a href="#2-使用systemd服务管理器" class="headerlink" title="2.使用systemd服务管理器"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#2-%E4%BD%BF%E7%94%A8systemd%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%8C"></a>2.使用systemd服务管理器</h2><p>在/etc/systemd/system目录下创建一个service文件，指定需要启动的服务和相关参数。</p><p>1</p><p>sudo nano /lib/systemd/system/frpc.service</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13</p><p>[Unit]  </p><h1 id="服务描述"><a href="#服务描述" class="headerlink" title="服务描述"></a>服务描述</h1><p>Description=frpc service<br>After=network.target syslog.target<br>Wants=network.target  </p><p>[Service]<br>Type=simple  </p><h1 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h1><p>ExecStart=/usr/local/frpc/frpc -c /usr/local/frpc/frpc.ini  </p><p>[Install]<br>WantedBy=multi-user.target</p><p>1<br>2</p><p>systemctl daemon-reload<br>sudo systemctl enable frpc</p><h2 id="3-将需要启动的命令添加到用户的bashrc文件中，这样每个用户登录时都会自动执行这些命令。"><a href="#3-将需要启动的命令添加到用户的bashrc文件中，这样每个用户登录时都会自动执行这些命令。" class="headerlink" title="3. 将需要启动的命令添加到用户的bashrc文件中，这样每个用户登录时都会自动执行这些命令。"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#3-%E5%B0%86%E9%9C%80%E8%A6%81%E5%90%AF%E5%8A%A8%E7%9A%84%E5%91%BD%E4%BB%A4%E6%B7%BB%E5%8A%A0%E5%88%B0%E7%94%A8%E6%88%B7%E7%9A%84bashrc%E6%96%87%E4%BB%B6%E4%B8%AD%EF%BC%8C%E8%BF%99%E6%A0%B7%E6%AF%8F%E4%B8%AA%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%97%B6%E9%83%BD%E4%BC%9A%E8%87%AA%E5%8A%A8%E6%89%A7%E8%A1%8C%E8%BF%99%E4%BA%9B%E5%91%BD%E4%BB%A4%E3%80%82"></a>3. 将需要启动的命令添加到用户的bashrc文件中，这样每个用户登录时都会自动执行这些命令。</h2><h1 id="退出XRDP未注销的用户"><a href="#退出XRDP未注销的用户" class="headerlink" title="退出XRDP未注销的用户"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E9%80%80%E5%87%BAXRDP%E6%9C%AA%E6%B3%A8%E9%94%80%E7%9A%84%E7%94%A8%E6%88%B7"></a>退出XRDP未注销的用户</h1><p>1<br>2</p><p>who -a //查看登录的用户<br>pkill -kill -t pts/3 //注销用户</p><h1 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E5%88%9B%E5%BB%BA%E6%96%B0%E7%94%A8%E6%88%B7"></a>创建新用户</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">apt install sudo</span><br><span class="line">sudo usermod -aG sudo username //username替换为所需的用户名</span><br><span class="line">nano /etc/default/useradd</span><br><span class="line">改/bin/sh为/bin/bash</span><br><span class="line">nano /etc/passwd</span><br><span class="line">改用户名后面的/bin/sh为/bin/bash</span><br><span class="line">设置免sudo</span><br><span class="line">sudo visudo</span><br><span class="line">在文件最后加上一句（改为自己的用户名）：</span><br><span class="line">wishzone ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h1 id="Ubuntu优化"><a href="#Ubuntu优化" class="headerlink" title="Ubuntu优化"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#Ubuntu%E4%BC%98%E5%8C%96"></a>Ubuntu优化</h1><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6"></a>安装软件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gparted htop net-tools putty vim xrdp tofrodos iproute2 gawk gcc g++ git make libncurses5-dev tftpd zlib1g:i386 libssl-dev flex bison libselinux1 gnupg wget diffstat chrpath socat xterm autoconf libtool tar unzip texinfo zlib1g-dev gcc-multilib build-essential libsdl1.2-dev libglib2.0-dev screen pax gzip automake tftpd-hpa ubuntu-restricted-extras gnome-tweaks gnome-shell-extension-manager indicator-multiload libncurses5 libtinfo5 libncurses5-dev libncursesw5-dev samba ssh</span><br><span class="line">sudo apt install tftpd-hpa ncurses-compat-libs</span><br><span class="line">service tftpd-hpa restart</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure dash (选NO）</span><br><span class="line">添加xrdp组：</span><br><span class="line">sudo adduser xrdp ssl-cert  </span><br></pre></td></tr></table></figure><h2 id="解决“色彩管理设备”"><a href="#解决“色彩管理设备”" class="headerlink" title="解决“色彩管理设备”"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E8%A7%A3%E5%86%B3%E2%80%9C%E8%89%B2%E5%BD%A9%E7%AE%A1%E7%90%86%E8%AE%BE%E5%A4%87%E2%80%9D"></a>解决“色彩管理设备”</h2><p>sudo nano /etc/polkit-1/localauthority/50-local.d/45-allow-colord.pkla</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7</p><p>[Allow Colord all Users]<br>Identity=unix-user:*<br>Action=org.freedesktop.color-manager.create-device;org.freedesktop.color-manager.create-profile;org.freedesktop.color-manager.delete-device;org.freedesktop.color-manager.delete-profile;org.freedesktop.color-manager.modify-device;org.freedesktop.color-manager.modify-profile<br>ResultAny=no<br>ResultInactive=no<br>ResultActive=yes</p><h2 id="解决“刷新系统软件源需要认证”"><a href="#解决“刷新系统软件源需要认证”" class="headerlink" title="解决“刷新系统软件源需要认证”"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E8%A7%A3%E5%86%B3%E2%80%9C%E5%88%B7%E6%96%B0%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E6%BA%90%E9%9C%80%E8%A6%81%E8%AE%A4%E8%AF%81%E2%80%9D"></a>解决“刷新系统软件源需要认证”</h2><p>nano /etc/polkit-1/localauthority/50-local.d/46-allow-packagekit.pkla</p><p>1<br>2<br>3<br>4<br>5<br>6</p><p>[Allow Refresh Repository all Users]<br>Identity=unix-user:*<br>Action=org.freedesktop.packagekit.system-sources-refresh<br>ResultAny=no<br>ResultInactive=no<br>ResultActive=yes</p><h2 id="解决“扫描WIFI需要认证”"><a href="#解决“扫描WIFI需要认证”" class="headerlink" title="解决“扫描WIFI需要认证”"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E8%A7%A3%E5%86%B3%E2%80%9C%E6%89%AB%E6%8F%8FWIFI%E9%9C%80%E8%A6%81%E8%AE%A4%E8%AF%81%E2%80%9D"></a>解决“扫描WIFI需要认证”</h2><p>sudo nano /etc/polkit-1/localauthority/50-local-d/allow-wifiscan</p><p>1<br>2<br>3<br>4<br>5<br>6</p><p>[Allow Wifi Scan]<br>Identity=unix-user:*<br>Action=org.freedesktop.NetworkManager.wifi.scan;org.freedesktop.NetworkManager.enable-disable-wifi;org.freedesktop.NetworkManager.settings.modify.own;org.freedesktop.NetworkManager.settings.modify.system;org.freedesktop.NetworkManager.network-control<br>ResultAny=yes<br>ResultInactive=yes<br>ResultActive=yes</p><h1 id="自定义二级域名"><a href="#自定义二级域名" class="headerlink" title="自定义二级域名"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D"></a>自定义二级域名</h1><p>在多人同时使用一个 frps 时，通过自定义二级域名的方式来使用会更加方便。</p><p>通过在 frps 的配置文件中配置 subdomain_host，就可以启用该特性。之后在 frpc 的 http、https 类型的代理中可以不配置 custom_domains，而是配置一个 subdomain 参数。</p><p>只需要将 *.{subdomain_host} 解析到 frps 所在服务器。之后用户可以通过 subdomain 自行指定自己的 web 服务所需要使用的二级域名，通过 {subdomain}.{subdomain_host} 来访问自己的 web 服务。</p><h2 id="frps-ini"><a href="#frps-ini" class="headerlink" title="frps.ini"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#frps-ini"></a>frps.ini</h2><p>[common]<br>subdomain_host = frps.com<br>将泛域名 *.frps.com 解析到 frps 所在服务器的 IP 地址。</p><h2 id="frpc-ini"><a href="#frpc-ini" class="headerlink" title="frpc.ini"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#frpc-ini"></a>frpc.ini</h2><p>[web]<br>type = http<br>local_port = 80<br>subdomain = test<br>frps 和 frpc 都启动成功后，通过 test.frps.com 就可以访问到内网的 web 服务。</p><p>注：如果 frps 配置了 subdomain_host，则 custom_domains 中不能是属于 subdomain_host 的子域名或者泛域名。</p><p>同一个 http 或 https 类型的代理中 custom_domains 和 subdomain 可以同时配置。</p><h1 id="改Python源"><a href="#改Python源" class="headerlink" title="改Python源"></a>改Python源</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~mkdir .pipsudo nano ~/.pip/pip.conf[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple/[install]trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure><h1 id="Ubuntu常见问题及解决办法"><a href="#Ubuntu常见问题及解决办法" class="headerlink" title="Ubuntu常见问题及解决办法"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#Ubuntu%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95"></a>Ubuntu常见问题及解决办法</h1><h2 id="由于没有公钥，无法验证下列签名：-NO-PUBKEY-76F1A20FF987672F"><a href="#由于没有公钥，无法验证下列签名：-NO-PUBKEY-76F1A20FF987672F" class="headerlink" title="由于没有公钥，无法验证下列签名： NO_PUBKEY 76F1A20FF987672F"></a><a href="https://wishzone.ltd/2023/08/24/Linux/#%E7%94%B1%E4%BA%8E%E6%B2%A1%E6%9C%89%E5%85%AC%E9%92%A5%EF%BC%8C%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81%E4%B8%8B%E5%88%97%E7%AD%BE%E5%90%8D%EF%BC%9A-NO-PUBKEY-76F1A20FF987672F"></a>由于没有公钥，无法验证下列签名： NO_PUBKEY 76F1A20FF987672F</h2><p>1</p><p>apt-key adv —keyserver keyserver.ubuntu.com —recv-keys ${PUBLIC_KEY_SIGN}</p><h2 id="Linux迁移硬盘导致启动进入紧急模式"><a href="#Linux迁移硬盘导致启动进入紧急模式" class="headerlink" title="Linux迁移硬盘导致启动进入紧急模式"></a>Linux迁移硬盘导致启动进入紧急模式</h2><p>参考</p><p><a href="https://help.aliyun.com/zh/ecs/use-cases/configure-uuids-in-the-fstab-file-to-automatically-attach-data-disks">https://help.aliyun.com/zh/ecs/use-cases/configure-uuids-in-the-fstab-file-to-automatically-attach-data-disks</a></p><p><a href="https://support.huaweicloud.com/trouble-ecs/ecs_trouble_0310.html">https://support.huaweicloud.com/trouble-ecs/ecs_trouble_0310.html</a></p><p>原因：通常是由于目的硬盘和源硬盘的某些分区的uuid不对映导致的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#输入密码进入系统</span><br><span class="line">#挂载所有分区并查看不能挂载的分区的名字</span><br><span class="line">mount -a</span><br><span class="line">#查询数据盘的UUID信息</span><br><span class="line">fdisk -lu#编辑挂载文件修改相应uuid即可</span><br><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      
      <comments>http://example.com/2023/09/12/linux/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据管理</title>
      <link>http://example.com/2023/09/12/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</link>
      <guid>http://example.com/2023/09/12/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</guid>
      <pubDate>Tue, 12 Sep 2023 13:57:04 GMT</pubDate>
      
        
        
      <description>&lt;p&gt; 发表于 2023-08-27   更新于 2023-08-28&lt;/p&gt;
&lt;p&gt;mysql数据管理&lt;/p&gt;
&lt;h1 id=&quot;Docker-WordPress搭建网站&quot;&gt;&lt;a href=&quot;#Docker-WordPress搭建网站&quot; class=&quot;headerlink&quot; ti</description>
        
      
      
      
      <content:encoded><![CDATA[<p> 发表于 2023-08-27   更新于 2023-08-28</p><p>mysql数据管理</p><h1 id="Docker-WordPress搭建网站"><a href="#Docker-WordPress搭建网站" class="headerlink" title="Docker+WordPress搭建网站"></a><a href="https://wishzone.ltd/2023/08/27/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/#Docker-WordPress%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99"></a>Docker+WordPress搭建网站</h1><p>1.本地安装好 Docker 软件<br>2.拉取 WordPress 镜像</p><p>1</p><p>docker pull wordpress</p><p>3.启动 MySQL 容器</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8</p><p>docker run -d -p 3123:3306 —name wpmysql -e MYSQL_ROOT_PASSWORD=123456 mysql  </p><p># run: 启动一个容器<br># -d: 启动的容器在后台运行<br># —name: 容器名 wpmysql<br># -e MYSQL_ROOT_PASSWORD: 设置 MySQL 的 root 密码<br># -p：映射端口，将容器的3306端口映射到主机的3123端口<br># mysql：启动的镜像，如果具体版本，这里也要加上具体版本号 mysql:5.2</p><p>4.启动 WordPress 容器，并连接到 MySQL 容器上</p><p>1<br>2<br>3<br>4</p><p>docker run -d -p 8088:80 —name wordpress —link wpmysql:mysql wordpress<br># -p：映射端口，本地访问路径：<a href="http://localhost:8088">http://localhost:8088</a><br># —link：将 wpmysql 容器挂载到 mysql 上，这样 WordPress 才能访问<br>不出意外的话，在浏览器打开后设置好数据库信息看到的是这样的：</p><p>5.配置Mysql</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12</p><p># 1.进入mysql容器<br>docker exec -it wpmysql bash<br># 2.登录mysql<br>mysql -uroot -p<br># 3.授权root用户在其他机器上运行：host为 % 表示不限制ip，默认的localhost表示本机使用<br>grant all on *.* to ‘root’@’%’;<br># 4.如果是 mysql8 版本，由于不支持动态修改密码验证，还需要更新root用户密码<br>alter user ‘root’@’%’ identified with mysql_native_password by ‘123456’;<br># 5.自己创建一个名字为 wordpress 的数据库(要跟wordpress安装是让配置的名字一致)<br>create database wordpress;<br># 6.刷新权限<br>flush privileges;</p><h1 id="Docker-Phpmyadmin"><a href="#Docker-Phpmyadmin" class="headerlink" title="Docker+Phpmyadmin"></a><a href="https://wishzone.ltd/2023/08/27/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/#Docker-Phpmyadmin"></a>Docker+Phpmyadmin</h1><p>1.本地安装好 Docker 软件<br>2.拉取 Phpmyadmin 镜像</p><p>1</p><p>docker pull phpmyadmin</p><p>3.启动 Phpmyadmin 容器</p><p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17</p><p>docker run —restart always —name myadmin -d -e PMA_ARBITRARY=1 -p 8080:80 phpmyadmin  </p><p>参数介绍：<br>PMA_ARBITRARY -设置为1时，将允许连接到任意服务器<br>PMA_HOST -定义MySQL服务器的地址/主机名<br>PMA_VERBOSE -定义MySQL服务器的详细名称<br>PMA_PORT -定义MySQL服务器的端口<br>PMA_HOSTS -定义逗号分隔的MySQL服务器的地址/主机名列表<br>PMA_VERBOSES -定义以逗号分隔的MySQL服务器详细名称列表<br>PMA_PORTS -定义以逗号分隔的MySQL服务器端口列表<br>PMA_USER和PMA_PASSWORD-定义用于配置身份验证方法的用户名<br>PMA_ABSOLUTE_URI -定义面向用户的URI<br>HIDE_PHP_VERSION-如果定义，则将隐藏php版本（expose_php = Off）。设置为任何值（例如HIDE_PHP_VERSION = true）。<br>UPLOAD_LIMIT -如果设置，将覆盖apache和php-fpm的默认值（默认值为2048 kb）<br>PMA_CONFIG_BASE64 -如果设置，将使用变量的base64解码内容覆盖默认的config.inc.php<br>PMA_USER_CONFIG_BASE64 -如果设置，将使用变量的base64解码内容覆盖默认的config.user.inc.php  </p><h1 id="phpmyadmin外链数据库或切换端口"><a href="#phpmyadmin外链数据库或切换端口" class="headerlink" title="phpmyadmin外链数据库或切换端口"></a><a href="https://wishzone.ltd/2023/08/27/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/#phpmyadmin%E5%A4%96%E9%93%BE%E6%95%B0%E6%8D%AE%E5%BA%93%E6%88%96%E5%88%87%E6%8D%A2%E7%AB%AF%E5%8F%A3"></a>phpmyadmin外链数据库或切换端口</h1><p>1.修改phpmyadmin目录中libraries文件夹下的config.default.php文件<br>2.查找[‘Servers’][$i][‘host’]= xxx，改成所需的地址；<br>查找[‘Servers’][$i][‘port’]= xxx，改成所需的端口；<br>查找[‘Servers’][$i][‘user’]= xxx，改成所需的用户；<br>查找[‘Servers’][$i][‘password’]= xxx，改成所需的用户；</p><h1 id="wordpress配置文件"><a href="#wordpress配置文件" class="headerlink" title="wordpress配置文件"></a><a href="https://wishzone.ltd/2023/08/27/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/#wordpress%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"></a>wordpress配置文件</h1><p>wp-config.php</p><h1 id="修改最大上传文件大小限制"><a href="#修改最大上传文件大小限制" class="headerlink" title="修改最大上传文件大小限制"></a><a href="https://wishzone.ltd/2023/08/27/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/#%E4%BF%AE%E6%94%B9%E6%9C%80%E5%A4%A7%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6"></a>修改最大上传文件大小限制</h1><p>可通过修改.htaccess文件完成<br>1、wordpress根目录下（/var/www/html）找到.htaccess文件<br>2、打开.htaccess文件并在module中间添加以下代码：<br>php_value upload_max_filesize 100M<br>php_value post_max_size 100M<br>将“100M”替换为您需要的大小。<br>3、保存并关闭.htaccess文件。</p><h2 id="服务器启动"><a href="#服务器启动" class="headerlink" title="服务器启动"></a>服务器启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MYSQL:</span><br><span class="line">docker run -d -p 3123:3306 --name=mysql --restart=always -e MYSQL_ROOT_PASSWORD=123456 wishzone/mysql docker-entrypoint.sh mysqld</span><br><span class="line">COMMAND:</span><br><span class="line">docker-entrypoint.sh mysqld</span><br><span class="line"></span><br><span class="line">PHPMYADMIN:</span><br><span class="line">sudo docker run --restart=always --name=myadmin -d -e PMA_ARBITRARY=1 -p 8080:80 wishzone/phpmyadmin /docker-entrypoint.sh apache2-foreground</span><br><span class="line">COMMAND:</span><br><span class="line">/docker-entrypoint.sh apache2-foreground</span><br><span class="line">IP:</span><br><span class="line">172.17.0.1:3123</span><br><span class="line"></span><br><span class="line">WORDPRESS:</span><br><span class="line">docker run -d -p 8088:80 --name=wordpress --restart=always --link mysql:mysql wishzone/wordpress docker-entrypoint.sh apache2-foreground</span><br><span class="line">COMMAND:</span><br><span class="line">docker-entrypoint.sh apache2-foreground</span><br></pre></td></tr></table></figure><h2 id="导入wordpress的idb文件到mysql"><a href="#导入wordpress的idb文件到mysql" class="headerlink" title="导入wordpress的idb文件到mysql"></a>导入wordpress的idb文件到mysql</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql bashmysql -uroot -pUSE wordpress;ALTER TABLE wp_commentmeta DISCARD TABLESPACE;ALTER TABLE wp_comments DISCARD TABLESPACE;ALTER TABLE wp_links DISCARD TABLESPACE;ALTER TABLE wp_options DISCARD TABLESPACE;ALTER TABLE wp_postmeta DISCARD TABLESPACE;ALTER TABLE wp_posts DISCARD TABLESPACE;ALTER TABLE wp_termmeta DISCARD TABLESPACE;ALTER TABLE wp_term_relationships DISCARD TABLESPACE;ALTER TABLE wp_terms DISCARD TABLESPACE;ALTER TABLE wp_term_taxonomy DISCARD TABLESPACE;ALTER TABLE wp_usermeta DISCARD TABLESPACE;ALTER TABLE wp_users DISCARD TABLESPACE;exitrm -rf /var/lib/mysql/wordpressexitdocker cp ~/wordpress mysql:/var/lib/mysqldocker exec -it mysql bashchown mysql:mysql /var/lib/mysql/wordpress/*mysql -uroot -pUSE wordpress;ALTER TABLE wp_commentmeta IMPORT TABLESPACE;ALTER TABLE wp_comments IMPORT TABLESPACE;ALTER TABLE wp_links IMPORT TABLESPACE;ALTER TABLE wp_options IMPORT TABLESPACE;ALTER TABLE wp_postmeta IMPORT TABLESPACE;ALTER TABLE wp_posts IMPORT TABLESPACE;ALTER TABLE wp_termmeta IMPORT TABLESPACE;ALTER TABLE wp_term_relationships IMPORT TABLESPACE;ALTER TABLE wp_terms IMPORT TABLESPACE;ALTER TABLE wp_term_taxonomy IMPORT TABLESPACE;ALTER TABLE wp_usermeta IMPORT TABLESPACE;ALTER TABLE wp_users IMPORT TABLESPACE;exitexit</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Linux/">Linux</category>
      
      
      <category domain="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <comments>http://example.com/2023/09/12/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
